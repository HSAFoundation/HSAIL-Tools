version 0:20131224:$full:$small;
extension "amd:gcn";
extension "IMAGE";

function &TestFunc()()
{

@aux_label_0:
	ret;
};
global_s32 &GlobalVar;
group_s32 &GroupVar;
private_s32 &PrivateVar;
readonly_s32 &ReadonlyVar;
global_roimg &GlobalROImg;
global_rwimg &GlobalRWImg;
readonly_roimg &ReadonlyROImg;
readonly_rwimg &ReadonlyRWImg;
global_samp &GlobalSamp;
readonly_samp &ReadonlySamp;
global_sig32 &GlobalSig32;
readonly_sig32 &ReadonlySig32;
global_sig64 &GlobalSig64;
readonly_sig64 &ReadonlySig64;
fbarrier &Fbarrier;

kernel &Test()
{
	// 
	// Next sample
	// 
	add_u32	$s0, $s0, $s0;
	// 
	add_u32	$s0, 4294967295, $s0;
	add_u32	$s0, WAVESIZE, $s0;
	add_u32	$s0, $s0, 4294967295;
	add_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	add_u64	$d0, $d0, $d0;
	// 
	add_u64	$d0, 18446744073709551615, $d0;
	add_u64	$d0, WAVESIZE, $d0;
	add_u64	$d0, $d0, 18446744073709551615;
	add_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	add_s32	$s0, $s0, $s0;
	// 
	add_s32	$s0, -1, $s0;
	add_s32	$s0, WAVESIZE, $s0;
	add_s32	$s0, $s0, -1;
	add_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	add_s64	$d0, $d0, $d0;
	// 
	add_s64	$d0, -1, $d0;
	add_s64	$d0, WAVESIZE, $d0;
	add_s64	$d0, $d0, -1;
	add_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	add_f16	$s0, $s0, $s0;
	// 
	add_ftz_f16	$s0, $s0, $s0;
	add_zero_f16	$s0, $s0, $s0;
	add_up_f16	$s0, $s0, $s0;
	add_down_f16	$s0, $s0, $s0;
	add_f16	$s0, 0Hffff, $s0;
	add_f16	$s0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	add_f32	$s0, $s0, $s0;
	// 
	add_ftz_f32	$s0, $s0, $s0;
	add_zero_f32	$s0, $s0, $s0;
	add_up_f32	$s0, $s0, $s0;
	add_down_f32	$s0, $s0, $s0;
	add_f32	$s0, 0Fffffffff, $s0;
	add_f32	$s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	add_f64	$d0, $d0, $d0;
	// 
	add_ftz_f64	$d0, $d0, $d0;
	add_zero_f64	$d0, $d0, $d0;
	add_up_f64	$d0, $d0, $d0;
	add_down_f64	$d0, $d0, $d0;
	add_f64	$d0, 0Dffffffffffffffff, $d0;
	add_f64	$d0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	add_pp_u8x4	$s0, $s0, $s0;
	// 
	add_ps_u8x4	$s0, $s0, $s0;
	add_sp_u8x4	$s0, $s0, $s0;
	add_ss_u8x4	$s0, $s0, $s0;
	add_pp_sat_u8x4	$s0, $s0, $s0;
	add_ps_sat_u8x4	$s0, $s0, $s0;
	add_sp_sat_u8x4	$s0, $s0, $s0;
	add_ss_sat_u8x4	$s0, $s0, $s0;
	add_pp_u8x4	$s0, _u8x4(255,255,255,255), $s0;
	add_pp_u8x4	$s0, $s0, _u8x4(255,255,255,255);
	// 
	// Next sample
	// 
	add_pp_u16x2	$s0, $s0, $s0;
	// 
	add_ps_u16x2	$s0, $s0, $s0;
	add_sp_u16x2	$s0, $s0, $s0;
	add_ss_u16x2	$s0, $s0, $s0;
	add_pp_sat_u16x2	$s0, $s0, $s0;
	add_ps_sat_u16x2	$s0, $s0, $s0;
	add_sp_sat_u16x2	$s0, $s0, $s0;
	add_ss_sat_u16x2	$s0, $s0, $s0;
	add_pp_u16x2	$s0, _u16x2(65535,65535), $s0;
	add_pp_u16x2	$s0, $s0, _u16x2(65535,65535);
	// 
	// Next sample
	// 
	add_pp_s8x4	$s0, $s0, $s0;
	// 
	add_ps_s8x4	$s0, $s0, $s0;
	add_sp_s8x4	$s0, $s0, $s0;
	add_ss_s8x4	$s0, $s0, $s0;
	add_pp_sat_s8x4	$s0, $s0, $s0;
	add_ps_sat_s8x4	$s0, $s0, $s0;
	add_sp_sat_s8x4	$s0, $s0, $s0;
	add_ss_sat_s8x4	$s0, $s0, $s0;
	add_pp_s8x4	$s0, _s8x4(-1,-1,-1,-1), $s0;
	add_pp_s8x4	$s0, $s0, _s8x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	add_pp_s16x2	$s0, $s0, $s0;
	// 
	add_ps_s16x2	$s0, $s0, $s0;
	add_sp_s16x2	$s0, $s0, $s0;
	add_ss_s16x2	$s0, $s0, $s0;
	add_pp_sat_s16x2	$s0, $s0, $s0;
	add_ps_sat_s16x2	$s0, $s0, $s0;
	add_sp_sat_s16x2	$s0, $s0, $s0;
	add_ss_sat_s16x2	$s0, $s0, $s0;
	add_pp_s16x2	$s0, _s16x2(-1,-1), $s0;
	add_pp_s16x2	$s0, $s0, _s16x2(-1,-1);
	// 
	// Next sample
	// 
	add_pp_f16x2	$s0, $s0, $s0;
	// 
	add_ftz_pp_f16x2	$s0, $s0, $s0;
	add_ps_f16x2	$s0, $s0, $s0;
	add_sp_f16x2	$s0, $s0, $s0;
	add_ss_f16x2	$s0, $s0, $s0;
	add_zero_pp_f16x2	$s0, $s0, $s0;
	add_up_pp_f16x2	$s0, $s0, $s0;
	add_down_pp_f16x2	$s0, $s0, $s0;
	add_pp_f16x2	$s0, _f16x2(0Hffff,0Hffff), $s0;
	add_pp_f16x2	$s0, $s0, _f16x2(0Hffff,0Hffff);
	// 
	// Next sample
	// 
	add_pp_u8x8	$d0, $d0, $d0;
	// 
	add_ps_u8x8	$d0, $d0, $d0;
	add_sp_u8x8	$d0, $d0, $d0;
	add_ss_u8x8	$d0, $d0, $d0;
	add_pp_sat_u8x8	$d0, $d0, $d0;
	add_ps_sat_u8x8	$d0, $d0, $d0;
	add_sp_sat_u8x8	$d0, $d0, $d0;
	add_ss_sat_u8x8	$d0, $d0, $d0;
	add_pp_u8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $d0;
	add_pp_u8x8	$d0, $d0, _u8x8(255,255,255,255,255,255,255,255);
	// 
	// Next sample
	// 
	add_pp_u16x4	$d0, $d0, $d0;
	// 
	add_ps_u16x4	$d0, $d0, $d0;
	add_sp_u16x4	$d0, $d0, $d0;
	add_ss_u16x4	$d0, $d0, $d0;
	add_pp_sat_u16x4	$d0, $d0, $d0;
	add_ps_sat_u16x4	$d0, $d0, $d0;
	add_sp_sat_u16x4	$d0, $d0, $d0;
	add_ss_sat_u16x4	$d0, $d0, $d0;
	add_pp_u16x4	$d0, _u16x4(65535,65535,65535,65535), $d0;
	add_pp_u16x4	$d0, $d0, _u16x4(65535,65535,65535,65535);
	// 
	// Next sample
	// 
	add_pp_u32x2	$d0, $d0, $d0;
	// 
	add_ps_u32x2	$d0, $d0, $d0;
	add_sp_u32x2	$d0, $d0, $d0;
	add_ss_u32x2	$d0, $d0, $d0;
	add_pp_sat_u32x2	$d0, $d0, $d0;
	add_ps_sat_u32x2	$d0, $d0, $d0;
	add_sp_sat_u32x2	$d0, $d0, $d0;
	add_ss_sat_u32x2	$d0, $d0, $d0;
	add_pp_u32x2	$d0, _u32x2(4294967295,4294967295), $d0;
	add_pp_u32x2	$d0, $d0, _u32x2(4294967295,4294967295);
	// 
	// Next sample
	// 
	add_pp_s8x8	$d0, $d0, $d0;
	// 
	add_ps_s8x8	$d0, $d0, $d0;
	add_sp_s8x8	$d0, $d0, $d0;
	add_ss_s8x8	$d0, $d0, $d0;
	add_pp_sat_s8x8	$d0, $d0, $d0;
	add_ps_sat_s8x8	$d0, $d0, $d0;
	add_sp_sat_s8x8	$d0, $d0, $d0;
	add_ss_sat_s8x8	$d0, $d0, $d0;
	add_pp_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $d0;
	add_pp_s8x8	$d0, $d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1);
	// 
	// Next sample
	// 
	add_pp_s16x4	$d0, $d0, $d0;
	// 
	add_ps_s16x4	$d0, $d0, $d0;
	add_sp_s16x4	$d0, $d0, $d0;
	add_ss_s16x4	$d0, $d0, $d0;
	add_pp_sat_s16x4	$d0, $d0, $d0;
	add_ps_sat_s16x4	$d0, $d0, $d0;
	add_sp_sat_s16x4	$d0, $d0, $d0;
	add_ss_sat_s16x4	$d0, $d0, $d0;
	add_pp_s16x4	$d0, _s16x4(-1,-1,-1,-1), $d0;
	add_pp_s16x4	$d0, $d0, _s16x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	add_pp_s32x2	$d0, $d0, $d0;
	// 
	add_ps_s32x2	$d0, $d0, $d0;
	add_sp_s32x2	$d0, $d0, $d0;
	add_ss_s32x2	$d0, $d0, $d0;
	add_pp_sat_s32x2	$d0, $d0, $d0;
	add_ps_sat_s32x2	$d0, $d0, $d0;
	add_sp_sat_s32x2	$d0, $d0, $d0;
	add_ss_sat_s32x2	$d0, $d0, $d0;
	add_pp_s32x2	$d0, _s32x2(-1,-1), $d0;
	add_pp_s32x2	$d0, $d0, _s32x2(-1,-1);
	// 
	// Next sample
	// 
	add_pp_f16x4	$d0, $d0, $d0;
	// 
	add_ftz_pp_f16x4	$d0, $d0, $d0;
	add_ps_f16x4	$d0, $d0, $d0;
	add_sp_f16x4	$d0, $d0, $d0;
	add_ss_f16x4	$d0, $d0, $d0;
	add_zero_pp_f16x4	$d0, $d0, $d0;
	add_up_pp_f16x4	$d0, $d0, $d0;
	add_down_pp_f16x4	$d0, $d0, $d0;
	add_pp_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), $d0;
	add_pp_f16x4	$d0, $d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	// 
	// Next sample
	// 
	add_pp_f32x2	$d0, $d0, $d0;
	// 
	add_ftz_pp_f32x2	$d0, $d0, $d0;
	add_ps_f32x2	$d0, $d0, $d0;
	add_sp_f32x2	$d0, $d0, $d0;
	add_ss_f32x2	$d0, $d0, $d0;
	add_zero_pp_f32x2	$d0, $d0, $d0;
	add_up_pp_f32x2	$d0, $d0, $d0;
	add_down_pp_f32x2	$d0, $d0, $d0;
	add_pp_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff), $d0;
	add_pp_f32x2	$d0, $d0, _f32x2(0Fffffffff,0Fffffffff);
	// 
	// Next sample
	// 
	add_pp_u8x16	$q0, $q0, $q0;
	// 
	add_ps_u8x16	$q0, $q0, $q0;
	add_sp_u8x16	$q0, $q0, $q0;
	add_ss_u8x16	$q0, $q0, $q0;
	add_pp_sat_u8x16	$q0, $q0, $q0;
	add_ps_sat_u8x16	$q0, $q0, $q0;
	add_sp_sat_u8x16	$q0, $q0, $q0;
	add_ss_sat_u8x16	$q0, $q0, $q0;
	add_pp_u8x16	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $q0;
	add_pp_u8x16	$q0, $q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113);
	// 
	// Next sample
	// 
	add_pp_u16x8	$q0, $q0, $q0;
	// 
	add_ps_u16x8	$q0, $q0, $q0;
	add_sp_u16x8	$q0, $q0, $q0;
	add_ss_u16x8	$q0, $q0, $q0;
	add_pp_sat_u16x8	$q0, $q0, $q0;
	add_ps_sat_u16x8	$q0, $q0, $q0;
	add_sp_sat_u16x8	$q0, $q0, $q0;
	add_ss_sat_u16x8	$q0, $q0, $q0;
	add_pp_u16x8	$q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	add_pp_u16x8	$q0, $q0, _u16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	add_pp_u32x4	$q0, $q0, $q0;
	// 
	add_ps_u32x4	$q0, $q0, $q0;
	add_sp_u32x4	$q0, $q0, $q0;
	add_ss_u32x4	$q0, $q0, $q0;
	add_pp_sat_u32x4	$q0, $q0, $q0;
	add_ps_sat_u32x4	$q0, $q0, $q0;
	add_sp_sat_u32x4	$q0, $q0, $q0;
	add_ss_sat_u32x4	$q0, $q0, $q0;
	add_pp_u32x4	$q0, _u32x4(0,0,1810905006,845094001), $q0;
	add_pp_u32x4	$q0, $q0, _u32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	add_pp_u64x2	$q0, $q0, $q0;
	// 
	add_ps_u64x2	$q0, $q0, $q0;
	add_sp_u64x2	$q0, $q0, $q0;
	add_ss_u64x2	$q0, $q0, $q0;
	add_pp_sat_u64x2	$q0, $q0, $q0;
	add_ps_sat_u64x2	$q0, $q0, $q0;
	add_sp_sat_u64x2	$q0, $q0, $q0;
	add_ss_sat_u64x2	$q0, $q0, $q0;
	add_pp_u64x2	$q0, _u64x2(0,7777777777777777777), $q0;
	add_pp_u64x2	$q0, $q0, _u64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	add_pp_s8x16	$q0, $q0, $q0;
	// 
	add_ps_s8x16	$q0, $q0, $q0;
	add_sp_s8x16	$q0, $q0, $q0;
	add_ss_s8x16	$q0, $q0, $q0;
	add_pp_sat_s8x16	$q0, $q0, $q0;
	add_ps_sat_s8x16	$q0, $q0, $q0;
	add_sp_sat_s8x16	$q0, $q0, $q0;
	add_ss_sat_s8x16	$q0, $q0, $q0;
	add_pp_s8x16	$q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113), $q0;
	add_pp_s8x16	$q0, $q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113);
	// 
	// Next sample
	// 
	add_pp_s16x8	$q0, $q0, $q0;
	// 
	add_ps_s16x8	$q0, $q0, $q0;
	add_sp_s16x8	$q0, $q0, $q0;
	add_ss_s16x8	$q0, $q0, $q0;
	add_pp_sat_s16x8	$q0, $q0, $q0;
	add_ps_sat_s16x8	$q0, $q0, $q0;
	add_sp_sat_s16x8	$q0, $q0, $q0;
	add_ss_sat_s16x8	$q0, $q0, $q0;
	add_pp_s16x8	$q0, _s16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	add_pp_s16x8	$q0, $q0, _s16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	add_pp_s32x4	$q0, $q0, $q0;
	// 
	add_ps_s32x4	$q0, $q0, $q0;
	add_sp_s32x4	$q0, $q0, $q0;
	add_ss_s32x4	$q0, $q0, $q0;
	add_pp_sat_s32x4	$q0, $q0, $q0;
	add_ps_sat_s32x4	$q0, $q0, $q0;
	add_sp_sat_s32x4	$q0, $q0, $q0;
	add_ss_sat_s32x4	$q0, $q0, $q0;
	add_pp_s32x4	$q0, _s32x4(0,0,1810905006,845094001), $q0;
	add_pp_s32x4	$q0, $q0, _s32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	add_pp_s64x2	$q0, $q0, $q0;
	// 
	add_ps_s64x2	$q0, $q0, $q0;
	add_sp_s64x2	$q0, $q0, $q0;
	add_ss_s64x2	$q0, $q0, $q0;
	add_pp_sat_s64x2	$q0, $q0, $q0;
	add_ps_sat_s64x2	$q0, $q0, $q0;
	add_sp_sat_s64x2	$q0, $q0, $q0;
	add_ss_sat_s64x2	$q0, $q0, $q0;
	add_pp_s64x2	$q0, _s64x2(0,7777777777777777777), $q0;
	add_pp_s64x2	$q0, $q0, _s64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	add_pp_f16x8	$q0, $q0, $q0;
	// 
	add_ftz_pp_f16x8	$q0, $q0, $q0;
	add_ps_f16x8	$q0, $q0, $q0;
	add_sp_f16x8	$q0, $q0, $q0;
	add_ss_f16x8	$q0, $q0, $q0;
	add_zero_pp_f16x8	$q0, $q0, $q0;
	add_up_pp_f16x8	$q0, $q0, $q0;
	add_down_pp_f16x8	$q0, $q0, $q0;
	add_pp_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71), $q0;
	add_pp_f16x8	$q0, $q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	// 
	// Next sample
	// 
	add_pp_f32x4	$q0, $q0, $q0;
	// 
	add_ftz_pp_f32x4	$q0, $q0, $q0;
	add_ps_f32x4	$q0, $q0, $q0;
	add_sp_f32x4	$q0, $q0, $q0;
	add_ss_f32x4	$q0, $q0, $q0;
	add_zero_pp_f32x4	$q0, $q0, $q0;
	add_up_pp_f32x4	$q0, $q0, $q0;
	add_down_pp_f32x4	$q0, $q0, $q0;
	add_pp_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71), $q0;
	add_pp_f32x4	$q0, $q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	// 
	// Next sample
	// 
	add_pp_f64x2	$q0, $q0, $q0;
	// 
	add_ftz_pp_f64x2	$q0, $q0, $q0;
	add_ps_f64x2	$q0, $q0, $q0;
	add_sp_f64x2	$q0, $q0, $q0;
	add_ss_f64x2	$q0, $q0, $q0;
	add_zero_pp_f64x2	$q0, $q0, $q0;
	add_up_pp_f64x2	$q0, $q0, $q0;
	add_down_pp_f64x2	$q0, $q0, $q0;
	add_pp_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71), $q0;
	add_pp_f64x2	$q0, $q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	// 
	// Next sample
	// 
	sub_u32	$s0, $s0, $s0;
	// 
	sub_u32	$s0, 4294967295, $s0;
	sub_u32	$s0, WAVESIZE, $s0;
	sub_u32	$s0, $s0, 4294967295;
	sub_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	sub_u64	$d0, $d0, $d0;
	// 
	sub_u64	$d0, 18446744073709551615, $d0;
	sub_u64	$d0, WAVESIZE, $d0;
	sub_u64	$d0, $d0, 18446744073709551615;
	sub_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	sub_s32	$s0, $s0, $s0;
	// 
	sub_s32	$s0, -1, $s0;
	sub_s32	$s0, WAVESIZE, $s0;
	sub_s32	$s0, $s0, -1;
	sub_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	sub_s64	$d0, $d0, $d0;
	// 
	sub_s64	$d0, -1, $d0;
	sub_s64	$d0, WAVESIZE, $d0;
	sub_s64	$d0, $d0, -1;
	sub_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	sub_f16	$s0, $s0, $s0;
	// 
	sub_ftz_f16	$s0, $s0, $s0;
	sub_zero_f16	$s0, $s0, $s0;
	sub_up_f16	$s0, $s0, $s0;
	sub_down_f16	$s0, $s0, $s0;
	sub_f16	$s0, 0Hffff, $s0;
	sub_f16	$s0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	sub_f32	$s0, $s0, $s0;
	// 
	sub_ftz_f32	$s0, $s0, $s0;
	sub_zero_f32	$s0, $s0, $s0;
	sub_up_f32	$s0, $s0, $s0;
	sub_down_f32	$s0, $s0, $s0;
	sub_f32	$s0, 0Fffffffff, $s0;
	sub_f32	$s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	sub_f64	$d0, $d0, $d0;
	// 
	sub_ftz_f64	$d0, $d0, $d0;
	sub_zero_f64	$d0, $d0, $d0;
	sub_up_f64	$d0, $d0, $d0;
	sub_down_f64	$d0, $d0, $d0;
	sub_f64	$d0, 0Dffffffffffffffff, $d0;
	sub_f64	$d0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	sub_pp_u8x4	$s0, $s0, $s0;
	// 
	sub_ps_u8x4	$s0, $s0, $s0;
	sub_sp_u8x4	$s0, $s0, $s0;
	sub_ss_u8x4	$s0, $s0, $s0;
	sub_pp_sat_u8x4	$s0, $s0, $s0;
	sub_ps_sat_u8x4	$s0, $s0, $s0;
	sub_sp_sat_u8x4	$s0, $s0, $s0;
	sub_ss_sat_u8x4	$s0, $s0, $s0;
	sub_pp_u8x4	$s0, _u8x4(255,255,255,255), $s0;
	sub_pp_u8x4	$s0, $s0, _u8x4(255,255,255,255);
	// 
	// Next sample
	// 
	sub_pp_u16x2	$s0, $s0, $s0;
	// 
	sub_ps_u16x2	$s0, $s0, $s0;
	sub_sp_u16x2	$s0, $s0, $s0;
	sub_ss_u16x2	$s0, $s0, $s0;
	sub_pp_sat_u16x2	$s0, $s0, $s0;
	sub_ps_sat_u16x2	$s0, $s0, $s0;
	sub_sp_sat_u16x2	$s0, $s0, $s0;
	sub_ss_sat_u16x2	$s0, $s0, $s0;
	sub_pp_u16x2	$s0, _u16x2(65535,65535), $s0;
	sub_pp_u16x2	$s0, $s0, _u16x2(65535,65535);
	// 
	// Next sample
	// 
	sub_pp_s8x4	$s0, $s0, $s0;
	// 
	sub_ps_s8x4	$s0, $s0, $s0;
	sub_sp_s8x4	$s0, $s0, $s0;
	sub_ss_s8x4	$s0, $s0, $s0;
	sub_pp_sat_s8x4	$s0, $s0, $s0;
	sub_ps_sat_s8x4	$s0, $s0, $s0;
	sub_sp_sat_s8x4	$s0, $s0, $s0;
	sub_ss_sat_s8x4	$s0, $s0, $s0;
	sub_pp_s8x4	$s0, _s8x4(-1,-1,-1,-1), $s0;
	sub_pp_s8x4	$s0, $s0, _s8x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	sub_pp_s16x2	$s0, $s0, $s0;
	// 
	sub_ps_s16x2	$s0, $s0, $s0;
	sub_sp_s16x2	$s0, $s0, $s0;
	sub_ss_s16x2	$s0, $s0, $s0;
	sub_pp_sat_s16x2	$s0, $s0, $s0;
	sub_ps_sat_s16x2	$s0, $s0, $s0;
	sub_sp_sat_s16x2	$s0, $s0, $s0;
	sub_ss_sat_s16x2	$s0, $s0, $s0;
	sub_pp_s16x2	$s0, _s16x2(-1,-1), $s0;
	sub_pp_s16x2	$s0, $s0, _s16x2(-1,-1);
	// 
	// Next sample
	// 
	sub_pp_f16x2	$s0, $s0, $s0;
	// 
	sub_ftz_pp_f16x2	$s0, $s0, $s0;
	sub_ps_f16x2	$s0, $s0, $s0;
	sub_sp_f16x2	$s0, $s0, $s0;
	sub_ss_f16x2	$s0, $s0, $s0;
	sub_zero_pp_f16x2	$s0, $s0, $s0;
	sub_up_pp_f16x2	$s0, $s0, $s0;
	sub_down_pp_f16x2	$s0, $s0, $s0;
	sub_pp_f16x2	$s0, _f16x2(0Hffff,0Hffff), $s0;
	sub_pp_f16x2	$s0, $s0, _f16x2(0Hffff,0Hffff);
	// 
	// Next sample
	// 
	sub_pp_u8x8	$d0, $d0, $d0;
	// 
	sub_ps_u8x8	$d0, $d0, $d0;
	sub_sp_u8x8	$d0, $d0, $d0;
	sub_ss_u8x8	$d0, $d0, $d0;
	sub_pp_sat_u8x8	$d0, $d0, $d0;
	sub_ps_sat_u8x8	$d0, $d0, $d0;
	sub_sp_sat_u8x8	$d0, $d0, $d0;
	sub_ss_sat_u8x8	$d0, $d0, $d0;
	sub_pp_u8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $d0;
	sub_pp_u8x8	$d0, $d0, _u8x8(255,255,255,255,255,255,255,255);
	// 
	// Next sample
	// 
	sub_pp_u16x4	$d0, $d0, $d0;
	// 
	sub_ps_u16x4	$d0, $d0, $d0;
	sub_sp_u16x4	$d0, $d0, $d0;
	sub_ss_u16x4	$d0, $d0, $d0;
	sub_pp_sat_u16x4	$d0, $d0, $d0;
	sub_ps_sat_u16x4	$d0, $d0, $d0;
	sub_sp_sat_u16x4	$d0, $d0, $d0;
	sub_ss_sat_u16x4	$d0, $d0, $d0;
	sub_pp_u16x4	$d0, _u16x4(65535,65535,65535,65535), $d0;
	sub_pp_u16x4	$d0, $d0, _u16x4(65535,65535,65535,65535);
	// 
	// Next sample
	// 
	sub_pp_u32x2	$d0, $d0, $d0;
	// 
	sub_ps_u32x2	$d0, $d0, $d0;
	sub_sp_u32x2	$d0, $d0, $d0;
	sub_ss_u32x2	$d0, $d0, $d0;
	sub_pp_sat_u32x2	$d0, $d0, $d0;
	sub_ps_sat_u32x2	$d0, $d0, $d0;
	sub_sp_sat_u32x2	$d0, $d0, $d0;
	sub_ss_sat_u32x2	$d0, $d0, $d0;
	sub_pp_u32x2	$d0, _u32x2(4294967295,4294967295), $d0;
	sub_pp_u32x2	$d0, $d0, _u32x2(4294967295,4294967295);
	// 
	// Next sample
	// 
	sub_pp_s8x8	$d0, $d0, $d0;
	// 
	sub_ps_s8x8	$d0, $d0, $d0;
	sub_sp_s8x8	$d0, $d0, $d0;
	sub_ss_s8x8	$d0, $d0, $d0;
	sub_pp_sat_s8x8	$d0, $d0, $d0;
	sub_ps_sat_s8x8	$d0, $d0, $d0;
	sub_sp_sat_s8x8	$d0, $d0, $d0;
	sub_ss_sat_s8x8	$d0, $d0, $d0;
	sub_pp_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $d0;
	sub_pp_s8x8	$d0, $d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1);
	// 
	// Next sample
	// 
	sub_pp_s16x4	$d0, $d0, $d0;
	// 
	sub_ps_s16x4	$d0, $d0, $d0;
	sub_sp_s16x4	$d0, $d0, $d0;
	sub_ss_s16x4	$d0, $d0, $d0;
	sub_pp_sat_s16x4	$d0, $d0, $d0;
	sub_ps_sat_s16x4	$d0, $d0, $d0;
	sub_sp_sat_s16x4	$d0, $d0, $d0;
	sub_ss_sat_s16x4	$d0, $d0, $d0;
	sub_pp_s16x4	$d0, _s16x4(-1,-1,-1,-1), $d0;
	sub_pp_s16x4	$d0, $d0, _s16x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	sub_pp_s32x2	$d0, $d0, $d0;
	// 
	sub_ps_s32x2	$d0, $d0, $d0;
	sub_sp_s32x2	$d0, $d0, $d0;
	sub_ss_s32x2	$d0, $d0, $d0;
	sub_pp_sat_s32x2	$d0, $d0, $d0;
	sub_ps_sat_s32x2	$d0, $d0, $d0;
	sub_sp_sat_s32x2	$d0, $d0, $d0;
	sub_ss_sat_s32x2	$d0, $d0, $d0;
	sub_pp_s32x2	$d0, _s32x2(-1,-1), $d0;
	sub_pp_s32x2	$d0, $d0, _s32x2(-1,-1);
	// 
	// Next sample
	// 
	sub_pp_f16x4	$d0, $d0, $d0;
	// 
	sub_ftz_pp_f16x4	$d0, $d0, $d0;
	sub_ps_f16x4	$d0, $d0, $d0;
	sub_sp_f16x4	$d0, $d0, $d0;
	sub_ss_f16x4	$d0, $d0, $d0;
	sub_zero_pp_f16x4	$d0, $d0, $d0;
	sub_up_pp_f16x4	$d0, $d0, $d0;
	sub_down_pp_f16x4	$d0, $d0, $d0;
	sub_pp_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), $d0;
	sub_pp_f16x4	$d0, $d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	// 
	// Next sample
	// 
	sub_pp_f32x2	$d0, $d0, $d0;
	// 
	sub_ftz_pp_f32x2	$d0, $d0, $d0;
	sub_ps_f32x2	$d0, $d0, $d0;
	sub_sp_f32x2	$d0, $d0, $d0;
	sub_ss_f32x2	$d0, $d0, $d0;
	sub_zero_pp_f32x2	$d0, $d0, $d0;
	sub_up_pp_f32x2	$d0, $d0, $d0;
	sub_down_pp_f32x2	$d0, $d0, $d0;
	sub_pp_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff), $d0;
	sub_pp_f32x2	$d0, $d0, _f32x2(0Fffffffff,0Fffffffff);
	// 
	// Next sample
	// 
	sub_pp_u8x16	$q0, $q0, $q0;
	// 
	sub_ps_u8x16	$q0, $q0, $q0;
	sub_sp_u8x16	$q0, $q0, $q0;
	sub_ss_u8x16	$q0, $q0, $q0;
	sub_pp_sat_u8x16	$q0, $q0, $q0;
	sub_ps_sat_u8x16	$q0, $q0, $q0;
	sub_sp_sat_u8x16	$q0, $q0, $q0;
	sub_ss_sat_u8x16	$q0, $q0, $q0;
	sub_pp_u8x16	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $q0;
	sub_pp_u8x16	$q0, $q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113);
	// 
	// Next sample
	// 
	sub_pp_u16x8	$q0, $q0, $q0;
	// 
	sub_ps_u16x8	$q0, $q0, $q0;
	sub_sp_u16x8	$q0, $q0, $q0;
	sub_ss_u16x8	$q0, $q0, $q0;
	sub_pp_sat_u16x8	$q0, $q0, $q0;
	sub_ps_sat_u16x8	$q0, $q0, $q0;
	sub_sp_sat_u16x8	$q0, $q0, $q0;
	sub_ss_sat_u16x8	$q0, $q0, $q0;
	sub_pp_u16x8	$q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	sub_pp_u16x8	$q0, $q0, _u16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	sub_pp_u32x4	$q0, $q0, $q0;
	// 
	sub_ps_u32x4	$q0, $q0, $q0;
	sub_sp_u32x4	$q0, $q0, $q0;
	sub_ss_u32x4	$q0, $q0, $q0;
	sub_pp_sat_u32x4	$q0, $q0, $q0;
	sub_ps_sat_u32x4	$q0, $q0, $q0;
	sub_sp_sat_u32x4	$q0, $q0, $q0;
	sub_ss_sat_u32x4	$q0, $q0, $q0;
	sub_pp_u32x4	$q0, _u32x4(0,0,1810905006,845094001), $q0;
	sub_pp_u32x4	$q0, $q0, _u32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	sub_pp_u64x2	$q0, $q0, $q0;
	// 
	sub_ps_u64x2	$q0, $q0, $q0;
	sub_sp_u64x2	$q0, $q0, $q0;
	sub_ss_u64x2	$q0, $q0, $q0;
	sub_pp_sat_u64x2	$q0, $q0, $q0;
	sub_ps_sat_u64x2	$q0, $q0, $q0;
	sub_sp_sat_u64x2	$q0, $q0, $q0;
	sub_ss_sat_u64x2	$q0, $q0, $q0;
	sub_pp_u64x2	$q0, _u64x2(0,7777777777777777777), $q0;
	sub_pp_u64x2	$q0, $q0, _u64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	sub_pp_s8x16	$q0, $q0, $q0;
	// 
	sub_ps_s8x16	$q0, $q0, $q0;
	sub_sp_s8x16	$q0, $q0, $q0;
	sub_ss_s8x16	$q0, $q0, $q0;
	sub_pp_sat_s8x16	$q0, $q0, $q0;
	sub_ps_sat_s8x16	$q0, $q0, $q0;
	sub_sp_sat_s8x16	$q0, $q0, $q0;
	sub_ss_sat_s8x16	$q0, $q0, $q0;
	sub_pp_s8x16	$q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113), $q0;
	sub_pp_s8x16	$q0, $q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113);
	// 
	// Next sample
	// 
	sub_pp_s16x8	$q0, $q0, $q0;
	// 
	sub_ps_s16x8	$q0, $q0, $q0;
	sub_sp_s16x8	$q0, $q0, $q0;
	sub_ss_s16x8	$q0, $q0, $q0;
	sub_pp_sat_s16x8	$q0, $q0, $q0;
	sub_ps_sat_s16x8	$q0, $q0, $q0;
	sub_sp_sat_s16x8	$q0, $q0, $q0;
	sub_ss_sat_s16x8	$q0, $q0, $q0;
	sub_pp_s16x8	$q0, _s16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	sub_pp_s16x8	$q0, $q0, _s16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	sub_pp_s32x4	$q0, $q0, $q0;
	// 
	sub_ps_s32x4	$q0, $q0, $q0;
	sub_sp_s32x4	$q0, $q0, $q0;
	sub_ss_s32x4	$q0, $q0, $q0;
	sub_pp_sat_s32x4	$q0, $q0, $q0;
	sub_ps_sat_s32x4	$q0, $q0, $q0;
	sub_sp_sat_s32x4	$q0, $q0, $q0;
	sub_ss_sat_s32x4	$q0, $q0, $q0;
	sub_pp_s32x4	$q0, _s32x4(0,0,1810905006,845094001), $q0;
	sub_pp_s32x4	$q0, $q0, _s32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	sub_pp_s64x2	$q0, $q0, $q0;
	// 
	sub_ps_s64x2	$q0, $q0, $q0;
	sub_sp_s64x2	$q0, $q0, $q0;
	sub_ss_s64x2	$q0, $q0, $q0;
	sub_pp_sat_s64x2	$q0, $q0, $q0;
	sub_ps_sat_s64x2	$q0, $q0, $q0;
	sub_sp_sat_s64x2	$q0, $q0, $q0;
	sub_ss_sat_s64x2	$q0, $q0, $q0;
	sub_pp_s64x2	$q0, _s64x2(0,7777777777777777777), $q0;
	sub_pp_s64x2	$q0, $q0, _s64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	sub_pp_f16x8	$q0, $q0, $q0;
	// 
	sub_ftz_pp_f16x8	$q0, $q0, $q0;
	sub_ps_f16x8	$q0, $q0, $q0;
	sub_sp_f16x8	$q0, $q0, $q0;
	sub_ss_f16x8	$q0, $q0, $q0;
	sub_zero_pp_f16x8	$q0, $q0, $q0;
	sub_up_pp_f16x8	$q0, $q0, $q0;
	sub_down_pp_f16x8	$q0, $q0, $q0;
	sub_pp_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71), $q0;
	sub_pp_f16x8	$q0, $q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	// 
	// Next sample
	// 
	sub_pp_f32x4	$q0, $q0, $q0;
	// 
	sub_ftz_pp_f32x4	$q0, $q0, $q0;
	sub_ps_f32x4	$q0, $q0, $q0;
	sub_sp_f32x4	$q0, $q0, $q0;
	sub_ss_f32x4	$q0, $q0, $q0;
	sub_zero_pp_f32x4	$q0, $q0, $q0;
	sub_up_pp_f32x4	$q0, $q0, $q0;
	sub_down_pp_f32x4	$q0, $q0, $q0;
	sub_pp_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71), $q0;
	sub_pp_f32x4	$q0, $q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	// 
	// Next sample
	// 
	sub_pp_f64x2	$q0, $q0, $q0;
	// 
	sub_ftz_pp_f64x2	$q0, $q0, $q0;
	sub_ps_f64x2	$q0, $q0, $q0;
	sub_sp_f64x2	$q0, $q0, $q0;
	sub_ss_f64x2	$q0, $q0, $q0;
	sub_zero_pp_f64x2	$q0, $q0, $q0;
	sub_up_pp_f64x2	$q0, $q0, $q0;
	sub_down_pp_f64x2	$q0, $q0, $q0;
	sub_pp_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71), $q0;
	sub_pp_f64x2	$q0, $q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	// 
	// Next sample
	// 
	max_u32	$s0, $s0, $s0;
	// 
	max_u32	$s0, 4294967295, $s0;
	max_u32	$s0, WAVESIZE, $s0;
	max_u32	$s0, $s0, 4294967295;
	max_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	max_u64	$d0, $d0, $d0;
	// 
	max_u64	$d0, 18446744073709551615, $d0;
	max_u64	$d0, WAVESIZE, $d0;
	max_u64	$d0, $d0, 18446744073709551615;
	max_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	max_s32	$s0, $s0, $s0;
	// 
	max_s32	$s0, -1, $s0;
	max_s32	$s0, WAVESIZE, $s0;
	max_s32	$s0, $s0, -1;
	max_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	max_s64	$d0, $d0, $d0;
	// 
	max_s64	$d0, -1, $d0;
	max_s64	$d0, WAVESIZE, $d0;
	max_s64	$d0, $d0, -1;
	max_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	max_f16	$s0, $s0, $s0;
	// 
	max_ftz_f16	$s0, $s0, $s0;
	max_f16	$s0, 0Hffff, $s0;
	max_f16	$s0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	max_f32	$s0, $s0, $s0;
	// 
	max_ftz_f32	$s0, $s0, $s0;
	max_f32	$s0, 0Fffffffff, $s0;
	max_f32	$s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	max_f64	$d0, $d0, $d0;
	// 
	max_ftz_f64	$d0, $d0, $d0;
	max_f64	$d0, 0Dffffffffffffffff, $d0;
	max_f64	$d0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	max_pp_u8x4	$s0, $s0, $s0;
	// 
	max_ps_u8x4	$s0, $s0, $s0;
	max_sp_u8x4	$s0, $s0, $s0;
	max_ss_u8x4	$s0, $s0, $s0;
	max_pp_u8x4	$s0, _u8x4(255,255,255,255), $s0;
	max_pp_u8x4	$s0, $s0, _u8x4(255,255,255,255);
	// 
	// Next sample
	// 
	max_pp_u16x2	$s0, $s0, $s0;
	// 
	max_ps_u16x2	$s0, $s0, $s0;
	max_sp_u16x2	$s0, $s0, $s0;
	max_ss_u16x2	$s0, $s0, $s0;
	max_pp_u16x2	$s0, _u16x2(65535,65535), $s0;
	max_pp_u16x2	$s0, $s0, _u16x2(65535,65535);
	// 
	// Next sample
	// 
	max_pp_s8x4	$s0, $s0, $s0;
	// 
	max_ps_s8x4	$s0, $s0, $s0;
	max_sp_s8x4	$s0, $s0, $s0;
	max_ss_s8x4	$s0, $s0, $s0;
	max_pp_s8x4	$s0, _s8x4(-1,-1,-1,-1), $s0;
	max_pp_s8x4	$s0, $s0, _s8x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	max_pp_s16x2	$s0, $s0, $s0;
	// 
	max_ps_s16x2	$s0, $s0, $s0;
	max_sp_s16x2	$s0, $s0, $s0;
	max_ss_s16x2	$s0, $s0, $s0;
	max_pp_s16x2	$s0, _s16x2(-1,-1), $s0;
	max_pp_s16x2	$s0, $s0, _s16x2(-1,-1);
	// 
	// Next sample
	// 
	max_pp_f16x2	$s0, $s0, $s0;
	// 
	max_ftz_pp_f16x2	$s0, $s0, $s0;
	max_ps_f16x2	$s0, $s0, $s0;
	max_sp_f16x2	$s0, $s0, $s0;
	max_ss_f16x2	$s0, $s0, $s0;
	max_pp_f16x2	$s0, _f16x2(0Hffff,0Hffff), $s0;
	max_pp_f16x2	$s0, $s0, _f16x2(0Hffff,0Hffff);
	// 
	// Next sample
	// 
	max_pp_u8x8	$d0, $d0, $d0;
	// 
	max_ps_u8x8	$d0, $d0, $d0;
	max_sp_u8x8	$d0, $d0, $d0;
	max_ss_u8x8	$d0, $d0, $d0;
	max_pp_u8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $d0;
	max_pp_u8x8	$d0, $d0, _u8x8(255,255,255,255,255,255,255,255);
	// 
	// Next sample
	// 
	max_pp_u16x4	$d0, $d0, $d0;
	// 
	max_ps_u16x4	$d0, $d0, $d0;
	max_sp_u16x4	$d0, $d0, $d0;
	max_ss_u16x4	$d0, $d0, $d0;
	max_pp_u16x4	$d0, _u16x4(65535,65535,65535,65535), $d0;
	max_pp_u16x4	$d0, $d0, _u16x4(65535,65535,65535,65535);
	// 
	// Next sample
	// 
	max_pp_u32x2	$d0, $d0, $d0;
	// 
	max_ps_u32x2	$d0, $d0, $d0;
	max_sp_u32x2	$d0, $d0, $d0;
	max_ss_u32x2	$d0, $d0, $d0;
	max_pp_u32x2	$d0, _u32x2(4294967295,4294967295), $d0;
	max_pp_u32x2	$d0, $d0, _u32x2(4294967295,4294967295);
	// 
	// Next sample
	// 
	max_pp_s8x8	$d0, $d0, $d0;
	// 
	max_ps_s8x8	$d0, $d0, $d0;
	max_sp_s8x8	$d0, $d0, $d0;
	max_ss_s8x8	$d0, $d0, $d0;
	max_pp_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $d0;
	max_pp_s8x8	$d0, $d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1);
	// 
	// Next sample
	// 
	max_pp_s16x4	$d0, $d0, $d0;
	// 
	max_ps_s16x4	$d0, $d0, $d0;
	max_sp_s16x4	$d0, $d0, $d0;
	max_ss_s16x4	$d0, $d0, $d0;
	max_pp_s16x4	$d0, _s16x4(-1,-1,-1,-1), $d0;
	max_pp_s16x4	$d0, $d0, _s16x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	max_pp_s32x2	$d0, $d0, $d0;
	// 
	max_ps_s32x2	$d0, $d0, $d0;
	max_sp_s32x2	$d0, $d0, $d0;
	max_ss_s32x2	$d0, $d0, $d0;
	max_pp_s32x2	$d0, _s32x2(-1,-1), $d0;
	max_pp_s32x2	$d0, $d0, _s32x2(-1,-1);
	// 
	// Next sample
	// 
	max_pp_f16x4	$d0, $d0, $d0;
	// 
	max_ftz_pp_f16x4	$d0, $d0, $d0;
	max_ps_f16x4	$d0, $d0, $d0;
	max_sp_f16x4	$d0, $d0, $d0;
	max_ss_f16x4	$d0, $d0, $d0;
	max_pp_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), $d0;
	max_pp_f16x4	$d0, $d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	// 
	// Next sample
	// 
	max_pp_f32x2	$d0, $d0, $d0;
	// 
	max_ftz_pp_f32x2	$d0, $d0, $d0;
	max_ps_f32x2	$d0, $d0, $d0;
	max_sp_f32x2	$d0, $d0, $d0;
	max_ss_f32x2	$d0, $d0, $d0;
	max_pp_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff), $d0;
	max_pp_f32x2	$d0, $d0, _f32x2(0Fffffffff,0Fffffffff);
	// 
	// Next sample
	// 
	max_pp_u8x16	$q0, $q0, $q0;
	// 
	max_ps_u8x16	$q0, $q0, $q0;
	max_sp_u8x16	$q0, $q0, $q0;
	max_ss_u8x16	$q0, $q0, $q0;
	max_pp_u8x16	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $q0;
	max_pp_u8x16	$q0, $q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113);
	// 
	// Next sample
	// 
	max_pp_u16x8	$q0, $q0, $q0;
	// 
	max_ps_u16x8	$q0, $q0, $q0;
	max_sp_u16x8	$q0, $q0, $q0;
	max_ss_u16x8	$q0, $q0, $q0;
	max_pp_u16x8	$q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	max_pp_u16x8	$q0, $q0, _u16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	max_pp_u32x4	$q0, $q0, $q0;
	// 
	max_ps_u32x4	$q0, $q0, $q0;
	max_sp_u32x4	$q0, $q0, $q0;
	max_ss_u32x4	$q0, $q0, $q0;
	max_pp_u32x4	$q0, _u32x4(0,0,1810905006,845094001), $q0;
	max_pp_u32x4	$q0, $q0, _u32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	max_pp_u64x2	$q0, $q0, $q0;
	// 
	max_ps_u64x2	$q0, $q0, $q0;
	max_sp_u64x2	$q0, $q0, $q0;
	max_ss_u64x2	$q0, $q0, $q0;
	max_pp_u64x2	$q0, _u64x2(0,7777777777777777777), $q0;
	max_pp_u64x2	$q0, $q0, _u64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	max_pp_s8x16	$q0, $q0, $q0;
	// 
	max_ps_s8x16	$q0, $q0, $q0;
	max_sp_s8x16	$q0, $q0, $q0;
	max_ss_s8x16	$q0, $q0, $q0;
	max_pp_s8x16	$q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113), $q0;
	max_pp_s8x16	$q0, $q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113);
	// 
	// Next sample
	// 
	max_pp_s16x8	$q0, $q0, $q0;
	// 
	max_ps_s16x8	$q0, $q0, $q0;
	max_sp_s16x8	$q0, $q0, $q0;
	max_ss_s16x8	$q0, $q0, $q0;
	max_pp_s16x8	$q0, _s16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	max_pp_s16x8	$q0, $q0, _s16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	max_pp_s32x4	$q0, $q0, $q0;
	// 
	max_ps_s32x4	$q0, $q0, $q0;
	max_sp_s32x4	$q0, $q0, $q0;
	max_ss_s32x4	$q0, $q0, $q0;
	max_pp_s32x4	$q0, _s32x4(0,0,1810905006,845094001), $q0;
	max_pp_s32x4	$q0, $q0, _s32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	max_pp_s64x2	$q0, $q0, $q0;
	// 
	max_ps_s64x2	$q0, $q0, $q0;
	max_sp_s64x2	$q0, $q0, $q0;
	max_ss_s64x2	$q0, $q0, $q0;
	max_pp_s64x2	$q0, _s64x2(0,7777777777777777777), $q0;
	max_pp_s64x2	$q0, $q0, _s64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	max_pp_f16x8	$q0, $q0, $q0;
	// 
	max_ftz_pp_f16x8	$q0, $q0, $q0;
	max_ps_f16x8	$q0, $q0, $q0;
	max_sp_f16x8	$q0, $q0, $q0;
	max_ss_f16x8	$q0, $q0, $q0;
	max_pp_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71), $q0;
	max_pp_f16x8	$q0, $q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	// 
	// Next sample
	// 
	max_pp_f32x4	$q0, $q0, $q0;
	// 
	max_ftz_pp_f32x4	$q0, $q0, $q0;
	max_ps_f32x4	$q0, $q0, $q0;
	max_sp_f32x4	$q0, $q0, $q0;
	max_ss_f32x4	$q0, $q0, $q0;
	max_pp_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71), $q0;
	max_pp_f32x4	$q0, $q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	// 
	// Next sample
	// 
	max_pp_f64x2	$q0, $q0, $q0;
	// 
	max_ftz_pp_f64x2	$q0, $q0, $q0;
	max_ps_f64x2	$q0, $q0, $q0;
	max_sp_f64x2	$q0, $q0, $q0;
	max_ss_f64x2	$q0, $q0, $q0;
	max_pp_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71), $q0;
	max_pp_f64x2	$q0, $q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	// 
	// Next sample
	// 
	min_u32	$s0, $s0, $s0;
	// 
	min_u32	$s0, 4294967295, $s0;
	min_u32	$s0, WAVESIZE, $s0;
	min_u32	$s0, $s0, 4294967295;
	min_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	min_u64	$d0, $d0, $d0;
	// 
	min_u64	$d0, 18446744073709551615, $d0;
	min_u64	$d0, WAVESIZE, $d0;
	min_u64	$d0, $d0, 18446744073709551615;
	min_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	min_s32	$s0, $s0, $s0;
	// 
	min_s32	$s0, -1, $s0;
	min_s32	$s0, WAVESIZE, $s0;
	min_s32	$s0, $s0, -1;
	min_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	min_s64	$d0, $d0, $d0;
	// 
	min_s64	$d0, -1, $d0;
	min_s64	$d0, WAVESIZE, $d0;
	min_s64	$d0, $d0, -1;
	min_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	min_f16	$s0, $s0, $s0;
	// 
	min_ftz_f16	$s0, $s0, $s0;
	min_f16	$s0, 0Hffff, $s0;
	min_f16	$s0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	min_f32	$s0, $s0, $s0;
	// 
	min_ftz_f32	$s0, $s0, $s0;
	min_f32	$s0, 0Fffffffff, $s0;
	min_f32	$s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	min_f64	$d0, $d0, $d0;
	// 
	min_ftz_f64	$d0, $d0, $d0;
	min_f64	$d0, 0Dffffffffffffffff, $d0;
	min_f64	$d0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	min_pp_u8x4	$s0, $s0, $s0;
	// 
	min_ps_u8x4	$s0, $s0, $s0;
	min_sp_u8x4	$s0, $s0, $s0;
	min_ss_u8x4	$s0, $s0, $s0;
	min_pp_u8x4	$s0, _u8x4(255,255,255,255), $s0;
	min_pp_u8x4	$s0, $s0, _u8x4(255,255,255,255);
	// 
	// Next sample
	// 
	min_pp_u16x2	$s0, $s0, $s0;
	// 
	min_ps_u16x2	$s0, $s0, $s0;
	min_sp_u16x2	$s0, $s0, $s0;
	min_ss_u16x2	$s0, $s0, $s0;
	min_pp_u16x2	$s0, _u16x2(65535,65535), $s0;
	min_pp_u16x2	$s0, $s0, _u16x2(65535,65535);
	// 
	// Next sample
	// 
	min_pp_s8x4	$s0, $s0, $s0;
	// 
	min_ps_s8x4	$s0, $s0, $s0;
	min_sp_s8x4	$s0, $s0, $s0;
	min_ss_s8x4	$s0, $s0, $s0;
	min_pp_s8x4	$s0, _s8x4(-1,-1,-1,-1), $s0;
	min_pp_s8x4	$s0, $s0, _s8x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	min_pp_s16x2	$s0, $s0, $s0;
	// 
	min_ps_s16x2	$s0, $s0, $s0;
	min_sp_s16x2	$s0, $s0, $s0;
	min_ss_s16x2	$s0, $s0, $s0;
	min_pp_s16x2	$s0, _s16x2(-1,-1), $s0;
	min_pp_s16x2	$s0, $s0, _s16x2(-1,-1);
	// 
	// Next sample
	// 
	min_pp_f16x2	$s0, $s0, $s0;
	// 
	min_ftz_pp_f16x2	$s0, $s0, $s0;
	min_ps_f16x2	$s0, $s0, $s0;
	min_sp_f16x2	$s0, $s0, $s0;
	min_ss_f16x2	$s0, $s0, $s0;
	min_pp_f16x2	$s0, _f16x2(0Hffff,0Hffff), $s0;
	min_pp_f16x2	$s0, $s0, _f16x2(0Hffff,0Hffff);
	// 
	// Next sample
	// 
	min_pp_u8x8	$d0, $d0, $d0;
	// 
	min_ps_u8x8	$d0, $d0, $d0;
	min_sp_u8x8	$d0, $d0, $d0;
	min_ss_u8x8	$d0, $d0, $d0;
	min_pp_u8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $d0;
	min_pp_u8x8	$d0, $d0, _u8x8(255,255,255,255,255,255,255,255);
	// 
	// Next sample
	// 
	min_pp_u16x4	$d0, $d0, $d0;
	// 
	min_ps_u16x4	$d0, $d0, $d0;
	min_sp_u16x4	$d0, $d0, $d0;
	min_ss_u16x4	$d0, $d0, $d0;
	min_pp_u16x4	$d0, _u16x4(65535,65535,65535,65535), $d0;
	min_pp_u16x4	$d0, $d0, _u16x4(65535,65535,65535,65535);
	// 
	// Next sample
	// 
	min_pp_u32x2	$d0, $d0, $d0;
	// 
	min_ps_u32x2	$d0, $d0, $d0;
	min_sp_u32x2	$d0, $d0, $d0;
	min_ss_u32x2	$d0, $d0, $d0;
	min_pp_u32x2	$d0, _u32x2(4294967295,4294967295), $d0;
	min_pp_u32x2	$d0, $d0, _u32x2(4294967295,4294967295);
	// 
	// Next sample
	// 
	min_pp_s8x8	$d0, $d0, $d0;
	// 
	min_ps_s8x8	$d0, $d0, $d0;
	min_sp_s8x8	$d0, $d0, $d0;
	min_ss_s8x8	$d0, $d0, $d0;
	min_pp_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $d0;
	min_pp_s8x8	$d0, $d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1);
	// 
	// Next sample
	// 
	min_pp_s16x4	$d0, $d0, $d0;
	// 
	min_ps_s16x4	$d0, $d0, $d0;
	min_sp_s16x4	$d0, $d0, $d0;
	min_ss_s16x4	$d0, $d0, $d0;
	min_pp_s16x4	$d0, _s16x4(-1,-1,-1,-1), $d0;
	min_pp_s16x4	$d0, $d0, _s16x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	min_pp_s32x2	$d0, $d0, $d0;
	// 
	min_ps_s32x2	$d0, $d0, $d0;
	min_sp_s32x2	$d0, $d0, $d0;
	min_ss_s32x2	$d0, $d0, $d0;
	min_pp_s32x2	$d0, _s32x2(-1,-1), $d0;
	min_pp_s32x2	$d0, $d0, _s32x2(-1,-1);
	// 
	// Next sample
	// 
	min_pp_f16x4	$d0, $d0, $d0;
	// 
	min_ftz_pp_f16x4	$d0, $d0, $d0;
	min_ps_f16x4	$d0, $d0, $d0;
	min_sp_f16x4	$d0, $d0, $d0;
	min_ss_f16x4	$d0, $d0, $d0;
	min_pp_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), $d0;
	min_pp_f16x4	$d0, $d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	// 
	// Next sample
	// 
	min_pp_f32x2	$d0, $d0, $d0;
	// 
	min_ftz_pp_f32x2	$d0, $d0, $d0;
	min_ps_f32x2	$d0, $d0, $d0;
	min_sp_f32x2	$d0, $d0, $d0;
	min_ss_f32x2	$d0, $d0, $d0;
	min_pp_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff), $d0;
	min_pp_f32x2	$d0, $d0, _f32x2(0Fffffffff,0Fffffffff);
	// 
	// Next sample
	// 
	min_pp_u8x16	$q0, $q0, $q0;
	// 
	min_ps_u8x16	$q0, $q0, $q0;
	min_sp_u8x16	$q0, $q0, $q0;
	min_ss_u8x16	$q0, $q0, $q0;
	min_pp_u8x16	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $q0;
	min_pp_u8x16	$q0, $q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113);
	// 
	// Next sample
	// 
	min_pp_u16x8	$q0, $q0, $q0;
	// 
	min_ps_u16x8	$q0, $q0, $q0;
	min_sp_u16x8	$q0, $q0, $q0;
	min_ss_u16x8	$q0, $q0, $q0;
	min_pp_u16x8	$q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	min_pp_u16x8	$q0, $q0, _u16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	min_pp_u32x4	$q0, $q0, $q0;
	// 
	min_ps_u32x4	$q0, $q0, $q0;
	min_sp_u32x4	$q0, $q0, $q0;
	min_ss_u32x4	$q0, $q0, $q0;
	min_pp_u32x4	$q0, _u32x4(0,0,1810905006,845094001), $q0;
	min_pp_u32x4	$q0, $q0, _u32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	min_pp_u64x2	$q0, $q0, $q0;
	// 
	min_ps_u64x2	$q0, $q0, $q0;
	min_sp_u64x2	$q0, $q0, $q0;
	min_ss_u64x2	$q0, $q0, $q0;
	min_pp_u64x2	$q0, _u64x2(0,7777777777777777777), $q0;
	min_pp_u64x2	$q0, $q0, _u64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	min_pp_s8x16	$q0, $q0, $q0;
	// 
	min_ps_s8x16	$q0, $q0, $q0;
	min_sp_s8x16	$q0, $q0, $q0;
	min_ss_s8x16	$q0, $q0, $q0;
	min_pp_s8x16	$q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113), $q0;
	min_pp_s8x16	$q0, $q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113);
	// 
	// Next sample
	// 
	min_pp_s16x8	$q0, $q0, $q0;
	// 
	min_ps_s16x8	$q0, $q0, $q0;
	min_sp_s16x8	$q0, $q0, $q0;
	min_ss_s16x8	$q0, $q0, $q0;
	min_pp_s16x8	$q0, _s16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	min_pp_s16x8	$q0, $q0, _s16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	min_pp_s32x4	$q0, $q0, $q0;
	// 
	min_ps_s32x4	$q0, $q0, $q0;
	min_sp_s32x4	$q0, $q0, $q0;
	min_ss_s32x4	$q0, $q0, $q0;
	min_pp_s32x4	$q0, _s32x4(0,0,1810905006,845094001), $q0;
	min_pp_s32x4	$q0, $q0, _s32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	min_pp_s64x2	$q0, $q0, $q0;
	// 
	min_ps_s64x2	$q0, $q0, $q0;
	min_sp_s64x2	$q0, $q0, $q0;
	min_ss_s64x2	$q0, $q0, $q0;
	min_pp_s64x2	$q0, _s64x2(0,7777777777777777777), $q0;
	min_pp_s64x2	$q0, $q0, _s64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	min_pp_f16x8	$q0, $q0, $q0;
	// 
	min_ftz_pp_f16x8	$q0, $q0, $q0;
	min_ps_f16x8	$q0, $q0, $q0;
	min_sp_f16x8	$q0, $q0, $q0;
	min_ss_f16x8	$q0, $q0, $q0;
	min_pp_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71), $q0;
	min_pp_f16x8	$q0, $q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	// 
	// Next sample
	// 
	min_pp_f32x4	$q0, $q0, $q0;
	// 
	min_ftz_pp_f32x4	$q0, $q0, $q0;
	min_ps_f32x4	$q0, $q0, $q0;
	min_sp_f32x4	$q0, $q0, $q0;
	min_ss_f32x4	$q0, $q0, $q0;
	min_pp_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71), $q0;
	min_pp_f32x4	$q0, $q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	// 
	// Next sample
	// 
	min_pp_f64x2	$q0, $q0, $q0;
	// 
	min_ftz_pp_f64x2	$q0, $q0, $q0;
	min_ps_f64x2	$q0, $q0, $q0;
	min_sp_f64x2	$q0, $q0, $q0;
	min_ss_f64x2	$q0, $q0, $q0;
	min_pp_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71), $q0;
	min_pp_f64x2	$q0, $q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	// 
	// Next sample
	// 
	mul_u32	$s0, $s0, $s0;
	// 
	mul_u32	$s0, 4294967295, $s0;
	mul_u32	$s0, WAVESIZE, $s0;
	mul_u32	$s0, $s0, 4294967295;
	mul_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	mul_u64	$d0, $d0, $d0;
	// 
	mul_u64	$d0, 18446744073709551615, $d0;
	mul_u64	$d0, WAVESIZE, $d0;
	mul_u64	$d0, $d0, 18446744073709551615;
	mul_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	mul_s32	$s0, $s0, $s0;
	// 
	mul_s32	$s0, -1, $s0;
	mul_s32	$s0, WAVESIZE, $s0;
	mul_s32	$s0, $s0, -1;
	mul_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	mul_s64	$d0, $d0, $d0;
	// 
	mul_s64	$d0, -1, $d0;
	mul_s64	$d0, WAVESIZE, $d0;
	mul_s64	$d0, $d0, -1;
	mul_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	mul_f16	$s0, $s0, $s0;
	// 
	mul_ftz_f16	$s0, $s0, $s0;
	mul_zero_f16	$s0, $s0, $s0;
	mul_up_f16	$s0, $s0, $s0;
	mul_down_f16	$s0, $s0, $s0;
	mul_f16	$s0, 0Hffff, $s0;
	mul_f16	$s0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	mul_f32	$s0, $s0, $s0;
	// 
	mul_ftz_f32	$s0, $s0, $s0;
	mul_zero_f32	$s0, $s0, $s0;
	mul_up_f32	$s0, $s0, $s0;
	mul_down_f32	$s0, $s0, $s0;
	mul_f32	$s0, 0Fffffffff, $s0;
	mul_f32	$s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	mul_f64	$d0, $d0, $d0;
	// 
	mul_ftz_f64	$d0, $d0, $d0;
	mul_zero_f64	$d0, $d0, $d0;
	mul_up_f64	$d0, $d0, $d0;
	mul_down_f64	$d0, $d0, $d0;
	mul_f64	$d0, 0Dffffffffffffffff, $d0;
	mul_f64	$d0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	mul_pp_u8x4	$s0, $s0, $s0;
	// 
	mul_ps_u8x4	$s0, $s0, $s0;
	mul_sp_u8x4	$s0, $s0, $s0;
	mul_ss_u8x4	$s0, $s0, $s0;
	mul_pp_sat_u8x4	$s0, $s0, $s0;
	mul_ps_sat_u8x4	$s0, $s0, $s0;
	mul_sp_sat_u8x4	$s0, $s0, $s0;
	mul_ss_sat_u8x4	$s0, $s0, $s0;
	mul_pp_u8x4	$s0, _u8x4(255,255,255,255), $s0;
	mul_pp_u8x4	$s0, $s0, _u8x4(255,255,255,255);
	// 
	// Next sample
	// 
	mul_pp_u16x2	$s0, $s0, $s0;
	// 
	mul_ps_u16x2	$s0, $s0, $s0;
	mul_sp_u16x2	$s0, $s0, $s0;
	mul_ss_u16x2	$s0, $s0, $s0;
	mul_pp_sat_u16x2	$s0, $s0, $s0;
	mul_ps_sat_u16x2	$s0, $s0, $s0;
	mul_sp_sat_u16x2	$s0, $s0, $s0;
	mul_ss_sat_u16x2	$s0, $s0, $s0;
	mul_pp_u16x2	$s0, _u16x2(65535,65535), $s0;
	mul_pp_u16x2	$s0, $s0, _u16x2(65535,65535);
	// 
	// Next sample
	// 
	mul_pp_s8x4	$s0, $s0, $s0;
	// 
	mul_ps_s8x4	$s0, $s0, $s0;
	mul_sp_s8x4	$s0, $s0, $s0;
	mul_ss_s8x4	$s0, $s0, $s0;
	mul_pp_sat_s8x4	$s0, $s0, $s0;
	mul_ps_sat_s8x4	$s0, $s0, $s0;
	mul_sp_sat_s8x4	$s0, $s0, $s0;
	mul_ss_sat_s8x4	$s0, $s0, $s0;
	mul_pp_s8x4	$s0, _s8x4(-1,-1,-1,-1), $s0;
	mul_pp_s8x4	$s0, $s0, _s8x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	mul_pp_s16x2	$s0, $s0, $s0;
	// 
	mul_ps_s16x2	$s0, $s0, $s0;
	mul_sp_s16x2	$s0, $s0, $s0;
	mul_ss_s16x2	$s0, $s0, $s0;
	mul_pp_sat_s16x2	$s0, $s0, $s0;
	mul_ps_sat_s16x2	$s0, $s0, $s0;
	mul_sp_sat_s16x2	$s0, $s0, $s0;
	mul_ss_sat_s16x2	$s0, $s0, $s0;
	mul_pp_s16x2	$s0, _s16x2(-1,-1), $s0;
	mul_pp_s16x2	$s0, $s0, _s16x2(-1,-1);
	// 
	// Next sample
	// 
	mul_pp_f16x2	$s0, $s0, $s0;
	// 
	mul_ftz_pp_f16x2	$s0, $s0, $s0;
	mul_ps_f16x2	$s0, $s0, $s0;
	mul_sp_f16x2	$s0, $s0, $s0;
	mul_ss_f16x2	$s0, $s0, $s0;
	mul_zero_pp_f16x2	$s0, $s0, $s0;
	mul_up_pp_f16x2	$s0, $s0, $s0;
	mul_down_pp_f16x2	$s0, $s0, $s0;
	mul_pp_f16x2	$s0, _f16x2(0Hffff,0Hffff), $s0;
	mul_pp_f16x2	$s0, $s0, _f16x2(0Hffff,0Hffff);
	// 
	// Next sample
	// 
	mul_pp_u8x8	$d0, $d0, $d0;
	// 
	mul_ps_u8x8	$d0, $d0, $d0;
	mul_sp_u8x8	$d0, $d0, $d0;
	mul_ss_u8x8	$d0, $d0, $d0;
	mul_pp_sat_u8x8	$d0, $d0, $d0;
	mul_ps_sat_u8x8	$d0, $d0, $d0;
	mul_sp_sat_u8x8	$d0, $d0, $d0;
	mul_ss_sat_u8x8	$d0, $d0, $d0;
	mul_pp_u8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $d0;
	mul_pp_u8x8	$d0, $d0, _u8x8(255,255,255,255,255,255,255,255);
	// 
	// Next sample
	// 
	mul_pp_u16x4	$d0, $d0, $d0;
	// 
	mul_ps_u16x4	$d0, $d0, $d0;
	mul_sp_u16x4	$d0, $d0, $d0;
	mul_ss_u16x4	$d0, $d0, $d0;
	mul_pp_sat_u16x4	$d0, $d0, $d0;
	mul_ps_sat_u16x4	$d0, $d0, $d0;
	mul_sp_sat_u16x4	$d0, $d0, $d0;
	mul_ss_sat_u16x4	$d0, $d0, $d0;
	mul_pp_u16x4	$d0, _u16x4(65535,65535,65535,65535), $d0;
	mul_pp_u16x4	$d0, $d0, _u16x4(65535,65535,65535,65535);
	// 
	// Next sample
	// 
	mul_pp_u32x2	$d0, $d0, $d0;
	// 
	mul_ps_u32x2	$d0, $d0, $d0;
	mul_sp_u32x2	$d0, $d0, $d0;
	mul_ss_u32x2	$d0, $d0, $d0;
	mul_pp_sat_u32x2	$d0, $d0, $d0;
	mul_ps_sat_u32x2	$d0, $d0, $d0;
	mul_sp_sat_u32x2	$d0, $d0, $d0;
	mul_ss_sat_u32x2	$d0, $d0, $d0;
	mul_pp_u32x2	$d0, _u32x2(4294967295,4294967295), $d0;
	mul_pp_u32x2	$d0, $d0, _u32x2(4294967295,4294967295);
	// 
	// Next sample
	// 
	mul_pp_s8x8	$d0, $d0, $d0;
	// 
	mul_ps_s8x8	$d0, $d0, $d0;
	mul_sp_s8x8	$d0, $d0, $d0;
	mul_ss_s8x8	$d0, $d0, $d0;
	mul_pp_sat_s8x8	$d0, $d0, $d0;
	mul_ps_sat_s8x8	$d0, $d0, $d0;
	mul_sp_sat_s8x8	$d0, $d0, $d0;
	mul_ss_sat_s8x8	$d0, $d0, $d0;
	mul_pp_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $d0;
	mul_pp_s8x8	$d0, $d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1);
	// 
	// Next sample
	// 
	mul_pp_s16x4	$d0, $d0, $d0;
	// 
	mul_ps_s16x4	$d0, $d0, $d0;
	mul_sp_s16x4	$d0, $d0, $d0;
	mul_ss_s16x4	$d0, $d0, $d0;
	mul_pp_sat_s16x4	$d0, $d0, $d0;
	mul_ps_sat_s16x4	$d0, $d0, $d0;
	mul_sp_sat_s16x4	$d0, $d0, $d0;
	mul_ss_sat_s16x4	$d0, $d0, $d0;
	mul_pp_s16x4	$d0, _s16x4(-1,-1,-1,-1), $d0;
	mul_pp_s16x4	$d0, $d0, _s16x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	mul_pp_s32x2	$d0, $d0, $d0;
	// 
	mul_ps_s32x2	$d0, $d0, $d0;
	mul_sp_s32x2	$d0, $d0, $d0;
	mul_ss_s32x2	$d0, $d0, $d0;
	mul_pp_sat_s32x2	$d0, $d0, $d0;
	mul_ps_sat_s32x2	$d0, $d0, $d0;
	mul_sp_sat_s32x2	$d0, $d0, $d0;
	mul_ss_sat_s32x2	$d0, $d0, $d0;
	mul_pp_s32x2	$d0, _s32x2(-1,-1), $d0;
	mul_pp_s32x2	$d0, $d0, _s32x2(-1,-1);
	// 
	// Next sample
	// 
	mul_pp_f16x4	$d0, $d0, $d0;
	// 
	mul_ftz_pp_f16x4	$d0, $d0, $d0;
	mul_ps_f16x4	$d0, $d0, $d0;
	mul_sp_f16x4	$d0, $d0, $d0;
	mul_ss_f16x4	$d0, $d0, $d0;
	mul_zero_pp_f16x4	$d0, $d0, $d0;
	mul_up_pp_f16x4	$d0, $d0, $d0;
	mul_down_pp_f16x4	$d0, $d0, $d0;
	mul_pp_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), $d0;
	mul_pp_f16x4	$d0, $d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	// 
	// Next sample
	// 
	mul_pp_f32x2	$d0, $d0, $d0;
	// 
	mul_ftz_pp_f32x2	$d0, $d0, $d0;
	mul_ps_f32x2	$d0, $d0, $d0;
	mul_sp_f32x2	$d0, $d0, $d0;
	mul_ss_f32x2	$d0, $d0, $d0;
	mul_zero_pp_f32x2	$d0, $d0, $d0;
	mul_up_pp_f32x2	$d0, $d0, $d0;
	mul_down_pp_f32x2	$d0, $d0, $d0;
	mul_pp_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff), $d0;
	mul_pp_f32x2	$d0, $d0, _f32x2(0Fffffffff,0Fffffffff);
	// 
	// Next sample
	// 
	mul_pp_u8x16	$q0, $q0, $q0;
	// 
	mul_ps_u8x16	$q0, $q0, $q0;
	mul_sp_u8x16	$q0, $q0, $q0;
	mul_ss_u8x16	$q0, $q0, $q0;
	mul_pp_sat_u8x16	$q0, $q0, $q0;
	mul_ps_sat_u8x16	$q0, $q0, $q0;
	mul_sp_sat_u8x16	$q0, $q0, $q0;
	mul_ss_sat_u8x16	$q0, $q0, $q0;
	mul_pp_u8x16	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $q0;
	mul_pp_u8x16	$q0, $q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113);
	// 
	// Next sample
	// 
	mul_pp_u16x8	$q0, $q0, $q0;
	// 
	mul_ps_u16x8	$q0, $q0, $q0;
	mul_sp_u16x8	$q0, $q0, $q0;
	mul_ss_u16x8	$q0, $q0, $q0;
	mul_pp_sat_u16x8	$q0, $q0, $q0;
	mul_ps_sat_u16x8	$q0, $q0, $q0;
	mul_sp_sat_u16x8	$q0, $q0, $q0;
	mul_ss_sat_u16x8	$q0, $q0, $q0;
	mul_pp_u16x8	$q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	mul_pp_u16x8	$q0, $q0, _u16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	mul_pp_u32x4	$q0, $q0, $q0;
	// 
	mul_ps_u32x4	$q0, $q0, $q0;
	mul_sp_u32x4	$q0, $q0, $q0;
	mul_ss_u32x4	$q0, $q0, $q0;
	mul_pp_sat_u32x4	$q0, $q0, $q0;
	mul_ps_sat_u32x4	$q0, $q0, $q0;
	mul_sp_sat_u32x4	$q0, $q0, $q0;
	mul_ss_sat_u32x4	$q0, $q0, $q0;
	mul_pp_u32x4	$q0, _u32x4(0,0,1810905006,845094001), $q0;
	mul_pp_u32x4	$q0, $q0, _u32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	mul_pp_u64x2	$q0, $q0, $q0;
	// 
	mul_ps_u64x2	$q0, $q0, $q0;
	mul_sp_u64x2	$q0, $q0, $q0;
	mul_ss_u64x2	$q0, $q0, $q0;
	mul_pp_sat_u64x2	$q0, $q0, $q0;
	mul_ps_sat_u64x2	$q0, $q0, $q0;
	mul_sp_sat_u64x2	$q0, $q0, $q0;
	mul_ss_sat_u64x2	$q0, $q0, $q0;
	mul_pp_u64x2	$q0, _u64x2(0,7777777777777777777), $q0;
	mul_pp_u64x2	$q0, $q0, _u64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	mul_pp_s8x16	$q0, $q0, $q0;
	// 
	mul_ps_s8x16	$q0, $q0, $q0;
	mul_sp_s8x16	$q0, $q0, $q0;
	mul_ss_s8x16	$q0, $q0, $q0;
	mul_pp_sat_s8x16	$q0, $q0, $q0;
	mul_ps_sat_s8x16	$q0, $q0, $q0;
	mul_sp_sat_s8x16	$q0, $q0, $q0;
	mul_ss_sat_s8x16	$q0, $q0, $q0;
	mul_pp_s8x16	$q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113), $q0;
	mul_pp_s8x16	$q0, $q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113);
	// 
	// Next sample
	// 
	mul_pp_s16x8	$q0, $q0, $q0;
	// 
	mul_ps_s16x8	$q0, $q0, $q0;
	mul_sp_s16x8	$q0, $q0, $q0;
	mul_ss_s16x8	$q0, $q0, $q0;
	mul_pp_sat_s16x8	$q0, $q0, $q0;
	mul_ps_sat_s16x8	$q0, $q0, $q0;
	mul_sp_sat_s16x8	$q0, $q0, $q0;
	mul_ss_sat_s16x8	$q0, $q0, $q0;
	mul_pp_s16x8	$q0, _s16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	mul_pp_s16x8	$q0, $q0, _s16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	mul_pp_s32x4	$q0, $q0, $q0;
	// 
	mul_ps_s32x4	$q0, $q0, $q0;
	mul_sp_s32x4	$q0, $q0, $q0;
	mul_ss_s32x4	$q0, $q0, $q0;
	mul_pp_sat_s32x4	$q0, $q0, $q0;
	mul_ps_sat_s32x4	$q0, $q0, $q0;
	mul_sp_sat_s32x4	$q0, $q0, $q0;
	mul_ss_sat_s32x4	$q0, $q0, $q0;
	mul_pp_s32x4	$q0, _s32x4(0,0,1810905006,845094001), $q0;
	mul_pp_s32x4	$q0, $q0, _s32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	mul_pp_s64x2	$q0, $q0, $q0;
	// 
	mul_ps_s64x2	$q0, $q0, $q0;
	mul_sp_s64x2	$q0, $q0, $q0;
	mul_ss_s64x2	$q0, $q0, $q0;
	mul_pp_sat_s64x2	$q0, $q0, $q0;
	mul_ps_sat_s64x2	$q0, $q0, $q0;
	mul_sp_sat_s64x2	$q0, $q0, $q0;
	mul_ss_sat_s64x2	$q0, $q0, $q0;
	mul_pp_s64x2	$q0, _s64x2(0,7777777777777777777), $q0;
	mul_pp_s64x2	$q0, $q0, _s64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	mul_pp_f16x8	$q0, $q0, $q0;
	// 
	mul_ftz_pp_f16x8	$q0, $q0, $q0;
	mul_ps_f16x8	$q0, $q0, $q0;
	mul_sp_f16x8	$q0, $q0, $q0;
	mul_ss_f16x8	$q0, $q0, $q0;
	mul_zero_pp_f16x8	$q0, $q0, $q0;
	mul_up_pp_f16x8	$q0, $q0, $q0;
	mul_down_pp_f16x8	$q0, $q0, $q0;
	mul_pp_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71), $q0;
	mul_pp_f16x8	$q0, $q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	// 
	// Next sample
	// 
	mul_pp_f32x4	$q0, $q0, $q0;
	// 
	mul_ftz_pp_f32x4	$q0, $q0, $q0;
	mul_ps_f32x4	$q0, $q0, $q0;
	mul_sp_f32x4	$q0, $q0, $q0;
	mul_ss_f32x4	$q0, $q0, $q0;
	mul_zero_pp_f32x4	$q0, $q0, $q0;
	mul_up_pp_f32x4	$q0, $q0, $q0;
	mul_down_pp_f32x4	$q0, $q0, $q0;
	mul_pp_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71), $q0;
	mul_pp_f32x4	$q0, $q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	// 
	// Next sample
	// 
	mul_pp_f64x2	$q0, $q0, $q0;
	// 
	mul_ftz_pp_f64x2	$q0, $q0, $q0;
	mul_ps_f64x2	$q0, $q0, $q0;
	mul_sp_f64x2	$q0, $q0, $q0;
	mul_ss_f64x2	$q0, $q0, $q0;
	mul_zero_pp_f64x2	$q0, $q0, $q0;
	mul_up_pp_f64x2	$q0, $q0, $q0;
	mul_down_pp_f64x2	$q0, $q0, $q0;
	mul_pp_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71), $q0;
	mul_pp_f64x2	$q0, $q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	// 
	// Next sample
	// 
	mulhi_u32	$s0, $s0, $s0;
	// 
	mulhi_u32	$s0, 4294967295, $s0;
	mulhi_u32	$s0, WAVESIZE, $s0;
	mulhi_u32	$s0, $s0, 4294967295;
	mulhi_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	mulhi_u64	$d0, $d0, $d0;
	// 
	mulhi_u64	$d0, 18446744073709551615, $d0;
	mulhi_u64	$d0, WAVESIZE, $d0;
	mulhi_u64	$d0, $d0, 18446744073709551615;
	mulhi_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	mulhi_s32	$s0, $s0, $s0;
	// 
	mulhi_s32	$s0, -1, $s0;
	mulhi_s32	$s0, WAVESIZE, $s0;
	mulhi_s32	$s0, $s0, -1;
	mulhi_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	mulhi_s64	$d0, $d0, $d0;
	// 
	mulhi_s64	$d0, -1, $d0;
	mulhi_s64	$d0, WAVESIZE, $d0;
	mulhi_s64	$d0, $d0, -1;
	mulhi_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	mulhi_pp_u8x4	$s0, $s0, $s0;
	// 
	mulhi_ps_u8x4	$s0, $s0, $s0;
	mulhi_sp_u8x4	$s0, $s0, $s0;
	mulhi_ss_u8x4	$s0, $s0, $s0;
	mulhi_pp_u8x4	$s0, _u8x4(255,255,255,255), $s0;
	mulhi_pp_u8x4	$s0, $s0, _u8x4(255,255,255,255);
	// 
	// Next sample
	// 
	mulhi_pp_u16x2	$s0, $s0, $s0;
	// 
	mulhi_ps_u16x2	$s0, $s0, $s0;
	mulhi_sp_u16x2	$s0, $s0, $s0;
	mulhi_ss_u16x2	$s0, $s0, $s0;
	mulhi_pp_u16x2	$s0, _u16x2(65535,65535), $s0;
	mulhi_pp_u16x2	$s0, $s0, _u16x2(65535,65535);
	// 
	// Next sample
	// 
	mulhi_pp_s8x4	$s0, $s0, $s0;
	// 
	mulhi_ps_s8x4	$s0, $s0, $s0;
	mulhi_sp_s8x4	$s0, $s0, $s0;
	mulhi_ss_s8x4	$s0, $s0, $s0;
	mulhi_pp_s8x4	$s0, _s8x4(-1,-1,-1,-1), $s0;
	mulhi_pp_s8x4	$s0, $s0, _s8x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	mulhi_pp_s16x2	$s0, $s0, $s0;
	// 
	mulhi_ps_s16x2	$s0, $s0, $s0;
	mulhi_sp_s16x2	$s0, $s0, $s0;
	mulhi_ss_s16x2	$s0, $s0, $s0;
	mulhi_pp_s16x2	$s0, _s16x2(-1,-1), $s0;
	mulhi_pp_s16x2	$s0, $s0, _s16x2(-1,-1);
	// 
	// Next sample
	// 
	mulhi_pp_u8x8	$d0, $d0, $d0;
	// 
	mulhi_ps_u8x8	$d0, $d0, $d0;
	mulhi_sp_u8x8	$d0, $d0, $d0;
	mulhi_ss_u8x8	$d0, $d0, $d0;
	mulhi_pp_u8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $d0;
	mulhi_pp_u8x8	$d0, $d0, _u8x8(255,255,255,255,255,255,255,255);
	// 
	// Next sample
	// 
	mulhi_pp_u16x4	$d0, $d0, $d0;
	// 
	mulhi_ps_u16x4	$d0, $d0, $d0;
	mulhi_sp_u16x4	$d0, $d0, $d0;
	mulhi_ss_u16x4	$d0, $d0, $d0;
	mulhi_pp_u16x4	$d0, _u16x4(65535,65535,65535,65535), $d0;
	mulhi_pp_u16x4	$d0, $d0, _u16x4(65535,65535,65535,65535);
	// 
	// Next sample
	// 
	mulhi_pp_u32x2	$d0, $d0, $d0;
	// 
	mulhi_ps_u32x2	$d0, $d0, $d0;
	mulhi_sp_u32x2	$d0, $d0, $d0;
	mulhi_ss_u32x2	$d0, $d0, $d0;
	mulhi_pp_u32x2	$d0, _u32x2(4294967295,4294967295), $d0;
	mulhi_pp_u32x2	$d0, $d0, _u32x2(4294967295,4294967295);
	// 
	// Next sample
	// 
	mulhi_pp_s8x8	$d0, $d0, $d0;
	// 
	mulhi_ps_s8x8	$d0, $d0, $d0;
	mulhi_sp_s8x8	$d0, $d0, $d0;
	mulhi_ss_s8x8	$d0, $d0, $d0;
	mulhi_pp_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $d0;
	mulhi_pp_s8x8	$d0, $d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1);
	// 
	// Next sample
	// 
	mulhi_pp_s16x4	$d0, $d0, $d0;
	// 
	mulhi_ps_s16x4	$d0, $d0, $d0;
	mulhi_sp_s16x4	$d0, $d0, $d0;
	mulhi_ss_s16x4	$d0, $d0, $d0;
	mulhi_pp_s16x4	$d0, _s16x4(-1,-1,-1,-1), $d0;
	mulhi_pp_s16x4	$d0, $d0, _s16x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	mulhi_pp_s32x2	$d0, $d0, $d0;
	// 
	mulhi_ps_s32x2	$d0, $d0, $d0;
	mulhi_sp_s32x2	$d0, $d0, $d0;
	mulhi_ss_s32x2	$d0, $d0, $d0;
	mulhi_pp_s32x2	$d0, _s32x2(-1,-1), $d0;
	mulhi_pp_s32x2	$d0, $d0, _s32x2(-1,-1);
	// 
	// Next sample
	// 
	mulhi_pp_u8x16	$q0, $q0, $q0;
	// 
	mulhi_ps_u8x16	$q0, $q0, $q0;
	mulhi_sp_u8x16	$q0, $q0, $q0;
	mulhi_ss_u8x16	$q0, $q0, $q0;
	mulhi_pp_u8x16	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $q0;
	mulhi_pp_u8x16	$q0, $q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113);
	// 
	// Next sample
	// 
	mulhi_pp_u16x8	$q0, $q0, $q0;
	// 
	mulhi_ps_u16x8	$q0, $q0, $q0;
	mulhi_sp_u16x8	$q0, $q0, $q0;
	mulhi_ss_u16x8	$q0, $q0, $q0;
	mulhi_pp_u16x8	$q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	mulhi_pp_u16x8	$q0, $q0, _u16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	mulhi_pp_u32x4	$q0, $q0, $q0;
	// 
	mulhi_ps_u32x4	$q0, $q0, $q0;
	mulhi_sp_u32x4	$q0, $q0, $q0;
	mulhi_ss_u32x4	$q0, $q0, $q0;
	mulhi_pp_u32x4	$q0, _u32x4(0,0,1810905006,845094001), $q0;
	mulhi_pp_u32x4	$q0, $q0, _u32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	mulhi_pp_u64x2	$q0, $q0, $q0;
	// 
	mulhi_ps_u64x2	$q0, $q0, $q0;
	mulhi_sp_u64x2	$q0, $q0, $q0;
	mulhi_ss_u64x2	$q0, $q0, $q0;
	mulhi_pp_u64x2	$q0, _u64x2(0,7777777777777777777), $q0;
	mulhi_pp_u64x2	$q0, $q0, _u64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	mulhi_pp_s8x16	$q0, $q0, $q0;
	// 
	mulhi_ps_s8x16	$q0, $q0, $q0;
	mulhi_sp_s8x16	$q0, $q0, $q0;
	mulhi_ss_s8x16	$q0, $q0, $q0;
	mulhi_pp_s8x16	$q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113), $q0;
	mulhi_pp_s8x16	$q0, $q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113);
	// 
	// Next sample
	// 
	mulhi_pp_s16x8	$q0, $q0, $q0;
	// 
	mulhi_ps_s16x8	$q0, $q0, $q0;
	mulhi_sp_s16x8	$q0, $q0, $q0;
	mulhi_ss_s16x8	$q0, $q0, $q0;
	mulhi_pp_s16x8	$q0, _s16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	mulhi_pp_s16x8	$q0, $q0, _s16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	mulhi_pp_s32x4	$q0, $q0, $q0;
	// 
	mulhi_ps_s32x4	$q0, $q0, $q0;
	mulhi_sp_s32x4	$q0, $q0, $q0;
	mulhi_ss_s32x4	$q0, $q0, $q0;
	mulhi_pp_s32x4	$q0, _s32x4(0,0,1810905006,845094001), $q0;
	mulhi_pp_s32x4	$q0, $q0, _s32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	mulhi_pp_s64x2	$q0, $q0, $q0;
	// 
	mulhi_ps_s64x2	$q0, $q0, $q0;
	mulhi_sp_s64x2	$q0, $q0, $q0;
	mulhi_ss_s64x2	$q0, $q0, $q0;
	mulhi_pp_s64x2	$q0, _s64x2(0,7777777777777777777), $q0;
	mulhi_pp_s64x2	$q0, $q0, _s64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	div_u32	$s0, $s0, $s0;
	// 
	div_u32	$s0, 4294967295, $s0;
	div_u32	$s0, WAVESIZE, $s0;
	div_u32	$s0, $s0, 4294967295;
	div_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	div_u64	$d0, $d0, $d0;
	// 
	div_u64	$d0, 18446744073709551615, $d0;
	div_u64	$d0, WAVESIZE, $d0;
	div_u64	$d0, $d0, 18446744073709551615;
	div_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	div_s32	$s0, $s0, $s0;
	// 
	div_s32	$s0, -1, $s0;
	div_s32	$s0, WAVESIZE, $s0;
	div_s32	$s0, $s0, -1;
	div_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	div_s64	$d0, $d0, $d0;
	// 
	div_s64	$d0, -1, $d0;
	div_s64	$d0, WAVESIZE, $d0;
	div_s64	$d0, $d0, -1;
	div_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	div_f16	$s0, $s0, $s0;
	// 
	div_ftz_f16	$s0, $s0, $s0;
	div_zero_f16	$s0, $s0, $s0;
	div_up_f16	$s0, $s0, $s0;
	div_down_f16	$s0, $s0, $s0;
	div_f16	$s0, 0Hffff, $s0;
	div_f16	$s0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	div_f32	$s0, $s0, $s0;
	// 
	div_ftz_f32	$s0, $s0, $s0;
	div_zero_f32	$s0, $s0, $s0;
	div_up_f32	$s0, $s0, $s0;
	div_down_f32	$s0, $s0, $s0;
	div_f32	$s0, 0Fffffffff, $s0;
	div_f32	$s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	div_f64	$d0, $d0, $d0;
	// 
	div_ftz_f64	$d0, $d0, $d0;
	div_zero_f64	$d0, $d0, $d0;
	div_up_f64	$d0, $d0, $d0;
	div_down_f64	$d0, $d0, $d0;
	div_f64	$d0, 0Dffffffffffffffff, $d0;
	div_f64	$d0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	div_pp_f16x2	$s0, $s0, $s0;
	// 
	div_ftz_pp_f16x2	$s0, $s0, $s0;
	div_ps_f16x2	$s0, $s0, $s0;
	div_sp_f16x2	$s0, $s0, $s0;
	div_ss_f16x2	$s0, $s0, $s0;
	div_zero_pp_f16x2	$s0, $s0, $s0;
	div_up_pp_f16x2	$s0, $s0, $s0;
	div_down_pp_f16x2	$s0, $s0, $s0;
	div_pp_f16x2	$s0, _f16x2(0Hffff,0Hffff), $s0;
	div_pp_f16x2	$s0, $s0, _f16x2(0Hffff,0Hffff);
	// 
	// Next sample
	// 
	div_pp_f16x4	$d0, $d0, $d0;
	// 
	div_ftz_pp_f16x4	$d0, $d0, $d0;
	div_ps_f16x4	$d0, $d0, $d0;
	div_sp_f16x4	$d0, $d0, $d0;
	div_ss_f16x4	$d0, $d0, $d0;
	div_zero_pp_f16x4	$d0, $d0, $d0;
	div_up_pp_f16x4	$d0, $d0, $d0;
	div_down_pp_f16x4	$d0, $d0, $d0;
	div_pp_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), $d0;
	div_pp_f16x4	$d0, $d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	// 
	// Next sample
	// 
	div_pp_f32x2	$d0, $d0, $d0;
	// 
	div_ftz_pp_f32x2	$d0, $d0, $d0;
	div_ps_f32x2	$d0, $d0, $d0;
	div_sp_f32x2	$d0, $d0, $d0;
	div_ss_f32x2	$d0, $d0, $d0;
	div_zero_pp_f32x2	$d0, $d0, $d0;
	div_up_pp_f32x2	$d0, $d0, $d0;
	div_down_pp_f32x2	$d0, $d0, $d0;
	div_pp_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff), $d0;
	div_pp_f32x2	$d0, $d0, _f32x2(0Fffffffff,0Fffffffff);
	// 
	// Next sample
	// 
	div_pp_f16x8	$q0, $q0, $q0;
	// 
	div_ftz_pp_f16x8	$q0, $q0, $q0;
	div_ps_f16x8	$q0, $q0, $q0;
	div_sp_f16x8	$q0, $q0, $q0;
	div_ss_f16x8	$q0, $q0, $q0;
	div_zero_pp_f16x8	$q0, $q0, $q0;
	div_up_pp_f16x8	$q0, $q0, $q0;
	div_down_pp_f16x8	$q0, $q0, $q0;
	div_pp_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71), $q0;
	div_pp_f16x8	$q0, $q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	// 
	// Next sample
	// 
	div_pp_f32x4	$q0, $q0, $q0;
	// 
	div_ftz_pp_f32x4	$q0, $q0, $q0;
	div_ps_f32x4	$q0, $q0, $q0;
	div_sp_f32x4	$q0, $q0, $q0;
	div_ss_f32x4	$q0, $q0, $q0;
	div_zero_pp_f32x4	$q0, $q0, $q0;
	div_up_pp_f32x4	$q0, $q0, $q0;
	div_down_pp_f32x4	$q0, $q0, $q0;
	div_pp_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71), $q0;
	div_pp_f32x4	$q0, $q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	// 
	// Next sample
	// 
	div_pp_f64x2	$q0, $q0, $q0;
	// 
	div_ftz_pp_f64x2	$q0, $q0, $q0;
	div_ps_f64x2	$q0, $q0, $q0;
	div_sp_f64x2	$q0, $q0, $q0;
	div_ss_f64x2	$q0, $q0, $q0;
	div_zero_pp_f64x2	$q0, $q0, $q0;
	div_up_pp_f64x2	$q0, $q0, $q0;
	div_down_pp_f64x2	$q0, $q0, $q0;
	div_pp_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71), $q0;
	div_pp_f64x2	$q0, $q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	// 
	// Next sample
	// 
	rem_u32	$s0, $s0, $s0;
	// 
	rem_u32	$s0, 4294967295, $s0;
	rem_u32	$s0, WAVESIZE, $s0;
	rem_u32	$s0, $s0, 4294967295;
	rem_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	rem_u64	$d0, $d0, $d0;
	// 
	rem_u64	$d0, 18446744073709551615, $d0;
	rem_u64	$d0, WAVESIZE, $d0;
	rem_u64	$d0, $d0, 18446744073709551615;
	rem_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	rem_s32	$s0, $s0, $s0;
	// 
	rem_s32	$s0, -1, $s0;
	rem_s32	$s0, WAVESIZE, $s0;
	rem_s32	$s0, $s0, -1;
	rem_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	rem_s64	$d0, $d0, $d0;
	// 
	rem_s64	$d0, -1, $d0;
	rem_s64	$d0, WAVESIZE, $d0;
	rem_s64	$d0, $d0, -1;
	rem_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	carry_u32	$s0, $s0, $s0;
	// 
	carry_u32	$s0, 4294967295, $s0;
	carry_u32	$s0, WAVESIZE, $s0;
	carry_u32	$s0, $s0, 4294967295;
	carry_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	carry_u64	$d0, $d0, $d0;
	// 
	carry_u64	$d0, 18446744073709551615, $d0;
	carry_u64	$d0, WAVESIZE, $d0;
	carry_u64	$d0, $d0, 18446744073709551615;
	carry_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	carry_s32	$s0, $s0, $s0;
	// 
	carry_s32	$s0, -1, $s0;
	carry_s32	$s0, WAVESIZE, $s0;
	carry_s32	$s0, $s0, -1;
	carry_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	carry_s64	$d0, $d0, $d0;
	// 
	carry_s64	$d0, -1, $d0;
	carry_s64	$d0, WAVESIZE, $d0;
	carry_s64	$d0, $d0, -1;
	carry_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	borrow_u32	$s0, $s0, $s0;
	// 
	borrow_u32	$s0, 4294967295, $s0;
	borrow_u32	$s0, WAVESIZE, $s0;
	borrow_u32	$s0, $s0, 4294967295;
	borrow_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	borrow_u64	$d0, $d0, $d0;
	// 
	borrow_u64	$d0, 18446744073709551615, $d0;
	borrow_u64	$d0, WAVESIZE, $d0;
	borrow_u64	$d0, $d0, 18446744073709551615;
	borrow_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	borrow_s32	$s0, $s0, $s0;
	// 
	borrow_s32	$s0, -1, $s0;
	borrow_s32	$s0, WAVESIZE, $s0;
	borrow_s32	$s0, $s0, -1;
	borrow_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	borrow_s64	$d0, $d0, $d0;
	// 
	borrow_s64	$d0, -1, $d0;
	borrow_s64	$d0, WAVESIZE, $d0;
	borrow_s64	$d0, $d0, -1;
	borrow_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	neg_s32	$s0, $s0;
	// 
	neg_s32	$s0, -1;
	neg_s32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	neg_s64	$d0, $d0;
	// 
	neg_s64	$d0, -1;
	neg_s64	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	neg_f16	$s0, $s0;
	// 
	neg_f16	$s0, 0Hffff;
	// 
	// Next sample
	// 
	neg_f32	$s0, $s0;
	// 
	neg_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	neg_f64	$d0, $d0;
	// 
	neg_f64	$d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	neg_s_s8x4	$s0, $s0;
	// 
	neg_p_s8x4	$s0, $s0;
	neg_s_s8x4	$s0, _s8x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	neg_s_s16x2	$s0, $s0;
	// 
	neg_p_s16x2	$s0, $s0;
	neg_s_s16x2	$s0, _s16x2(-1,-1);
	// 
	// Next sample
	// 
	neg_s_f16x2	$s0, $s0;
	// 
	neg_p_f16x2	$s0, $s0;
	neg_s_f16x2	$s0, _f16x2(0Hffff,0Hffff);
	// 
	// Next sample
	// 
	neg_s_s8x8	$d0, $d0;
	// 
	neg_p_s8x8	$d0, $d0;
	neg_s_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1);
	// 
	// Next sample
	// 
	neg_s_s16x4	$d0, $d0;
	// 
	neg_p_s16x4	$d0, $d0;
	neg_s_s16x4	$d0, _s16x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	neg_s_s32x2	$d0, $d0;
	// 
	neg_p_s32x2	$d0, $d0;
	neg_s_s32x2	$d0, _s32x2(-1,-1);
	// 
	// Next sample
	// 
	neg_s_f16x4	$d0, $d0;
	// 
	neg_p_f16x4	$d0, $d0;
	neg_s_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	// 
	// Next sample
	// 
	neg_s_f32x2	$d0, $d0;
	// 
	neg_p_f32x2	$d0, $d0;
	neg_s_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff);
	// 
	// Next sample
	// 
	neg_s_s8x16	$q0, $q0;
	// 
	neg_p_s8x16	$q0, $q0;
	neg_s_s8x16	$q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113);
	// 
	// Next sample
	// 
	neg_s_s16x8	$q0, $q0;
	// 
	neg_p_s16x8	$q0, $q0;
	neg_s_s16x8	$q0, _s16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	neg_s_s32x4	$q0, $q0;
	// 
	neg_p_s32x4	$q0, $q0;
	neg_s_s32x4	$q0, _s32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	neg_s_s64x2	$q0, $q0;
	// 
	neg_p_s64x2	$q0, $q0;
	neg_s_s64x2	$q0, _s64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	neg_s_f16x8	$q0, $q0;
	// 
	neg_p_f16x8	$q0, $q0;
	neg_s_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	// 
	// Next sample
	// 
	neg_s_f32x4	$q0, $q0;
	// 
	neg_p_f32x4	$q0, $q0;
	neg_s_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	// 
	// Next sample
	// 
	neg_s_f64x2	$q0, $q0;
	// 
	neg_p_f64x2	$q0, $q0;
	neg_s_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	// 
	// Next sample
	// 
	abs_s32	$s0, $s0;
	// 
	abs_s32	$s0, -1;
	abs_s32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	abs_s64	$d0, $d0;
	// 
	abs_s64	$d0, -1;
	abs_s64	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	abs_f16	$s0, $s0;
	// 
	abs_f16	$s0, 0Hffff;
	// 
	// Next sample
	// 
	abs_f32	$s0, $s0;
	// 
	abs_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	abs_f64	$d0, $d0;
	// 
	abs_f64	$d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	abs_s_s8x4	$s0, $s0;
	// 
	abs_p_s8x4	$s0, $s0;
	abs_s_s8x4	$s0, _s8x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	abs_s_s16x2	$s0, $s0;
	// 
	abs_p_s16x2	$s0, $s0;
	abs_s_s16x2	$s0, _s16x2(-1,-1);
	// 
	// Next sample
	// 
	abs_s_f16x2	$s0, $s0;
	// 
	abs_p_f16x2	$s0, $s0;
	abs_s_f16x2	$s0, _f16x2(0Hffff,0Hffff);
	// 
	// Next sample
	// 
	abs_s_s8x8	$d0, $d0;
	// 
	abs_p_s8x8	$d0, $d0;
	abs_s_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1);
	// 
	// Next sample
	// 
	abs_s_s16x4	$d0, $d0;
	// 
	abs_p_s16x4	$d0, $d0;
	abs_s_s16x4	$d0, _s16x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	abs_s_s32x2	$d0, $d0;
	// 
	abs_p_s32x2	$d0, $d0;
	abs_s_s32x2	$d0, _s32x2(-1,-1);
	// 
	// Next sample
	// 
	abs_s_f16x4	$d0, $d0;
	// 
	abs_p_f16x4	$d0, $d0;
	abs_s_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	// 
	// Next sample
	// 
	abs_s_f32x2	$d0, $d0;
	// 
	abs_p_f32x2	$d0, $d0;
	abs_s_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff);
	// 
	// Next sample
	// 
	abs_s_s8x16	$q0, $q0;
	// 
	abs_p_s8x16	$q0, $q0;
	abs_s_s8x16	$q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113);
	// 
	// Next sample
	// 
	abs_s_s16x8	$q0, $q0;
	// 
	abs_p_s16x8	$q0, $q0;
	abs_s_s16x8	$q0, _s16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	abs_s_s32x4	$q0, $q0;
	// 
	abs_p_s32x4	$q0, $q0;
	abs_s_s32x4	$q0, _s32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	abs_s_s64x2	$q0, $q0;
	// 
	abs_p_s64x2	$q0, $q0;
	abs_s_s64x2	$q0, _s64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	abs_s_f16x8	$q0, $q0;
	// 
	abs_p_f16x8	$q0, $q0;
	abs_s_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	// 
	// Next sample
	// 
	abs_s_f32x4	$q0, $q0;
	// 
	abs_p_f32x4	$q0, $q0;
	abs_s_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	// 
	// Next sample
	// 
	abs_s_f64x2	$q0, $q0;
	// 
	abs_p_f64x2	$q0, $q0;
	abs_s_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	// 
	// Next sample
	// 
	copysign_f16	$s0, $s0, $s0;
	// 
	copysign_f16	$s0, 0Hffff, $s0;
	copysign_f16	$s0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	copysign_f32	$s0, $s0, $s0;
	// 
	copysign_f32	$s0, 0Fffffffff, $s0;
	copysign_f32	$s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	copysign_f64	$d0, $d0, $d0;
	// 
	copysign_f64	$d0, 0Dffffffffffffffff, $d0;
	copysign_f64	$d0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	copysign_pp_f16x2	$s0, $s0, $s0;
	// 
	copysign_ps_f16x2	$s0, $s0, $s0;
	copysign_sp_f16x2	$s0, $s0, $s0;
	copysign_ss_f16x2	$s0, $s0, $s0;
	copysign_pp_f16x2	$s0, _f16x2(0Hffff,0Hffff), $s0;
	copysign_pp_f16x2	$s0, $s0, _f16x2(0Hffff,0Hffff);
	// 
	// Next sample
	// 
	copysign_pp_f16x4	$d0, $d0, $d0;
	// 
	copysign_ps_f16x4	$d0, $d0, $d0;
	copysign_sp_f16x4	$d0, $d0, $d0;
	copysign_ss_f16x4	$d0, $d0, $d0;
	copysign_pp_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), $d0;
	copysign_pp_f16x4	$d0, $d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	// 
	// Next sample
	// 
	copysign_pp_f32x2	$d0, $d0, $d0;
	// 
	copysign_ps_f32x2	$d0, $d0, $d0;
	copysign_sp_f32x2	$d0, $d0, $d0;
	copysign_ss_f32x2	$d0, $d0, $d0;
	copysign_pp_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff), $d0;
	copysign_pp_f32x2	$d0, $d0, _f32x2(0Fffffffff,0Fffffffff);
	// 
	// Next sample
	// 
	copysign_pp_f16x8	$q0, $q0, $q0;
	// 
	copysign_ps_f16x8	$q0, $q0, $q0;
	copysign_sp_f16x8	$q0, $q0, $q0;
	copysign_ss_f16x8	$q0, $q0, $q0;
	copysign_pp_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71), $q0;
	copysign_pp_f16x8	$q0, $q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	// 
	// Next sample
	// 
	copysign_pp_f32x4	$q0, $q0, $q0;
	// 
	copysign_ps_f32x4	$q0, $q0, $q0;
	copysign_sp_f32x4	$q0, $q0, $q0;
	copysign_ss_f32x4	$q0, $q0, $q0;
	copysign_pp_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71), $q0;
	copysign_pp_f32x4	$q0, $q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	// 
	// Next sample
	// 
	copysign_pp_f64x2	$q0, $q0, $q0;
	// 
	copysign_ps_f64x2	$q0, $q0, $q0;
	copysign_sp_f64x2	$q0, $q0, $q0;
	copysign_ss_f64x2	$q0, $q0, $q0;
	copysign_pp_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71), $q0;
	copysign_pp_f64x2	$q0, $q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	// 
	// Next sample
	// 
	fract_f16	$s0, $s0;
	// 
	fract_f16	$s0, 0Hffff;
	fract_ftz_f16	$s0, $s0;
	// 
	// Next sample
	// 
	fract_f32	$s0, $s0;
	// 
	fract_f32	$s0, 0Fffffffff;
	fract_ftz_f32	$s0, $s0;
	// 
	// Next sample
	// 
	fract_f64	$d0, $d0;
	// 
	fract_f64	$d0, 0Dffffffffffffffff;
	fract_ftz_f64	$d0, $d0;
	// 
	// Next sample
	// 
	fract_s_f16x2	$s0, $s0;
	// 
	fract_p_f16x2	$s0, $s0;
	fract_s_f16x2	$s0, _f16x2(0Hffff,0Hffff);
	fract_ftz_s_f16x2	$s0, $s0;
	// 
	// Next sample
	// 
	fract_s_f16x4	$d0, $d0;
	// 
	fract_p_f16x4	$d0, $d0;
	fract_s_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	fract_ftz_s_f16x4	$d0, $d0;
	// 
	// Next sample
	// 
	fract_s_f32x2	$d0, $d0;
	// 
	fract_p_f32x2	$d0, $d0;
	fract_s_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff);
	fract_ftz_s_f32x2	$d0, $d0;
	// 
	// Next sample
	// 
	fract_s_f16x8	$q0, $q0;
	// 
	fract_p_f16x8	$q0, $q0;
	fract_s_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	fract_ftz_s_f16x8	$q0, $q0;
	// 
	// Next sample
	// 
	fract_s_f32x4	$q0, $q0;
	// 
	fract_p_f32x4	$q0, $q0;
	fract_s_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	fract_ftz_s_f32x4	$q0, $q0;
	// 
	// Next sample
	// 
	fract_s_f64x2	$q0, $q0;
	// 
	fract_p_f64x2	$q0, $q0;
	fract_s_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	fract_ftz_s_f64x2	$q0, $q0;
	// 
	// Next sample
	// 
	sqrt_f16	$s0, $s0;
	// 
	sqrt_f16	$s0, 0Hffff;
	sqrt_ftz_f16	$s0, $s0;
	sqrt_zero_f16	$s0, $s0;
	sqrt_up_f16	$s0, $s0;
	sqrt_down_f16	$s0, $s0;
	// 
	// Next sample
	// 
	sqrt_f32	$s0, $s0;
	// 
	sqrt_f32	$s0, 0Fffffffff;
	sqrt_ftz_f32	$s0, $s0;
	sqrt_zero_f32	$s0, $s0;
	sqrt_up_f32	$s0, $s0;
	sqrt_down_f32	$s0, $s0;
	// 
	// Next sample
	// 
	sqrt_f64	$d0, $d0;
	// 
	sqrt_f64	$d0, 0Dffffffffffffffff;
	sqrt_ftz_f64	$d0, $d0;
	sqrt_zero_f64	$d0, $d0;
	sqrt_up_f64	$d0, $d0;
	sqrt_down_f64	$d0, $d0;
	// 
	// Next sample
	// 
	sqrt_s_f16x2	$s0, $s0;
	// 
	sqrt_p_f16x2	$s0, $s0;
	sqrt_s_f16x2	$s0, _f16x2(0Hffff,0Hffff);
	sqrt_ftz_s_f16x2	$s0, $s0;
	sqrt_zero_s_f16x2	$s0, $s0;
	sqrt_up_s_f16x2	$s0, $s0;
	sqrt_down_s_f16x2	$s0, $s0;
	// 
	// Next sample
	// 
	sqrt_s_f16x4	$d0, $d0;
	// 
	sqrt_p_f16x4	$d0, $d0;
	sqrt_s_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	sqrt_ftz_s_f16x4	$d0, $d0;
	sqrt_zero_s_f16x4	$d0, $d0;
	sqrt_up_s_f16x4	$d0, $d0;
	sqrt_down_s_f16x4	$d0, $d0;
	// 
	// Next sample
	// 
	sqrt_s_f32x2	$d0, $d0;
	// 
	sqrt_p_f32x2	$d0, $d0;
	sqrt_s_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff);
	sqrt_ftz_s_f32x2	$d0, $d0;
	sqrt_zero_s_f32x2	$d0, $d0;
	sqrt_up_s_f32x2	$d0, $d0;
	sqrt_down_s_f32x2	$d0, $d0;
	// 
	// Next sample
	// 
	sqrt_s_f16x8	$q0, $q0;
	// 
	sqrt_p_f16x8	$q0, $q0;
	sqrt_s_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	sqrt_ftz_s_f16x8	$q0, $q0;
	sqrt_zero_s_f16x8	$q0, $q0;
	sqrt_up_s_f16x8	$q0, $q0;
	sqrt_down_s_f16x8	$q0, $q0;
	// 
	// Next sample
	// 
	sqrt_s_f32x4	$q0, $q0;
	// 
	sqrt_p_f32x4	$q0, $q0;
	sqrt_s_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	sqrt_ftz_s_f32x4	$q0, $q0;
	sqrt_zero_s_f32x4	$q0, $q0;
	sqrt_up_s_f32x4	$q0, $q0;
	sqrt_down_s_f32x4	$q0, $q0;
	// 
	// Next sample
	// 
	sqrt_s_f64x2	$q0, $q0;
	// 
	sqrt_p_f64x2	$q0, $q0;
	sqrt_s_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	sqrt_ftz_s_f64x2	$q0, $q0;
	sqrt_zero_s_f64x2	$q0, $q0;
	sqrt_up_s_f64x2	$q0, $q0;
	sqrt_down_s_f64x2	$q0, $q0;
	// 
	// Next sample
	// 
	ceil_f16	$s0, $s0;
	// 
	ceil_f16	$s0, 0Hffff;
	ceil_ftz_f16	$s0, $s0;
	// 
	// Next sample
	// 
	ceil_f32	$s0, $s0;
	// 
	ceil_f32	$s0, 0Fffffffff;
	ceil_ftz_f32	$s0, $s0;
	// 
	// Next sample
	// 
	ceil_f64	$d0, $d0;
	// 
	ceil_f64	$d0, 0Dffffffffffffffff;
	ceil_ftz_f64	$d0, $d0;
	// 
	// Next sample
	// 
	ceil_s_f16x2	$s0, $s0;
	// 
	ceil_p_f16x2	$s0, $s0;
	ceil_s_f16x2	$s0, _f16x2(0Hffff,0Hffff);
	ceil_ftz_s_f16x2	$s0, $s0;
	// 
	// Next sample
	// 
	ceil_s_f16x4	$d0, $d0;
	// 
	ceil_p_f16x4	$d0, $d0;
	ceil_s_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	ceil_ftz_s_f16x4	$d0, $d0;
	// 
	// Next sample
	// 
	ceil_s_f32x2	$d0, $d0;
	// 
	ceil_p_f32x2	$d0, $d0;
	ceil_s_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff);
	ceil_ftz_s_f32x2	$d0, $d0;
	// 
	// Next sample
	// 
	ceil_s_f16x8	$q0, $q0;
	// 
	ceil_p_f16x8	$q0, $q0;
	ceil_s_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	ceil_ftz_s_f16x8	$q0, $q0;
	// 
	// Next sample
	// 
	ceil_s_f32x4	$q0, $q0;
	// 
	ceil_p_f32x4	$q0, $q0;
	ceil_s_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	ceil_ftz_s_f32x4	$q0, $q0;
	// 
	// Next sample
	// 
	ceil_s_f64x2	$q0, $q0;
	// 
	ceil_p_f64x2	$q0, $q0;
	ceil_s_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	ceil_ftz_s_f64x2	$q0, $q0;
	// 
	// Next sample
	// 
	floor_f16	$s0, $s0;
	// 
	floor_f16	$s0, 0Hffff;
	floor_ftz_f16	$s0, $s0;
	// 
	// Next sample
	// 
	floor_f32	$s0, $s0;
	// 
	floor_f32	$s0, 0Fffffffff;
	floor_ftz_f32	$s0, $s0;
	// 
	// Next sample
	// 
	floor_f64	$d0, $d0;
	// 
	floor_f64	$d0, 0Dffffffffffffffff;
	floor_ftz_f64	$d0, $d0;
	// 
	// Next sample
	// 
	floor_s_f16x2	$s0, $s0;
	// 
	floor_p_f16x2	$s0, $s0;
	floor_s_f16x2	$s0, _f16x2(0Hffff,0Hffff);
	floor_ftz_s_f16x2	$s0, $s0;
	// 
	// Next sample
	// 
	floor_s_f16x4	$d0, $d0;
	// 
	floor_p_f16x4	$d0, $d0;
	floor_s_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	floor_ftz_s_f16x4	$d0, $d0;
	// 
	// Next sample
	// 
	floor_s_f32x2	$d0, $d0;
	// 
	floor_p_f32x2	$d0, $d0;
	floor_s_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff);
	floor_ftz_s_f32x2	$d0, $d0;
	// 
	// Next sample
	// 
	floor_s_f16x8	$q0, $q0;
	// 
	floor_p_f16x8	$q0, $q0;
	floor_s_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	floor_ftz_s_f16x8	$q0, $q0;
	// 
	// Next sample
	// 
	floor_s_f32x4	$q0, $q0;
	// 
	floor_p_f32x4	$q0, $q0;
	floor_s_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	floor_ftz_s_f32x4	$q0, $q0;
	// 
	// Next sample
	// 
	floor_s_f64x2	$q0, $q0;
	// 
	floor_p_f64x2	$q0, $q0;
	floor_s_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	floor_ftz_s_f64x2	$q0, $q0;
	// 
	// Next sample
	// 
	rint_f16	$s0, $s0;
	// 
	rint_f16	$s0, 0Hffff;
	rint_ftz_f16	$s0, $s0;
	// 
	// Next sample
	// 
	rint_f32	$s0, $s0;
	// 
	rint_f32	$s0, 0Fffffffff;
	rint_ftz_f32	$s0, $s0;
	// 
	// Next sample
	// 
	rint_f64	$d0, $d0;
	// 
	rint_f64	$d0, 0Dffffffffffffffff;
	rint_ftz_f64	$d0, $d0;
	// 
	// Next sample
	// 
	rint_s_f16x2	$s0, $s0;
	// 
	rint_p_f16x2	$s0, $s0;
	rint_s_f16x2	$s0, _f16x2(0Hffff,0Hffff);
	rint_ftz_s_f16x2	$s0, $s0;
	// 
	// Next sample
	// 
	rint_s_f16x4	$d0, $d0;
	// 
	rint_p_f16x4	$d0, $d0;
	rint_s_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	rint_ftz_s_f16x4	$d0, $d0;
	// 
	// Next sample
	// 
	rint_s_f32x2	$d0, $d0;
	// 
	rint_p_f32x2	$d0, $d0;
	rint_s_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff);
	rint_ftz_s_f32x2	$d0, $d0;
	// 
	// Next sample
	// 
	rint_s_f16x8	$q0, $q0;
	// 
	rint_p_f16x8	$q0, $q0;
	rint_s_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	rint_ftz_s_f16x8	$q0, $q0;
	// 
	// Next sample
	// 
	rint_s_f32x4	$q0, $q0;
	// 
	rint_p_f32x4	$q0, $q0;
	rint_s_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	rint_ftz_s_f32x4	$q0, $q0;
	// 
	// Next sample
	// 
	rint_s_f64x2	$q0, $q0;
	// 
	rint_p_f64x2	$q0, $q0;
	rint_s_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	rint_ftz_s_f64x2	$q0, $q0;
	// 
	// Next sample
	// 
	trunc_f16	$s0, $s0;
	// 
	trunc_f16	$s0, 0Hffff;
	trunc_ftz_f16	$s0, $s0;
	// 
	// Next sample
	// 
	trunc_f32	$s0, $s0;
	// 
	trunc_f32	$s0, 0Fffffffff;
	trunc_ftz_f32	$s0, $s0;
	// 
	// Next sample
	// 
	trunc_f64	$d0, $d0;
	// 
	trunc_f64	$d0, 0Dffffffffffffffff;
	trunc_ftz_f64	$d0, $d0;
	// 
	// Next sample
	// 
	trunc_s_f16x2	$s0, $s0;
	// 
	trunc_p_f16x2	$s0, $s0;
	trunc_s_f16x2	$s0, _f16x2(0Hffff,0Hffff);
	trunc_ftz_s_f16x2	$s0, $s0;
	// 
	// Next sample
	// 
	trunc_s_f16x4	$d0, $d0;
	// 
	trunc_p_f16x4	$d0, $d0;
	trunc_s_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	trunc_ftz_s_f16x4	$d0, $d0;
	// 
	// Next sample
	// 
	trunc_s_f32x2	$d0, $d0;
	// 
	trunc_p_f32x2	$d0, $d0;
	trunc_s_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff);
	trunc_ftz_s_f32x2	$d0, $d0;
	// 
	// Next sample
	// 
	trunc_s_f16x8	$q0, $q0;
	// 
	trunc_p_f16x8	$q0, $q0;
	trunc_s_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	trunc_ftz_s_f16x8	$q0, $q0;
	// 
	// Next sample
	// 
	trunc_s_f32x4	$q0, $q0;
	// 
	trunc_p_f32x4	$q0, $q0;
	trunc_s_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	trunc_ftz_s_f32x4	$q0, $q0;
	// 
	// Next sample
	// 
	trunc_s_f64x2	$q0, $q0;
	// 
	trunc_p_f64x2	$q0, $q0;
	trunc_s_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	trunc_ftz_s_f64x2	$q0, $q0;
	// 
	// Next sample
	// 
	mul24_u32	$s0, $s0, $s0;
	// 
	mul24_u32	$s0, 4294967295, $s0;
	mul24_u32	$s0, WAVESIZE, $s0;
	mul24_u32	$s0, $s0, 4294967295;
	mul24_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	mul24_s32	$s0, $s0, $s0;
	// 
	mul24_s32	$s0, -1, $s0;
	mul24_s32	$s0, WAVESIZE, $s0;
	mul24_s32	$s0, $s0, -1;
	mul24_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	mul24hi_u32	$s0, $s0, $s0;
	// 
	mul24hi_u32	$s0, 4294967295, $s0;
	mul24hi_u32	$s0, WAVESIZE, $s0;
	mul24hi_u32	$s0, $s0, 4294967295;
	mul24hi_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	mul24hi_s32	$s0, $s0, $s0;
	// 
	mul24hi_s32	$s0, -1, $s0;
	mul24hi_s32	$s0, WAVESIZE, $s0;
	mul24hi_s32	$s0, $s0, -1;
	mul24hi_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	mad24_u32	$s0, $s0, $s0, $s0;
	// 
	mad24_u32	$s0, 4294967295, $s0, $s0;
	mad24_u32	$s0, WAVESIZE, $s0, $s0;
	mad24_u32	$s0, $s0, 4294967295, $s0;
	mad24_u32	$s0, $s0, WAVESIZE, $s0;
	mad24_u32	$s0, $s0, $s0, 4294967295;
	mad24_u32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	mad24_s32	$s0, $s0, $s0, $s0;
	// 
	mad24_s32	$s0, -1, $s0, $s0;
	mad24_s32	$s0, WAVESIZE, $s0, $s0;
	mad24_s32	$s0, $s0, -1, $s0;
	mad24_s32	$s0, $s0, WAVESIZE, $s0;
	mad24_s32	$s0, $s0, $s0, -1;
	mad24_s32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	mad24hi_u32	$s0, $s0, $s0, $s0;
	// 
	mad24hi_u32	$s0, 4294967295, $s0, $s0;
	mad24hi_u32	$s0, WAVESIZE, $s0, $s0;
	mad24hi_u32	$s0, $s0, 4294967295, $s0;
	mad24hi_u32	$s0, $s0, WAVESIZE, $s0;
	mad24hi_u32	$s0, $s0, $s0, 4294967295;
	mad24hi_u32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	mad24hi_s32	$s0, $s0, $s0, $s0;
	// 
	mad24hi_s32	$s0, -1, $s0, $s0;
	mad24hi_s32	$s0, WAVESIZE, $s0, $s0;
	mad24hi_s32	$s0, $s0, -1, $s0;
	mad24hi_s32	$s0, $s0, WAVESIZE, $s0;
	mad24hi_s32	$s0, $s0, $s0, -1;
	mad24hi_s32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	mad_u32	$s0, $s0, $s0, $s0;
	// 
	mad_u32	$s0, 4294967295, $s0, $s0;
	mad_u32	$s0, WAVESIZE, $s0, $s0;
	mad_u32	$s0, $s0, 4294967295, $s0;
	mad_u32	$s0, $s0, WAVESIZE, $s0;
	mad_u32	$s0, $s0, $s0, 4294967295;
	mad_u32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	mad_u64	$d0, $d0, $d0, $d0;
	// 
	mad_u64	$d0, 18446744073709551615, $d0, $d0;
	mad_u64	$d0, WAVESIZE, $d0, $d0;
	mad_u64	$d0, $d0, 18446744073709551615, $d0;
	mad_u64	$d0, $d0, WAVESIZE, $d0;
	mad_u64	$d0, $d0, $d0, 18446744073709551615;
	mad_u64	$d0, $d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	mad_s32	$s0, $s0, $s0, $s0;
	// 
	mad_s32	$s0, -1, $s0, $s0;
	mad_s32	$s0, WAVESIZE, $s0, $s0;
	mad_s32	$s0, $s0, -1, $s0;
	mad_s32	$s0, $s0, WAVESIZE, $s0;
	mad_s32	$s0, $s0, $s0, -1;
	mad_s32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	mad_s64	$d0, $d0, $d0, $d0;
	// 
	mad_s64	$d0, -1, $d0, $d0;
	mad_s64	$d0, WAVESIZE, $d0, $d0;
	mad_s64	$d0, $d0, -1, $d0;
	mad_s64	$d0, $d0, WAVESIZE, $d0;
	mad_s64	$d0, $d0, $d0, -1;
	mad_s64	$d0, $d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	fma_f16	$s0, $s0, $s0, $s0;
	// 
	fma_f16	$s0, 0Hffff, $s0, $s0;
	fma_f16	$s0, $s0, 0Hffff, $s0;
	fma_f16	$s0, $s0, $s0, 0Hffff;
	fma_ftz_f16	$s0, $s0, $s0, $s0;
	fma_zero_f16	$s0, $s0, $s0, $s0;
	fma_up_f16	$s0, $s0, $s0, $s0;
	fma_down_f16	$s0, $s0, $s0, $s0;
	// 
	// Next sample
	// 
	fma_f32	$s0, $s0, $s0, $s0;
	// 
	fma_f32	$s0, 0Fffffffff, $s0, $s0;
	fma_f32	$s0, $s0, 0Fffffffff, $s0;
	fma_f32	$s0, $s0, $s0, 0Fffffffff;
	fma_ftz_f32	$s0, $s0, $s0, $s0;
	fma_zero_f32	$s0, $s0, $s0, $s0;
	fma_up_f32	$s0, $s0, $s0, $s0;
	fma_down_f32	$s0, $s0, $s0, $s0;
	// 
	// Next sample
	// 
	fma_f64	$d0, $d0, $d0, $d0;
	// 
	fma_f64	$d0, 0Dffffffffffffffff, $d0, $d0;
	fma_f64	$d0, $d0, 0Dffffffffffffffff, $d0;
	fma_f64	$d0, $d0, $d0, 0Dffffffffffffffff;
	fma_ftz_f64	$d0, $d0, $d0, $d0;
	fma_zero_f64	$d0, $d0, $d0, $d0;
	fma_up_f64	$d0, $d0, $d0, $d0;
	fma_down_f64	$d0, $d0, $d0, $d0;
	// 
	// Next sample
	// 
	shl_u32	$s0, $s0, $s0;
	// 
	shl_u32	$s0, 4294967295, $s0;
	shl_u32	$s0, WAVESIZE, $s0;
	shl_u32	$s0, $s0, 4294967295;
	shl_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_u64	$d0, $d0, $s0;
	// 
	shl_u64	$d0, 18446744073709551615, $s0;
	shl_u64	$d0, WAVESIZE, $s0;
	shl_u64	$d0, $d0, 4294967295;
	shl_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_s32	$s0, $s0, $s0;
	// 
	shl_s32	$s0, -1, $s0;
	shl_s32	$s0, WAVESIZE, $s0;
	shl_s32	$s0, $s0, 4294967295;
	shl_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_s64	$d0, $d0, $s0;
	// 
	shl_s64	$d0, -1, $s0;
	shl_s64	$d0, WAVESIZE, $s0;
	shl_s64	$d0, $d0, 4294967295;
	shl_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_u8x4	$s0, $s0, $s0;
	// 
	shl_u8x4	$s0, _u8x4(255,255,255,255), $s0;
	shl_u8x4	$s0, $s0, 4294967295;
	shl_u8x4	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_u16x2	$s0, $s0, $s0;
	// 
	shl_u16x2	$s0, _u16x2(65535,65535), $s0;
	shl_u16x2	$s0, $s0, 4294967295;
	shl_u16x2	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_s8x4	$s0, $s0, $s0;
	// 
	shl_s8x4	$s0, _s8x4(-1,-1,-1,-1), $s0;
	shl_s8x4	$s0, $s0, 4294967295;
	shl_s8x4	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_s16x2	$s0, $s0, $s0;
	// 
	shl_s16x2	$s0, _s16x2(-1,-1), $s0;
	shl_s16x2	$s0, $s0, 4294967295;
	shl_s16x2	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_u8x8	$d0, $d0, $s0;
	// 
	shl_u8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $s0;
	shl_u8x8	$d0, $d0, 4294967295;
	shl_u8x8	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_u16x4	$d0, $d0, $s0;
	// 
	shl_u16x4	$d0, _u16x4(65535,65535,65535,65535), $s0;
	shl_u16x4	$d0, $d0, 4294967295;
	shl_u16x4	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_u32x2	$d0, $d0, $s0;
	// 
	shl_u32x2	$d0, _u32x2(4294967295,4294967295), $s0;
	shl_u32x2	$d0, $d0, 4294967295;
	shl_u32x2	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_s8x8	$d0, $d0, $s0;
	// 
	shl_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $s0;
	shl_s8x8	$d0, $d0, 4294967295;
	shl_s8x8	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_s16x4	$d0, $d0, $s0;
	// 
	shl_s16x4	$d0, _s16x4(-1,-1,-1,-1), $s0;
	shl_s16x4	$d0, $d0, 4294967295;
	shl_s16x4	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_s32x2	$d0, $d0, $s0;
	// 
	shl_s32x2	$d0, _s32x2(-1,-1), $s0;
	shl_s32x2	$d0, $d0, 4294967295;
	shl_s32x2	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_u8x16	$q0, $q0, $s0;
	// 
	shl_u8x16	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $s0;
	shl_u8x16	$q0, $q0, 4294967295;
	shl_u8x16	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_u16x8	$q0, $q0, $s0;
	// 
	shl_u16x8	$q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $s0;
	shl_u16x8	$q0, $q0, 4294967295;
	shl_u16x8	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_u32x4	$q0, $q0, $s0;
	// 
	shl_u32x4	$q0, _u32x4(0,0,1810905006,845094001), $s0;
	shl_u32x4	$q0, $q0, 4294967295;
	shl_u32x4	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_u64x2	$q0, $q0, $s0;
	// 
	shl_u64x2	$q0, _u64x2(0,7777777777777777777), $s0;
	shl_u64x2	$q0, $q0, 4294967295;
	shl_u64x2	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_s8x16	$q0, $q0, $s0;
	// 
	shl_s8x16	$q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113), $s0;
	shl_s8x16	$q0, $q0, 4294967295;
	shl_s8x16	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_s16x8	$q0, $q0, $s0;
	// 
	shl_s16x8	$q0, _s16x8(0,0,0,0,27632,14254,12895,7281), $s0;
	shl_s16x8	$q0, $q0, 4294967295;
	shl_s16x8	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_s32x4	$q0, $q0, $s0;
	// 
	shl_s32x4	$q0, _s32x4(0,0,1810905006,845094001), $s0;
	shl_s32x4	$q0, $q0, 4294967295;
	shl_s32x4	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shl_s64x2	$q0, $q0, $s0;
	// 
	shl_s64x2	$q0, _s64x2(0,7777777777777777777), $s0;
	shl_s64x2	$q0, $q0, 4294967295;
	shl_s64x2	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_u32	$s0, $s0, $s0;
	// 
	shr_u32	$s0, 4294967295, $s0;
	shr_u32	$s0, WAVESIZE, $s0;
	shr_u32	$s0, $s0, 4294967295;
	shr_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_u64	$d0, $d0, $s0;
	// 
	shr_u64	$d0, 18446744073709551615, $s0;
	shr_u64	$d0, WAVESIZE, $s0;
	shr_u64	$d0, $d0, 4294967295;
	shr_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_s32	$s0, $s0, $s0;
	// 
	shr_s32	$s0, -1, $s0;
	shr_s32	$s0, WAVESIZE, $s0;
	shr_s32	$s0, $s0, 4294967295;
	shr_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_s64	$d0, $d0, $s0;
	// 
	shr_s64	$d0, -1, $s0;
	shr_s64	$d0, WAVESIZE, $s0;
	shr_s64	$d0, $d0, 4294967295;
	shr_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_u8x4	$s0, $s0, $s0;
	// 
	shr_u8x4	$s0, _u8x4(255,255,255,255), $s0;
	shr_u8x4	$s0, $s0, 4294967295;
	shr_u8x4	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_u16x2	$s0, $s0, $s0;
	// 
	shr_u16x2	$s0, _u16x2(65535,65535), $s0;
	shr_u16x2	$s0, $s0, 4294967295;
	shr_u16x2	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_s8x4	$s0, $s0, $s0;
	// 
	shr_s8x4	$s0, _s8x4(-1,-1,-1,-1), $s0;
	shr_s8x4	$s0, $s0, 4294967295;
	shr_s8x4	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_s16x2	$s0, $s0, $s0;
	// 
	shr_s16x2	$s0, _s16x2(-1,-1), $s0;
	shr_s16x2	$s0, $s0, 4294967295;
	shr_s16x2	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_u8x8	$d0, $d0, $s0;
	// 
	shr_u8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $s0;
	shr_u8x8	$d0, $d0, 4294967295;
	shr_u8x8	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_u16x4	$d0, $d0, $s0;
	// 
	shr_u16x4	$d0, _u16x4(65535,65535,65535,65535), $s0;
	shr_u16x4	$d0, $d0, 4294967295;
	shr_u16x4	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_u32x2	$d0, $d0, $s0;
	// 
	shr_u32x2	$d0, _u32x2(4294967295,4294967295), $s0;
	shr_u32x2	$d0, $d0, 4294967295;
	shr_u32x2	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_s8x8	$d0, $d0, $s0;
	// 
	shr_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $s0;
	shr_s8x8	$d0, $d0, 4294967295;
	shr_s8x8	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_s16x4	$d0, $d0, $s0;
	// 
	shr_s16x4	$d0, _s16x4(-1,-1,-1,-1), $s0;
	shr_s16x4	$d0, $d0, 4294967295;
	shr_s16x4	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_s32x2	$d0, $d0, $s0;
	// 
	shr_s32x2	$d0, _s32x2(-1,-1), $s0;
	shr_s32x2	$d0, $d0, 4294967295;
	shr_s32x2	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_u8x16	$q0, $q0, $s0;
	// 
	shr_u8x16	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $s0;
	shr_u8x16	$q0, $q0, 4294967295;
	shr_u8x16	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_u16x8	$q0, $q0, $s0;
	// 
	shr_u16x8	$q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $s0;
	shr_u16x8	$q0, $q0, 4294967295;
	shr_u16x8	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_u32x4	$q0, $q0, $s0;
	// 
	shr_u32x4	$q0, _u32x4(0,0,1810905006,845094001), $s0;
	shr_u32x4	$q0, $q0, 4294967295;
	shr_u32x4	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_u64x2	$q0, $q0, $s0;
	// 
	shr_u64x2	$q0, _u64x2(0,7777777777777777777), $s0;
	shr_u64x2	$q0, $q0, 4294967295;
	shr_u64x2	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_s8x16	$q0, $q0, $s0;
	// 
	shr_s8x16	$q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113), $s0;
	shr_s8x16	$q0, $q0, 4294967295;
	shr_s8x16	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_s16x8	$q0, $q0, $s0;
	// 
	shr_s16x8	$q0, _s16x8(0,0,0,0,27632,14254,12895,7281), $s0;
	shr_s16x8	$q0, $q0, 4294967295;
	shr_s16x8	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_s32x4	$q0, $q0, $s0;
	// 
	shr_s32x4	$q0, _s32x4(0,0,1810905006,845094001), $s0;
	shr_s32x4	$q0, $q0, 4294967295;
	shr_s32x4	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	shr_s64x2	$q0, $q0, $s0;
	// 
	shr_s64x2	$q0, _s64x2(0,7777777777777777777), $s0;
	shr_s64x2	$q0, $q0, 4294967295;
	shr_s64x2	$q0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	and_b1	$c0, $c0, $c0;
	// 
	and_b1	$c0, 1, $c0;
	and_b1	$c0, WAVESIZE, $c0;
	and_b1	$c0, $c0, 1;
	and_b1	$c0, $c0, WAVESIZE;
	// 
	// Next sample
	// 
	and_b32	$s0, $s0, $s0;
	// 
	and_b32	$s0, 4294967295, $s0;
	and_b32	$s0, WAVESIZE, $s0;
	and_b32	$s0, $s0, 4294967295;
	and_b32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	and_b64	$d0, $d0, $d0;
	// 
	and_b64	$d0, 18446744073709551615, $d0;
	and_b64	$d0, WAVESIZE, $d0;
	and_b64	$d0, $d0, 18446744073709551615;
	and_b64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	or_b1	$c0, $c0, $c0;
	// 
	or_b1	$c0, 1, $c0;
	or_b1	$c0, WAVESIZE, $c0;
	or_b1	$c0, $c0, 1;
	or_b1	$c0, $c0, WAVESIZE;
	// 
	// Next sample
	// 
	or_b32	$s0, $s0, $s0;
	// 
	or_b32	$s0, 4294967295, $s0;
	or_b32	$s0, WAVESIZE, $s0;
	or_b32	$s0, $s0, 4294967295;
	or_b32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	or_b64	$d0, $d0, $d0;
	// 
	or_b64	$d0, 18446744073709551615, $d0;
	or_b64	$d0, WAVESIZE, $d0;
	or_b64	$d0, $d0, 18446744073709551615;
	or_b64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	xor_b1	$c0, $c0, $c0;
	// 
	xor_b1	$c0, 1, $c0;
	xor_b1	$c0, WAVESIZE, $c0;
	xor_b1	$c0, $c0, 1;
	xor_b1	$c0, $c0, WAVESIZE;
	// 
	// Next sample
	// 
	xor_b32	$s0, $s0, $s0;
	// 
	xor_b32	$s0, 4294967295, $s0;
	xor_b32	$s0, WAVESIZE, $s0;
	xor_b32	$s0, $s0, 4294967295;
	xor_b32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	xor_b64	$d0, $d0, $d0;
	// 
	xor_b64	$d0, 18446744073709551615, $d0;
	xor_b64	$d0, WAVESIZE, $d0;
	xor_b64	$d0, $d0, 18446744073709551615;
	xor_b64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	not_b1	$c0, $c0;
	// 
	not_b1	$c0, 1;
	not_b1	$c0, WAVESIZE;
	// 
	// Next sample
	// 
	not_b32	$s0, $s0;
	// 
	not_b32	$s0, 4294967295;
	not_b32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	not_b64	$d0, $d0;
	// 
	not_b64	$d0, 18446744073709551615;
	not_b64	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	popcount_u32_b32	$s0, $s0;
	// 
	popcount_u32_b32	$s0, 4294967295;
	popcount_u32_b32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	popcount_u32_b64	$s0, $d0;
	// 
	popcount_u32_b64	$s0, 18446744073709551615;
	popcount_u32_b64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	bitmask_b32	$s0, $s0, $s0;
	// 
	bitmask_b32	$s0, 4294967295, $s0;
	bitmask_b32	$s0, WAVESIZE, $s0;
	bitmask_b32	$s0, $s0, 4294967295;
	bitmask_b32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	bitmask_b64	$d0, $s0, $s0;
	// 
	bitmask_b64	$d0, 4294967295, $s0;
	bitmask_b64	$d0, WAVESIZE, $s0;
	bitmask_b64	$d0, $s0, 4294967295;
	bitmask_b64	$d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	bitselect_b32	$s0, $s0, $s0, $s0;
	// 
	bitselect_b32	$s0, 4294967295, $s0, $s0;
	bitselect_b32	$s0, WAVESIZE, $s0, $s0;
	bitselect_b32	$s0, $s0, 4294967295, $s0;
	bitselect_b32	$s0, $s0, WAVESIZE, $s0;
	bitselect_b32	$s0, $s0, $s0, 4294967295;
	bitselect_b32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	bitselect_b64	$d0, $d0, $d0, $d0;
	// 
	bitselect_b64	$d0, 18446744073709551615, $d0, $d0;
	bitselect_b64	$d0, WAVESIZE, $d0, $d0;
	bitselect_b64	$d0, $d0, 18446744073709551615, $d0;
	bitselect_b64	$d0, $d0, WAVESIZE, $d0;
	bitselect_b64	$d0, $d0, $d0, 18446744073709551615;
	bitselect_b64	$d0, $d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	bitrev_b32	$s0, $s0;
	// 
	bitrev_b32	$s0, 4294967295;
	bitrev_b32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	bitrev_b64	$d0, $d0;
	// 
	bitrev_b64	$d0, 18446744073709551615;
	bitrev_b64	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	bitextract_u32	$s0, $s0, $s0, $s0;
	// 
	bitextract_u32	$s0, 4294967295, $s0, $s0;
	bitextract_u32	$s0, WAVESIZE, $s0, $s0;
	bitextract_u32	$s0, $s0, 4294967295, $s0;
	bitextract_u32	$s0, $s0, WAVESIZE, $s0;
	bitextract_u32	$s0, $s0, $s0, 4294967295;
	bitextract_u32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	bitextract_u64	$d0, $d0, $s0, $s0;
	// 
	bitextract_u64	$d0, 18446744073709551615, $s0, $s0;
	bitextract_u64	$d0, WAVESIZE, $s0, $s0;
	bitextract_u64	$d0, $d0, 4294967295, $s0;
	bitextract_u64	$d0, $d0, WAVESIZE, $s0;
	bitextract_u64	$d0, $d0, $s0, 4294967295;
	bitextract_u64	$d0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	bitextract_s32	$s0, $s0, $s0, $s0;
	// 
	bitextract_s32	$s0, -1, $s0, $s0;
	bitextract_s32	$s0, WAVESIZE, $s0, $s0;
	bitextract_s32	$s0, $s0, 4294967295, $s0;
	bitextract_s32	$s0, $s0, WAVESIZE, $s0;
	bitextract_s32	$s0, $s0, $s0, 4294967295;
	bitextract_s32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	bitextract_s64	$d0, $d0, $s0, $s0;
	// 
	bitextract_s64	$d0, -1, $s0, $s0;
	bitextract_s64	$d0, WAVESIZE, $s0, $s0;
	bitextract_s64	$d0, $d0, 4294967295, $s0;
	bitextract_s64	$d0, $d0, WAVESIZE, $s0;
	bitextract_s64	$d0, $d0, $s0, 4294967295;
	bitextract_s64	$d0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	bitinsert_u32	$s0, $s0, $s0, $s0, $s0;
	// 
	bitinsert_u32	$s0, 4294967295, $s0, $s0, $s0;
	bitinsert_u32	$s0, WAVESIZE, $s0, $s0, $s0;
	bitinsert_u32	$s0, $s0, 4294967295, $s0, $s0;
	bitinsert_u32	$s0, $s0, WAVESIZE, $s0, $s0;
	bitinsert_u32	$s0, $s0, $s0, 4294967295, $s0;
	bitinsert_u32	$s0, $s0, $s0, WAVESIZE, $s0;
	bitinsert_u32	$s0, $s0, $s0, $s0, 4294967295;
	bitinsert_u32	$s0, $s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	bitinsert_u64	$d0, $d0, $d0, $s0, $s0;
	// 
	bitinsert_u64	$d0, 18446744073709551615, $d0, $s0, $s0;
	bitinsert_u64	$d0, WAVESIZE, $d0, $s0, $s0;
	bitinsert_u64	$d0, $d0, 18446744073709551615, $s0, $s0;
	bitinsert_u64	$d0, $d0, WAVESIZE, $s0, $s0;
	bitinsert_u64	$d0, $d0, $d0, 4294967295, $s0;
	bitinsert_u64	$d0, $d0, $d0, WAVESIZE, $s0;
	bitinsert_u64	$d0, $d0, $d0, $s0, 4294967295;
	bitinsert_u64	$d0, $d0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	bitinsert_s32	$s0, $s0, $s0, $s0, $s0;
	// 
	bitinsert_s32	$s0, -1, $s0, $s0, $s0;
	bitinsert_s32	$s0, WAVESIZE, $s0, $s0, $s0;
	bitinsert_s32	$s0, $s0, -1, $s0, $s0;
	bitinsert_s32	$s0, $s0, WAVESIZE, $s0, $s0;
	bitinsert_s32	$s0, $s0, $s0, 4294967295, $s0;
	bitinsert_s32	$s0, $s0, $s0, WAVESIZE, $s0;
	bitinsert_s32	$s0, $s0, $s0, $s0, 4294967295;
	bitinsert_s32	$s0, $s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	bitinsert_s64	$d0, $d0, $d0, $s0, $s0;
	// 
	bitinsert_s64	$d0, -1, $d0, $s0, $s0;
	bitinsert_s64	$d0, WAVESIZE, $d0, $s0, $s0;
	bitinsert_s64	$d0, $d0, -1, $s0, $s0;
	bitinsert_s64	$d0, $d0, WAVESIZE, $s0, $s0;
	bitinsert_s64	$d0, $d0, $d0, 4294967295, $s0;
	bitinsert_s64	$d0, $d0, $d0, WAVESIZE, $s0;
	bitinsert_s64	$d0, $d0, $d0, $s0, 4294967295;
	bitinsert_s64	$d0, $d0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	firstbit_u32_u32	$s0, $s0;
	// 
	firstbit_u32_u32	$s0, 4294967295;
	firstbit_u32_u32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	firstbit_u32_u64	$s0, $d0;
	// 
	firstbit_u32_u64	$s0, 18446744073709551615;
	firstbit_u32_u64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	firstbit_u32_s32	$s0, $s0;
	// 
	firstbit_u32_s32	$s0, -1;
	firstbit_u32_s32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	firstbit_u32_s64	$s0, $d0;
	// 
	firstbit_u32_s64	$s0, -1;
	firstbit_u32_s64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	lastbit_u32_u32	$s0, $s0;
	// 
	lastbit_u32_u32	$s0, 4294967295;
	lastbit_u32_u32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	lastbit_u32_u64	$s0, $d0;
	// 
	lastbit_u32_u64	$s0, 18446744073709551615;
	lastbit_u32_u64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	lastbit_u32_s32	$s0, $s0;
	// 
	lastbit_u32_s32	$s0, -1;
	lastbit_u32_s32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	lastbit_u32_s64	$s0, $d0;
	// 
	lastbit_u32_s64	$s0, -1;
	lastbit_u32_s64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	combine_v2_b64_b32	$d0, ($s0,$s0);
	// 
	combine_v2_b64_b32	$d0, ($s0,$s1);
	// 
	// Next sample
	// 
	combine_v4_b128_b32	$q0, ($s0,$s0,$s0,$s0);
	// 
	combine_v4_b128_b32	$q0, ($s0,$s1,$s2,$s3);
	// 
	// Next sample
	// 
	combine_v2_b128_b64	$q0, ($d0,$d0);
	// 
	combine_v2_b128_b64	$q0, ($d0,$d1);
	// 
	// Next sample
	// 
	expand_v2_b32_b64	($s0,$s1), $d0;
	// 
	expand_v2_b32_b64	($s0,$s1), 18446744073709551615;
	expand_v2_b32_b64	($s0,$s1), WAVESIZE;
	// 
	// Next sample
	// 
	expand_v4_b32_b128	($s0,$s1,$s2,$s3), $q0;
	// 
	expand_v4_b32_b128	($s0,$s1,$s2,$s3), _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113);
	expand_v4_b32_b128	($s0,$s1,$s2,$s3), WAVESIZE;
	// 
	// Next sample
	// 
	expand_v2_b64_b128	($d0,$d1), $q0;
	// 
	expand_v2_b64_b128	($d0,$d1), _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113);
	expand_v2_b64_b128	($d0,$d1), WAVESIZE;
	// 
	// Next sample
	// 
	mov_u32	$s0, $s0;
	// 
	mov_u32	$s0, 4294967295;
	mov_u32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	mov_u64	$d0, $d0;
	// 
	mov_u64	$d0, 18446744073709551615;
	mov_u64	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	mov_s32	$s0, $s0;
	// 
	mov_s32	$s0, -1;
	mov_s32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	mov_s64	$d0, $d0;
	// 
	mov_s64	$d0, -1;
	mov_s64	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	mov_f16	$s0, $s0;
	// 
	mov_f16	$s0, 0Hffff;
	// 
	// Next sample
	// 
	mov_f32	$s0, $s0;
	// 
	mov_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	mov_f64	$d0, $d0;
	// 
	mov_f64	$d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	mov_b1	$c0, $c0;
	// 
	mov_b1	$c0, 1;
	mov_b1	$c0, WAVESIZE;
	// 
	// Next sample
	// 
	mov_b32	$s0, $s0;
	// 
	mov_b32	$s0, 4294967295;
	mov_b32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	mov_b64	$d0, $d0;
	// 
	mov_b64	$d0, 18446744073709551615;
	mov_b64	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	mov_b128	$q0, $q0;
	// 
	mov_b128	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113);
	mov_b128	$q0, WAVESIZE;
	// 
	// Next sample
	// 
	mov_samp	$d0, $d0;
	// 
	// 
	// Next sample
	// 
	mov_roimg	$d0, $d0;
	// 
	// 
	// Next sample
	// 
	mov_rwimg	$d0, $d0;
	// 
	// 
	// Next sample
	// 
	mov_sig32	$d0, $d0;
	// 
	// 
	// Next sample
	// 
	mov_sig64	$d0, $d0;
	// 
	// 
	// Next sample
	// 
	lda_u32	$s0, [$s0];
	// 
	lda_u32	$s0, [0];
	// 
	// Next sample
	// 
	lda_global_u32	$s0, [&GlobalVar];
	// 
	lda_global_u32	$s0, [&GlobalROImg];
	lda_global_u32	$s0, [&GlobalRWImg];
	lda_global_u32	$s0, [&GlobalSamp];
	lda_global_u32	$s0, [&GlobalSig32];
	lda_global_u32	$s0, [&GlobalSig64];
	lda_global_u32	$s0, [$s0];
	lda_global_u32	$s0, [0];
	// 
	// Next sample
	// 
	lda_readonly_u32	$s0, [&ReadonlyVar];
	// 
	lda_readonly_u32	$s0, [&ReadonlyROImg];
	lda_readonly_u32	$s0, [&ReadonlyRWImg];
	lda_readonly_u32	$s0, [&ReadonlySamp];
	lda_readonly_u32	$s0, [&ReadonlySig32];
	lda_readonly_u32	$s0, [&ReadonlySig64];
	lda_readonly_u32	$s0, [$s0];
	lda_readonly_u32	$s0, [0];
	// 
	// Next sample
	// 
	lda_kernarg_u32	$s0, [$s0];
	// 
	lda_kernarg_u32	$s0, [0];
	// 
	// Next sample
	// 
	lda_group_u32	$s0, [&GroupVar];
	// 
	lda_group_u32	$s0, [$s0];
	lda_group_u32	$s0, [0];
	// 
	// Next sample
	// 
	lda_private_u32	$s0, [&PrivateVar];
	// 
	lda_private_u32	$s0, [$s0];
	lda_private_u32	$s0, [0];
	// 
	// Next sample
	// 
	lda_spill_u32	$s0, [$s0];
	// 
	lda_spill_u32	$s0, [0];
	// 
	// Next sample
	// 
	lda_arg_u32	$s0, [$s0];
	// 
	lda_arg_u32	$s0, [0];
	// 
	// Next sample
	// 
	ldc_u32	$s0, @TestLabel;

@TestLabel:
	// 
	ldc_u32	$s0, &TestFunc;
	// 
	// Next sample
	// 
	shuffle_u8x4	$s0, $s0, $s0, 4294967295;
	// 
	shuffle_u8x4	$s0, _u8x4(255,255,255,255), $s0, 4294967295;
	shuffle_u8x4	$s0, $s0, _u8x4(255,255,255,255), 4294967295;
	// 
	// Next sample
	// 
	shuffle_u16x2	$s0, $s0, $s0, 4294967295;
	// 
	shuffle_u16x2	$s0, _u16x2(65535,65535), $s0, 4294967295;
	shuffle_u16x2	$s0, $s0, _u16x2(65535,65535), 4294967295;
	// 
	// Next sample
	// 
	shuffle_s8x4	$s0, $s0, $s0, 4294967295;
	// 
	shuffle_s8x4	$s0, _s8x4(-1,-1,-1,-1), $s0, 4294967295;
	shuffle_s8x4	$s0, $s0, _s8x4(-1,-1,-1,-1), 4294967295;
	// 
	// Next sample
	// 
	shuffle_s16x2	$s0, $s0, $s0, 4294967295;
	// 
	shuffle_s16x2	$s0, _s16x2(-1,-1), $s0, 4294967295;
	shuffle_s16x2	$s0, $s0, _s16x2(-1,-1), 4294967295;
	// 
	// Next sample
	// 
	shuffle_f16x2	$s0, $s0, $s0, 4294967295;
	// 
	shuffle_f16x2	$s0, _f16x2(0Hffff,0Hffff), $s0, 4294967295;
	shuffle_f16x2	$s0, $s0, _f16x2(0Hffff,0Hffff), 4294967295;
	// 
	// Next sample
	// 
	shuffle_u8x8	$d0, $d0, $d0, 18446744073709551615;
	// 
	shuffle_u8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $d0, 18446744073709551615;
	shuffle_u8x8	$d0, $d0, _u8x8(255,255,255,255,255,255,255,255), 18446744073709551615;
	// 
	// Next sample
	// 
	shuffle_u16x4	$d0, $d0, $d0, 18446744073709551615;
	// 
	shuffle_u16x4	$d0, _u16x4(65535,65535,65535,65535), $d0, 18446744073709551615;
	shuffle_u16x4	$d0, $d0, _u16x4(65535,65535,65535,65535), 18446744073709551615;
	// 
	// Next sample
	// 
	shuffle_u32x2	$d0, $d0, $d0, 18446744073709551615;
	// 
	shuffle_u32x2	$d0, _u32x2(4294967295,4294967295), $d0, 18446744073709551615;
	shuffle_u32x2	$d0, $d0, _u32x2(4294967295,4294967295), 18446744073709551615;
	// 
	// Next sample
	// 
	shuffle_s8x8	$d0, $d0, $d0, 18446744073709551615;
	// 
	shuffle_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $d0, 18446744073709551615;
	shuffle_s8x8	$d0, $d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), 18446744073709551615;
	// 
	// Next sample
	// 
	shuffle_s16x4	$d0, $d0, $d0, 18446744073709551615;
	// 
	shuffle_s16x4	$d0, _s16x4(-1,-1,-1,-1), $d0, 18446744073709551615;
	shuffle_s16x4	$d0, $d0, _s16x4(-1,-1,-1,-1), 18446744073709551615;
	// 
	// Next sample
	// 
	shuffle_s32x2	$d0, $d0, $d0, 18446744073709551615;
	// 
	shuffle_s32x2	$d0, _s32x2(-1,-1), $d0, 18446744073709551615;
	shuffle_s32x2	$d0, $d0, _s32x2(-1,-1), 18446744073709551615;
	// 
	// Next sample
	// 
	shuffle_f16x4	$d0, $d0, $d0, 18446744073709551615;
	// 
	shuffle_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), $d0, 18446744073709551615;
	shuffle_f16x4	$d0, $d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), 18446744073709551615;
	// 
	// Next sample
	// 
	shuffle_f32x2	$d0, $d0, $d0, 18446744073709551615;
	// 
	shuffle_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff), $d0, 18446744073709551615;
	shuffle_f32x2	$d0, $d0, _f32x2(0Fffffffff,0Fffffffff), 18446744073709551615;
	// 
	// Next sample
	// 
	unpacklo_u8x4	$s0, $s0, $s0;
	// 
	unpacklo_u8x4	$s0, _u8x4(255,255,255,255), $s0;
	unpacklo_u8x4	$s0, $s0, _u8x4(255,255,255,255);
	// 
	// Next sample
	// 
	unpacklo_u16x2	$s0, $s0, $s0;
	// 
	unpacklo_u16x2	$s0, _u16x2(65535,65535), $s0;
	unpacklo_u16x2	$s0, $s0, _u16x2(65535,65535);
	// 
	// Next sample
	// 
	unpacklo_s8x4	$s0, $s0, $s0;
	// 
	unpacklo_s8x4	$s0, _s8x4(-1,-1,-1,-1), $s0;
	unpacklo_s8x4	$s0, $s0, _s8x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	unpacklo_s16x2	$s0, $s0, $s0;
	// 
	unpacklo_s16x2	$s0, _s16x2(-1,-1), $s0;
	unpacklo_s16x2	$s0, $s0, _s16x2(-1,-1);
	// 
	// Next sample
	// 
	unpacklo_f16x2	$s0, $s0, $s0;
	// 
	unpacklo_f16x2	$s0, _f16x2(0Hffff,0Hffff), $s0;
	unpacklo_f16x2	$s0, $s0, _f16x2(0Hffff,0Hffff);
	// 
	// Next sample
	// 
	unpacklo_u8x8	$d0, $d0, $d0;
	// 
	unpacklo_u8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $d0;
	unpacklo_u8x8	$d0, $d0, _u8x8(255,255,255,255,255,255,255,255);
	// 
	// Next sample
	// 
	unpacklo_u16x4	$d0, $d0, $d0;
	// 
	unpacklo_u16x4	$d0, _u16x4(65535,65535,65535,65535), $d0;
	unpacklo_u16x4	$d0, $d0, _u16x4(65535,65535,65535,65535);
	// 
	// Next sample
	// 
	unpacklo_u32x2	$d0, $d0, $d0;
	// 
	unpacklo_u32x2	$d0, _u32x2(4294967295,4294967295), $d0;
	unpacklo_u32x2	$d0, $d0, _u32x2(4294967295,4294967295);
	// 
	// Next sample
	// 
	unpacklo_s8x8	$d0, $d0, $d0;
	// 
	unpacklo_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $d0;
	unpacklo_s8x8	$d0, $d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1);
	// 
	// Next sample
	// 
	unpacklo_s16x4	$d0, $d0, $d0;
	// 
	unpacklo_s16x4	$d0, _s16x4(-1,-1,-1,-1), $d0;
	unpacklo_s16x4	$d0, $d0, _s16x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	unpacklo_s32x2	$d0, $d0, $d0;
	// 
	unpacklo_s32x2	$d0, _s32x2(-1,-1), $d0;
	unpacklo_s32x2	$d0, $d0, _s32x2(-1,-1);
	// 
	// Next sample
	// 
	unpacklo_f16x4	$d0, $d0, $d0;
	// 
	unpacklo_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), $d0;
	unpacklo_f16x4	$d0, $d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	// 
	// Next sample
	// 
	unpacklo_f32x2	$d0, $d0, $d0;
	// 
	unpacklo_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff), $d0;
	unpacklo_f32x2	$d0, $d0, _f32x2(0Fffffffff,0Fffffffff);
	// 
	// Next sample
	// 
	unpackhi_u8x4	$s0, $s0, $s0;
	// 
	unpackhi_u8x4	$s0, _u8x4(255,255,255,255), $s0;
	unpackhi_u8x4	$s0, $s0, _u8x4(255,255,255,255);
	// 
	// Next sample
	// 
	unpackhi_u16x2	$s0, $s0, $s0;
	// 
	unpackhi_u16x2	$s0, _u16x2(65535,65535), $s0;
	unpackhi_u16x2	$s0, $s0, _u16x2(65535,65535);
	// 
	// Next sample
	// 
	unpackhi_s8x4	$s0, $s0, $s0;
	// 
	unpackhi_s8x4	$s0, _s8x4(-1,-1,-1,-1), $s0;
	unpackhi_s8x4	$s0, $s0, _s8x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	unpackhi_s16x2	$s0, $s0, $s0;
	// 
	unpackhi_s16x2	$s0, _s16x2(-1,-1), $s0;
	unpackhi_s16x2	$s0, $s0, _s16x2(-1,-1);
	// 
	// Next sample
	// 
	unpackhi_f16x2	$s0, $s0, $s0;
	// 
	unpackhi_f16x2	$s0, _f16x2(0Hffff,0Hffff), $s0;
	unpackhi_f16x2	$s0, $s0, _f16x2(0Hffff,0Hffff);
	// 
	// Next sample
	// 
	unpackhi_u8x8	$d0, $d0, $d0;
	// 
	unpackhi_u8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $d0;
	unpackhi_u8x8	$d0, $d0, _u8x8(255,255,255,255,255,255,255,255);
	// 
	// Next sample
	// 
	unpackhi_u16x4	$d0, $d0, $d0;
	// 
	unpackhi_u16x4	$d0, _u16x4(65535,65535,65535,65535), $d0;
	unpackhi_u16x4	$d0, $d0, _u16x4(65535,65535,65535,65535);
	// 
	// Next sample
	// 
	unpackhi_u32x2	$d0, $d0, $d0;
	// 
	unpackhi_u32x2	$d0, _u32x2(4294967295,4294967295), $d0;
	unpackhi_u32x2	$d0, $d0, _u32x2(4294967295,4294967295);
	// 
	// Next sample
	// 
	unpackhi_s8x8	$d0, $d0, $d0;
	// 
	unpackhi_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $d0;
	unpackhi_s8x8	$d0, $d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1);
	// 
	// Next sample
	// 
	unpackhi_s16x4	$d0, $d0, $d0;
	// 
	unpackhi_s16x4	$d0, _s16x4(-1,-1,-1,-1), $d0;
	unpackhi_s16x4	$d0, $d0, _s16x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	unpackhi_s32x2	$d0, $d0, $d0;
	// 
	unpackhi_s32x2	$d0, _s32x2(-1,-1), $d0;
	unpackhi_s32x2	$d0, $d0, _s32x2(-1,-1);
	// 
	// Next sample
	// 
	unpackhi_f16x4	$d0, $d0, $d0;
	// 
	unpackhi_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), $d0;
	unpackhi_f16x4	$d0, $d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	// 
	// Next sample
	// 
	unpackhi_f32x2	$d0, $d0, $d0;
	// 
	unpackhi_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff), $d0;
	unpackhi_f32x2	$d0, $d0, _f32x2(0Fffffffff,0Fffffffff);
	// 
	// Next sample
	// 
	pack_u8x4_u32	$s0, $s0, $s0, $s0;
	// 
	pack_u8x4_u32	$s0, _u8x4(255,255,255,255), $s0, $s0;
	pack_u8x4_u32	$s0, $s0, 4294967295, $s0;
	pack_u8x4_u32	$s0, $s0, WAVESIZE, $s0;
	pack_u8x4_u32	$s0, $s0, $s0, 4294967295;
	pack_u8x4_u32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u16x2_u32	$s0, $s0, $s0, $s0;
	// 
	pack_u16x2_u32	$s0, _u16x2(65535,65535), $s0, $s0;
	pack_u16x2_u32	$s0, $s0, 4294967295, $s0;
	pack_u16x2_u32	$s0, $s0, WAVESIZE, $s0;
	pack_u16x2_u32	$s0, $s0, $s0, 4294967295;
	pack_u16x2_u32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u8x8_u32	$d0, $d0, $s0, $s0;
	// 
	pack_u8x8_u32	$d0, _u8x8(255,255,255,255,255,255,255,255), $s0, $s0;
	pack_u8x8_u32	$d0, $d0, 4294967295, $s0;
	pack_u8x8_u32	$d0, $d0, WAVESIZE, $s0;
	pack_u8x8_u32	$d0, $d0, $s0, 4294967295;
	pack_u8x8_u32	$d0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u16x4_u32	$d0, $d0, $s0, $s0;
	// 
	pack_u16x4_u32	$d0, _u16x4(65535,65535,65535,65535), $s0, $s0;
	pack_u16x4_u32	$d0, $d0, 4294967295, $s0;
	pack_u16x4_u32	$d0, $d0, WAVESIZE, $s0;
	pack_u16x4_u32	$d0, $d0, $s0, 4294967295;
	pack_u16x4_u32	$d0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u32x2_u32	$d0, $d0, $s0, $s0;
	// 
	pack_u32x2_u32	$d0, _u32x2(4294967295,4294967295), $s0, $s0;
	pack_u32x2_u32	$d0, $d0, 4294967295, $s0;
	pack_u32x2_u32	$d0, $d0, WAVESIZE, $s0;
	pack_u32x2_u32	$d0, $d0, $s0, 4294967295;
	pack_u32x2_u32	$d0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u8x16_u32	$q0, $q0, $s0, $s0;
	// 
	pack_u8x16_u32	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $s0, $s0;
	pack_u8x16_u32	$q0, $q0, 4294967295, $s0;
	pack_u8x16_u32	$q0, $q0, WAVESIZE, $s0;
	pack_u8x16_u32	$q0, $q0, $s0, 4294967295;
	pack_u8x16_u32	$q0, $q0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u16x8_u32	$q0, $q0, $s0, $s0;
	// 
	pack_u16x8_u32	$q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $s0, $s0;
	pack_u16x8_u32	$q0, $q0, 4294967295, $s0;
	pack_u16x8_u32	$q0, $q0, WAVESIZE, $s0;
	pack_u16x8_u32	$q0, $q0, $s0, 4294967295;
	pack_u16x8_u32	$q0, $q0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u32x4_u32	$q0, $q0, $s0, $s0;
	// 
	pack_u32x4_u32	$q0, _u32x4(0,0,1810905006,845094001), $s0, $s0;
	pack_u32x4_u32	$q0, $q0, 4294967295, $s0;
	pack_u32x4_u32	$q0, $q0, WAVESIZE, $s0;
	pack_u32x4_u32	$q0, $q0, $s0, 4294967295;
	pack_u32x4_u32	$q0, $q0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u8x4_u64	$s0, $s0, $d0, $s0;
	// 
	pack_u8x4_u64	$s0, _u8x4(255,255,255,255), $d0, $s0;
	pack_u8x4_u64	$s0, $s0, 18446744073709551615, $s0;
	pack_u8x4_u64	$s0, $s0, WAVESIZE, $s0;
	pack_u8x4_u64	$s0, $s0, $d0, 4294967295;
	pack_u8x4_u64	$s0, $s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u16x2_u64	$s0, $s0, $d0, $s0;
	// 
	pack_u16x2_u64	$s0, _u16x2(65535,65535), $d0, $s0;
	pack_u16x2_u64	$s0, $s0, 18446744073709551615, $s0;
	pack_u16x2_u64	$s0, $s0, WAVESIZE, $s0;
	pack_u16x2_u64	$s0, $s0, $d0, 4294967295;
	pack_u16x2_u64	$s0, $s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u8x8_u64	$d0, $d0, $d0, $s0;
	// 
	pack_u8x8_u64	$d0, _u8x8(255,255,255,255,255,255,255,255), $d0, $s0;
	pack_u8x8_u64	$d0, $d0, 18446744073709551615, $s0;
	pack_u8x8_u64	$d0, $d0, WAVESIZE, $s0;
	pack_u8x8_u64	$d0, $d0, $d0, 4294967295;
	pack_u8x8_u64	$d0, $d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u16x4_u64	$d0, $d0, $d0, $s0;
	// 
	pack_u16x4_u64	$d0, _u16x4(65535,65535,65535,65535), $d0, $s0;
	pack_u16x4_u64	$d0, $d0, 18446744073709551615, $s0;
	pack_u16x4_u64	$d0, $d0, WAVESIZE, $s0;
	pack_u16x4_u64	$d0, $d0, $d0, 4294967295;
	pack_u16x4_u64	$d0, $d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u32x2_u64	$d0, $d0, $d0, $s0;
	// 
	pack_u32x2_u64	$d0, _u32x2(4294967295,4294967295), $d0, $s0;
	pack_u32x2_u64	$d0, $d0, 18446744073709551615, $s0;
	pack_u32x2_u64	$d0, $d0, WAVESIZE, $s0;
	pack_u32x2_u64	$d0, $d0, $d0, 4294967295;
	pack_u32x2_u64	$d0, $d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u8x16_u64	$q0, $q0, $d0, $s0;
	// 
	pack_u8x16_u64	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $d0, $s0;
	pack_u8x16_u64	$q0, $q0, 18446744073709551615, $s0;
	pack_u8x16_u64	$q0, $q0, WAVESIZE, $s0;
	pack_u8x16_u64	$q0, $q0, $d0, 4294967295;
	pack_u8x16_u64	$q0, $q0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u16x8_u64	$q0, $q0, $d0, $s0;
	// 
	pack_u16x8_u64	$q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $d0, $s0;
	pack_u16x8_u64	$q0, $q0, 18446744073709551615, $s0;
	pack_u16x8_u64	$q0, $q0, WAVESIZE, $s0;
	pack_u16x8_u64	$q0, $q0, $d0, 4294967295;
	pack_u16x8_u64	$q0, $q0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u32x4_u64	$q0, $q0, $d0, $s0;
	// 
	pack_u32x4_u64	$q0, _u32x4(0,0,1810905006,845094001), $d0, $s0;
	pack_u32x4_u64	$q0, $q0, 18446744073709551615, $s0;
	pack_u32x4_u64	$q0, $q0, WAVESIZE, $s0;
	pack_u32x4_u64	$q0, $q0, $d0, 4294967295;
	pack_u32x4_u64	$q0, $q0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_u64x2_u64	$q0, $q0, $d0, $s0;
	// 
	pack_u64x2_u64	$q0, _u64x2(0,7777777777777777777), $d0, $s0;
	pack_u64x2_u64	$q0, $q0, 18446744073709551615, $s0;
	pack_u64x2_u64	$q0, $q0, WAVESIZE, $s0;
	pack_u64x2_u64	$q0, $q0, $d0, 4294967295;
	pack_u64x2_u64	$q0, $q0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s8x4_s32	$s0, $s0, $s0, $s0;
	// 
	pack_s8x4_s32	$s0, _s8x4(-1,-1,-1,-1), $s0, $s0;
	pack_s8x4_s32	$s0, $s0, -1, $s0;
	pack_s8x4_s32	$s0, $s0, WAVESIZE, $s0;
	pack_s8x4_s32	$s0, $s0, $s0, 4294967295;
	pack_s8x4_s32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s16x2_s32	$s0, $s0, $s0, $s0;
	// 
	pack_s16x2_s32	$s0, _s16x2(-1,-1), $s0, $s0;
	pack_s16x2_s32	$s0, $s0, -1, $s0;
	pack_s16x2_s32	$s0, $s0, WAVESIZE, $s0;
	pack_s16x2_s32	$s0, $s0, $s0, 4294967295;
	pack_s16x2_s32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s8x8_s32	$d0, $d0, $s0, $s0;
	// 
	pack_s8x8_s32	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $s0, $s0;
	pack_s8x8_s32	$d0, $d0, -1, $s0;
	pack_s8x8_s32	$d0, $d0, WAVESIZE, $s0;
	pack_s8x8_s32	$d0, $d0, $s0, 4294967295;
	pack_s8x8_s32	$d0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s16x4_s32	$d0, $d0, $s0, $s0;
	// 
	pack_s16x4_s32	$d0, _s16x4(-1,-1,-1,-1), $s0, $s0;
	pack_s16x4_s32	$d0, $d0, -1, $s0;
	pack_s16x4_s32	$d0, $d0, WAVESIZE, $s0;
	pack_s16x4_s32	$d0, $d0, $s0, 4294967295;
	pack_s16x4_s32	$d0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s32x2_s32	$d0, $d0, $s0, $s0;
	// 
	pack_s32x2_s32	$d0, _s32x2(-1,-1), $s0, $s0;
	pack_s32x2_s32	$d0, $d0, -1, $s0;
	pack_s32x2_s32	$d0, $d0, WAVESIZE, $s0;
	pack_s32x2_s32	$d0, $d0, $s0, 4294967295;
	pack_s32x2_s32	$d0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s8x16_s32	$q0, $q0, $s0, $s0;
	// 
	pack_s8x16_s32	$q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113), $s0, $s0;
	pack_s8x16_s32	$q0, $q0, -1, $s0;
	pack_s8x16_s32	$q0, $q0, WAVESIZE, $s0;
	pack_s8x16_s32	$q0, $q0, $s0, 4294967295;
	pack_s8x16_s32	$q0, $q0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s16x8_s32	$q0, $q0, $s0, $s0;
	// 
	pack_s16x8_s32	$q0, _s16x8(0,0,0,0,27632,14254,12895,7281), $s0, $s0;
	pack_s16x8_s32	$q0, $q0, -1, $s0;
	pack_s16x8_s32	$q0, $q0, WAVESIZE, $s0;
	pack_s16x8_s32	$q0, $q0, $s0, 4294967295;
	pack_s16x8_s32	$q0, $q0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s32x4_s32	$q0, $q0, $s0, $s0;
	// 
	pack_s32x4_s32	$q0, _s32x4(0,0,1810905006,845094001), $s0, $s0;
	pack_s32x4_s32	$q0, $q0, -1, $s0;
	pack_s32x4_s32	$q0, $q0, WAVESIZE, $s0;
	pack_s32x4_s32	$q0, $q0, $s0, 4294967295;
	pack_s32x4_s32	$q0, $q0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s8x4_s64	$s0, $s0, $d0, $s0;
	// 
	pack_s8x4_s64	$s0, _s8x4(-1,-1,-1,-1), $d0, $s0;
	pack_s8x4_s64	$s0, $s0, -1, $s0;
	pack_s8x4_s64	$s0, $s0, WAVESIZE, $s0;
	pack_s8x4_s64	$s0, $s0, $d0, 4294967295;
	pack_s8x4_s64	$s0, $s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s16x2_s64	$s0, $s0, $d0, $s0;
	// 
	pack_s16x2_s64	$s0, _s16x2(-1,-1), $d0, $s0;
	pack_s16x2_s64	$s0, $s0, -1, $s0;
	pack_s16x2_s64	$s0, $s0, WAVESIZE, $s0;
	pack_s16x2_s64	$s0, $s0, $d0, 4294967295;
	pack_s16x2_s64	$s0, $s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s8x8_s64	$d0, $d0, $d0, $s0;
	// 
	pack_s8x8_s64	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $d0, $s0;
	pack_s8x8_s64	$d0, $d0, -1, $s0;
	pack_s8x8_s64	$d0, $d0, WAVESIZE, $s0;
	pack_s8x8_s64	$d0, $d0, $d0, 4294967295;
	pack_s8x8_s64	$d0, $d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s16x4_s64	$d0, $d0, $d0, $s0;
	// 
	pack_s16x4_s64	$d0, _s16x4(-1,-1,-1,-1), $d0, $s0;
	pack_s16x4_s64	$d0, $d0, -1, $s0;
	pack_s16x4_s64	$d0, $d0, WAVESIZE, $s0;
	pack_s16x4_s64	$d0, $d0, $d0, 4294967295;
	pack_s16x4_s64	$d0, $d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s32x2_s64	$d0, $d0, $d0, $s0;
	// 
	pack_s32x2_s64	$d0, _s32x2(-1,-1), $d0, $s0;
	pack_s32x2_s64	$d0, $d0, -1, $s0;
	pack_s32x2_s64	$d0, $d0, WAVESIZE, $s0;
	pack_s32x2_s64	$d0, $d0, $d0, 4294967295;
	pack_s32x2_s64	$d0, $d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s8x16_s64	$q0, $q0, $d0, $s0;
	// 
	pack_s8x16_s64	$q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113), $d0, $s0;
	pack_s8x16_s64	$q0, $q0, -1, $s0;
	pack_s8x16_s64	$q0, $q0, WAVESIZE, $s0;
	pack_s8x16_s64	$q0, $q0, $d0, 4294967295;
	pack_s8x16_s64	$q0, $q0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s16x8_s64	$q0, $q0, $d0, $s0;
	// 
	pack_s16x8_s64	$q0, _s16x8(0,0,0,0,27632,14254,12895,7281), $d0, $s0;
	pack_s16x8_s64	$q0, $q0, -1, $s0;
	pack_s16x8_s64	$q0, $q0, WAVESIZE, $s0;
	pack_s16x8_s64	$q0, $q0, $d0, 4294967295;
	pack_s16x8_s64	$q0, $q0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s32x4_s64	$q0, $q0, $d0, $s0;
	// 
	pack_s32x4_s64	$q0, _s32x4(0,0,1810905006,845094001), $d0, $s0;
	pack_s32x4_s64	$q0, $q0, -1, $s0;
	pack_s32x4_s64	$q0, $q0, WAVESIZE, $s0;
	pack_s32x4_s64	$q0, $q0, $d0, 4294967295;
	pack_s32x4_s64	$q0, $q0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_s64x2_s64	$q0, $q0, $d0, $s0;
	// 
	pack_s64x2_s64	$q0, _s64x2(0,7777777777777777777), $d0, $s0;
	pack_s64x2_s64	$q0, $q0, -1, $s0;
	pack_s64x2_s64	$q0, $q0, WAVESIZE, $s0;
	pack_s64x2_s64	$q0, $q0, $d0, 4294967295;
	pack_s64x2_s64	$q0, $q0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_f16x2_f16	$s0, $s0, $s0, $s0;
	// 
	pack_f16x2_f16	$s0, _f16x2(0Hffff,0Hffff), $s0, $s0;
	pack_f16x2_f16	$s0, $s0, 0Hffff, $s0;
	pack_f16x2_f16	$s0, $s0, $s0, 4294967295;
	pack_f16x2_f16	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_f16x4_f16	$d0, $d0, $s0, $s0;
	// 
	pack_f16x4_f16	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), $s0, $s0;
	pack_f16x4_f16	$d0, $d0, 0Hffff, $s0;
	pack_f16x4_f16	$d0, $d0, $s0, 4294967295;
	pack_f16x4_f16	$d0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_f16x8_f16	$q0, $q0, $s0, $s0;
	// 
	pack_f16x8_f16	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71), $s0, $s0;
	pack_f16x8_f16	$q0, $q0, 0Hffff, $s0;
	pack_f16x8_f16	$q0, $q0, $s0, 4294967295;
	pack_f16x8_f16	$q0, $q0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_f32x2_f32	$d0, $d0, $s0, $s0;
	// 
	pack_f32x2_f32	$d0, _f32x2(0Fffffffff,0Fffffffff), $s0, $s0;
	pack_f32x2_f32	$d0, $d0, 0Fffffffff, $s0;
	pack_f32x2_f32	$d0, $d0, $s0, 4294967295;
	pack_f32x2_f32	$d0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_f32x4_f32	$q0, $q0, $s0, $s0;
	// 
	pack_f32x4_f32	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71), $s0, $s0;
	pack_f32x4_f32	$q0, $q0, 0Fffffffff, $s0;
	pack_f32x4_f32	$q0, $q0, $s0, 4294967295;
	pack_f32x4_f32	$q0, $q0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	pack_f64x2_f64	$q0, $q0, $d0, $s0;
	// 
	pack_f64x2_f64	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71), $d0, $s0;
	pack_f64x2_f64	$q0, $q0, 0Dffffffffffffffff, $s0;
	pack_f64x2_f64	$q0, $q0, $d0, 4294967295;
	pack_f64x2_f64	$q0, $q0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u32_u8x4	$s0, $s0, $s0;
	// 
	unpack_u32_u8x4	$s0, _u8x4(255,255,255,255), $s0;
	unpack_u32_u8x4	$s0, $s0, 4294967295;
	unpack_u32_u8x4	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u64_u8x4	$d0, $s0, $s0;
	// 
	unpack_u64_u8x4	$d0, _u8x4(255,255,255,255), $s0;
	unpack_u64_u8x4	$d0, $s0, 4294967295;
	unpack_u64_u8x4	$d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u32_u16x2	$s0, $s0, $s0;
	// 
	unpack_u32_u16x2	$s0, _u16x2(65535,65535), $s0;
	unpack_u32_u16x2	$s0, $s0, 4294967295;
	unpack_u32_u16x2	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u64_u16x2	$d0, $s0, $s0;
	// 
	unpack_u64_u16x2	$d0, _u16x2(65535,65535), $s0;
	unpack_u64_u16x2	$d0, $s0, 4294967295;
	unpack_u64_u16x2	$d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s32_s8x4	$s0, $s0, $s0;
	// 
	unpack_s32_s8x4	$s0, _s8x4(-1,-1,-1,-1), $s0;
	unpack_s32_s8x4	$s0, $s0, 4294967295;
	unpack_s32_s8x4	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s64_s8x4	$d0, $s0, $s0;
	// 
	unpack_s64_s8x4	$d0, _s8x4(-1,-1,-1,-1), $s0;
	unpack_s64_s8x4	$d0, $s0, 4294967295;
	unpack_s64_s8x4	$d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s32_s16x2	$s0, $s0, $s0;
	// 
	unpack_s32_s16x2	$s0, _s16x2(-1,-1), $s0;
	unpack_s32_s16x2	$s0, $s0, 4294967295;
	unpack_s32_s16x2	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s64_s16x2	$d0, $s0, $s0;
	// 
	unpack_s64_s16x2	$d0, _s16x2(-1,-1), $s0;
	unpack_s64_s16x2	$d0, $s0, 4294967295;
	unpack_s64_s16x2	$d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_f16_f16x2	$s0, $s0, $s0;
	// 
	unpack_f16_f16x2	$s0, _f16x2(0Hffff,0Hffff), $s0;
	unpack_f16_f16x2	$s0, $s0, 4294967295;
	unpack_f16_f16x2	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u32_u8x8	$s0, $d0, $s0;
	// 
	unpack_u32_u8x8	$s0, _u8x8(255,255,255,255,255,255,255,255), $s0;
	unpack_u32_u8x8	$s0, $d0, 4294967295;
	unpack_u32_u8x8	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u64_u8x8	$d0, $d0, $s0;
	// 
	unpack_u64_u8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $s0;
	unpack_u64_u8x8	$d0, $d0, 4294967295;
	unpack_u64_u8x8	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u32_u16x4	$s0, $d0, $s0;
	// 
	unpack_u32_u16x4	$s0, _u16x4(65535,65535,65535,65535), $s0;
	unpack_u32_u16x4	$s0, $d0, 4294967295;
	unpack_u32_u16x4	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u64_u16x4	$d0, $d0, $s0;
	// 
	unpack_u64_u16x4	$d0, _u16x4(65535,65535,65535,65535), $s0;
	unpack_u64_u16x4	$d0, $d0, 4294967295;
	unpack_u64_u16x4	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u32_u32x2	$s0, $d0, $s0;
	// 
	unpack_u32_u32x2	$s0, _u32x2(4294967295,4294967295), $s0;
	unpack_u32_u32x2	$s0, $d0, 4294967295;
	unpack_u32_u32x2	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u64_u32x2	$d0, $d0, $s0;
	// 
	unpack_u64_u32x2	$d0, _u32x2(4294967295,4294967295), $s0;
	unpack_u64_u32x2	$d0, $d0, 4294967295;
	unpack_u64_u32x2	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s32_s8x8	$s0, $d0, $s0;
	// 
	unpack_s32_s8x8	$s0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $s0;
	unpack_s32_s8x8	$s0, $d0, 4294967295;
	unpack_s32_s8x8	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s64_s8x8	$d0, $d0, $s0;
	// 
	unpack_s64_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $s0;
	unpack_s64_s8x8	$d0, $d0, 4294967295;
	unpack_s64_s8x8	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s32_s16x4	$s0, $d0, $s0;
	// 
	unpack_s32_s16x4	$s0, _s16x4(-1,-1,-1,-1), $s0;
	unpack_s32_s16x4	$s0, $d0, 4294967295;
	unpack_s32_s16x4	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s64_s16x4	$d0, $d0, $s0;
	// 
	unpack_s64_s16x4	$d0, _s16x4(-1,-1,-1,-1), $s0;
	unpack_s64_s16x4	$d0, $d0, 4294967295;
	unpack_s64_s16x4	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s32_s32x2	$s0, $d0, $s0;
	// 
	unpack_s32_s32x2	$s0, _s32x2(-1,-1), $s0;
	unpack_s32_s32x2	$s0, $d0, 4294967295;
	unpack_s32_s32x2	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s64_s32x2	$d0, $d0, $s0;
	// 
	unpack_s64_s32x2	$d0, _s32x2(-1,-1), $s0;
	unpack_s64_s32x2	$d0, $d0, 4294967295;
	unpack_s64_s32x2	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_f16_f16x4	$s0, $d0, $s0;
	// 
	unpack_f16_f16x4	$s0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), $s0;
	unpack_f16_f16x4	$s0, $d0, 4294967295;
	unpack_f16_f16x4	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_f32_f32x2	$s0, $d0, $s0;
	// 
	unpack_f32_f32x2	$s0, _f32x2(0Fffffffff,0Fffffffff), $s0;
	unpack_f32_f32x2	$s0, $d0, 4294967295;
	unpack_f32_f32x2	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u32_u8x16	$s0, $q0, $s0;
	// 
	unpack_u32_u8x16	$s0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $s0;
	unpack_u32_u8x16	$s0, $q0, 4294967295;
	unpack_u32_u8x16	$s0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u64_u8x16	$d0, $q0, $s0;
	// 
	unpack_u64_u8x16	$d0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $s0;
	unpack_u64_u8x16	$d0, $q0, 4294967295;
	unpack_u64_u8x16	$d0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u32_u16x8	$s0, $q0, $s0;
	// 
	unpack_u32_u16x8	$s0, _u16x8(0,0,0,0,27632,14254,12895,7281), $s0;
	unpack_u32_u16x8	$s0, $q0, 4294967295;
	unpack_u32_u16x8	$s0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u64_u16x8	$d0, $q0, $s0;
	// 
	unpack_u64_u16x8	$d0, _u16x8(0,0,0,0,27632,14254,12895,7281), $s0;
	unpack_u64_u16x8	$d0, $q0, 4294967295;
	unpack_u64_u16x8	$d0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u32_u32x4	$s0, $q0, $s0;
	// 
	unpack_u32_u32x4	$s0, _u32x4(0,0,1810905006,845094001), $s0;
	unpack_u32_u32x4	$s0, $q0, 4294967295;
	unpack_u32_u32x4	$s0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u64_u32x4	$d0, $q0, $s0;
	// 
	unpack_u64_u32x4	$d0, _u32x4(0,0,1810905006,845094001), $s0;
	unpack_u64_u32x4	$d0, $q0, 4294967295;
	unpack_u64_u32x4	$d0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_u64_u64x2	$d0, $q0, $s0;
	// 
	unpack_u64_u64x2	$d0, _u64x2(0,7777777777777777777), $s0;
	unpack_u64_u64x2	$d0, $q0, 4294967295;
	unpack_u64_u64x2	$d0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s32_s8x16	$s0, $q0, $s0;
	// 
	unpack_s32_s8x16	$s0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113), $s0;
	unpack_s32_s8x16	$s0, $q0, 4294967295;
	unpack_s32_s8x16	$s0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s64_s8x16	$d0, $q0, $s0;
	// 
	unpack_s64_s8x16	$d0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113), $s0;
	unpack_s64_s8x16	$d0, $q0, 4294967295;
	unpack_s64_s8x16	$d0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s32_s16x8	$s0, $q0, $s0;
	// 
	unpack_s32_s16x8	$s0, _s16x8(0,0,0,0,27632,14254,12895,7281), $s0;
	unpack_s32_s16x8	$s0, $q0, 4294967295;
	unpack_s32_s16x8	$s0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s64_s16x8	$d0, $q0, $s0;
	// 
	unpack_s64_s16x8	$d0, _s16x8(0,0,0,0,27632,14254,12895,7281), $s0;
	unpack_s64_s16x8	$d0, $q0, 4294967295;
	unpack_s64_s16x8	$d0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s32_s32x4	$s0, $q0, $s0;
	// 
	unpack_s32_s32x4	$s0, _s32x4(0,0,1810905006,845094001), $s0;
	unpack_s32_s32x4	$s0, $q0, 4294967295;
	unpack_s32_s32x4	$s0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s64_s32x4	$d0, $q0, $s0;
	// 
	unpack_s64_s32x4	$d0, _s32x4(0,0,1810905006,845094001), $s0;
	unpack_s64_s32x4	$d0, $q0, 4294967295;
	unpack_s64_s32x4	$d0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_s64_s64x2	$d0, $q0, $s0;
	// 
	unpack_s64_s64x2	$d0, _s64x2(0,7777777777777777777), $s0;
	unpack_s64_s64x2	$d0, $q0, 4294967295;
	unpack_s64_s64x2	$d0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_f16_f16x8	$s0, $q0, $s0;
	// 
	unpack_f16_f16x8	$s0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71), $s0;
	unpack_f16_f16x8	$s0, $q0, 4294967295;
	unpack_f16_f16x8	$s0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_f32_f32x4	$s0, $q0, $s0;
	// 
	unpack_f32_f32x4	$s0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71), $s0;
	unpack_f32_f32x4	$s0, $q0, 4294967295;
	unpack_f32_f32x4	$s0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	unpack_f64_f64x2	$d0, $q0, $s0;
	// 
	unpack_f64_f64x2	$d0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71), $s0;
	unpack_f64_f64x2	$d0, $q0, 4294967295;
	unpack_f64_f64x2	$d0, $q0, WAVESIZE;
	// 
	// Next sample
	// 
	cmov_b1	$c0, $c0, $c0, $c0;
	// 
	cmov_b1	$c0, 1, $c0, $c0;
	cmov_b1	$c0, WAVESIZE, $c0, $c0;
	cmov_b1	$c0, $c0, 1, $c0;
	cmov_b1	$c0, $c0, WAVESIZE, $c0;
	cmov_b1	$c0, $c0, $c0, 1;
	cmov_b1	$c0, $c0, $c0, WAVESIZE;
	// 
	// Next sample
	// 
	cmov_b32	$s0, $c0, $s0, $s0;
	// 
	cmov_b32	$s0, 1, $s0, $s0;
	cmov_b32	$s0, WAVESIZE, $s0, $s0;
	cmov_b32	$s0, $c0, 4294967295, $s0;
	cmov_b32	$s0, $c0, WAVESIZE, $s0;
	cmov_b32	$s0, $c0, $s0, 4294967295;
	cmov_b32	$s0, $c0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmov_b64	$d0, $c0, $d0, $d0;
	// 
	cmov_b64	$d0, 1, $d0, $d0;
	cmov_b64	$d0, WAVESIZE, $d0, $d0;
	cmov_b64	$d0, $c0, 18446744073709551615, $d0;
	cmov_b64	$d0, $c0, WAVESIZE, $d0;
	cmov_b64	$d0, $c0, $d0, 18446744073709551615;
	cmov_b64	$d0, $c0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmov_u8x4	$s0, $s0, $s0, $s0;
	// 
	cmov_u8x4	$s0, _u8x4(255,255,255,255), $s0, $s0;
	cmov_u8x4	$s0, $s0, _u8x4(255,255,255,255), $s0;
	cmov_u8x4	$s0, $s0, $s0, _u8x4(255,255,255,255);
	// 
	// Next sample
	// 
	cmov_u16x2	$s0, $s0, $s0, $s0;
	// 
	cmov_u16x2	$s0, _u16x2(65535,65535), $s0, $s0;
	cmov_u16x2	$s0, $s0, _u16x2(65535,65535), $s0;
	cmov_u16x2	$s0, $s0, $s0, _u16x2(65535,65535);
	// 
	// Next sample
	// 
	cmov_s8x4	$s0, $s0, $s0, $s0;
	// 
	cmov_s8x4	$s0, _u8x4(255,255,255,255), $s0, $s0;
	cmov_s8x4	$s0, $s0, _s8x4(-1,-1,-1,-1), $s0;
	cmov_s8x4	$s0, $s0, $s0, _s8x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	cmov_s16x2	$s0, $s0, $s0, $s0;
	// 
	cmov_s16x2	$s0, _u16x2(65535,65535), $s0, $s0;
	cmov_s16x2	$s0, $s0, _s16x2(-1,-1), $s0;
	cmov_s16x2	$s0, $s0, $s0, _s16x2(-1,-1);
	// 
	// Next sample
	// 
	cmov_f16x2	$s0, $s0, $s0, $s0;
	// 
	cmov_f16x2	$s0, _u16x2(65535,65535), $s0, $s0;
	cmov_f16x2	$s0, $s0, _f16x2(0Hffff,0Hffff), $s0;
	cmov_f16x2	$s0, $s0, $s0, _f16x2(0Hffff,0Hffff);
	// 
	// Next sample
	// 
	cmov_u8x8	$d0, $d0, $d0, $d0;
	// 
	cmov_u8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $d0, $d0;
	cmov_u8x8	$d0, $d0, _u8x8(255,255,255,255,255,255,255,255), $d0;
	cmov_u8x8	$d0, $d0, $d0, _u8x8(255,255,255,255,255,255,255,255);
	// 
	// Next sample
	// 
	cmov_u16x4	$d0, $d0, $d0, $d0;
	// 
	cmov_u16x4	$d0, _u16x4(65535,65535,65535,65535), $d0, $d0;
	cmov_u16x4	$d0, $d0, _u16x4(65535,65535,65535,65535), $d0;
	cmov_u16x4	$d0, $d0, $d0, _u16x4(65535,65535,65535,65535);
	// 
	// Next sample
	// 
	cmov_u32x2	$d0, $d0, $d0, $d0;
	// 
	cmov_u32x2	$d0, _u32x2(4294967295,4294967295), $d0, $d0;
	cmov_u32x2	$d0, $d0, _u32x2(4294967295,4294967295), $d0;
	cmov_u32x2	$d0, $d0, $d0, _u32x2(4294967295,4294967295);
	// 
	// Next sample
	// 
	cmov_s8x8	$d0, $d0, $d0, $d0;
	// 
	cmov_s8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $d0, $d0;
	cmov_s8x8	$d0, $d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $d0;
	cmov_s8x8	$d0, $d0, $d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1);
	// 
	// Next sample
	// 
	cmov_s16x4	$d0, $d0, $d0, $d0;
	// 
	cmov_s16x4	$d0, _u16x4(65535,65535,65535,65535), $d0, $d0;
	cmov_s16x4	$d0, $d0, _s16x4(-1,-1,-1,-1), $d0;
	cmov_s16x4	$d0, $d0, $d0, _s16x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	cmov_s32x2	$d0, $d0, $d0, $d0;
	// 
	cmov_s32x2	$d0, _u32x2(4294967295,4294967295), $d0, $d0;
	cmov_s32x2	$d0, $d0, _s32x2(-1,-1), $d0;
	cmov_s32x2	$d0, $d0, $d0, _s32x2(-1,-1);
	// 
	// Next sample
	// 
	cmov_f16x4	$d0, $d0, $d0, $d0;
	// 
	cmov_f16x4	$d0, _u16x4(65535,65535,65535,65535), $d0, $d0;
	cmov_f16x4	$d0, $d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), $d0;
	cmov_f16x4	$d0, $d0, $d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	// 
	// Next sample
	// 
	cmov_f32x2	$d0, $d0, $d0, $d0;
	// 
	cmov_f32x2	$d0, _u32x2(4294967295,4294967295), $d0, $d0;
	cmov_f32x2	$d0, $d0, _f32x2(0Fffffffff,0Fffffffff), $d0;
	cmov_f32x2	$d0, $d0, $d0, _f32x2(0Fffffffff,0Fffffffff);
	// 
	// Next sample
	// 
	cmov_u8x16	$q0, $q0, $q0, $q0;
	// 
	cmov_u8x16	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $q0, $q0;
	cmov_u8x16	$q0, $q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $q0;
	cmov_u8x16	$q0, $q0, $q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113);
	// 
	// Next sample
	// 
	cmov_u16x8	$q0, $q0, $q0, $q0;
	// 
	cmov_u16x8	$q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $q0, $q0;
	cmov_u16x8	$q0, $q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	cmov_u16x8	$q0, $q0, $q0, _u16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	cmov_u32x4	$q0, $q0, $q0, $q0;
	// 
	cmov_u32x4	$q0, _u32x4(0,0,1810905006,845094001), $q0, $q0;
	cmov_u32x4	$q0, $q0, _u32x4(0,0,1810905006,845094001), $q0;
	cmov_u32x4	$q0, $q0, $q0, _u32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	cmov_u64x2	$q0, $q0, $q0, $q0;
	// 
	cmov_u64x2	$q0, _u64x2(0,7777777777777777777), $q0, $q0;
	cmov_u64x2	$q0, $q0, _u64x2(0,7777777777777777777), $q0;
	cmov_u64x2	$q0, $q0, $q0, _u64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	cmov_s8x16	$q0, $q0, $q0, $q0;
	// 
	cmov_s8x16	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $q0, $q0;
	cmov_s8x16	$q0, $q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113), $q0;
	cmov_s8x16	$q0, $q0, $q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113);
	// 
	// Next sample
	// 
	cmov_s16x8	$q0, $q0, $q0, $q0;
	// 
	cmov_s16x8	$q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $q0, $q0;
	cmov_s16x8	$q0, $q0, _s16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	cmov_s16x8	$q0, $q0, $q0, _s16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	cmov_s32x4	$q0, $q0, $q0, $q0;
	// 
	cmov_s32x4	$q0, _u32x4(0,0,1810905006,845094001), $q0, $q0;
	cmov_s32x4	$q0, $q0, _s32x4(0,0,1810905006,845094001), $q0;
	cmov_s32x4	$q0, $q0, $q0, _s32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	cmov_s64x2	$q0, $q0, $q0, $q0;
	// 
	cmov_s64x2	$q0, _u64x2(0,7777777777777777777), $q0, $q0;
	cmov_s64x2	$q0, $q0, _s64x2(0,7777777777777777777), $q0;
	cmov_s64x2	$q0, $q0, $q0, _s64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	cmov_f16x8	$q0, $q0, $q0, $q0;
	// 
	cmov_f16x8	$q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $q0, $q0;
	cmov_f16x8	$q0, $q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71), $q0;
	cmov_f16x8	$q0, $q0, $q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	// 
	// Next sample
	// 
	cmov_f32x4	$q0, $q0, $q0, $q0;
	// 
	cmov_f32x4	$q0, _u32x4(0,0,1810905006,845094001), $q0, $q0;
	cmov_f32x4	$q0, $q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71), $q0;
	cmov_f32x4	$q0, $q0, $q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	// 
	// Next sample
	// 
	cmov_f64x2	$q0, $q0, $q0, $q0;
	// 
	cmov_f64x2	$q0, _u64x2(0,7777777777777777777), $q0, $q0;
	cmov_f64x2	$q0, $q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71), $q0;
	cmov_f64x2	$q0, $q0, $q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	// 
	// Next sample
	// 
	class_b1_f16	$c0, $s0, $s0;
	// 
	class_b1_f16	$c0, 0Hffff, $s0;
	class_b1_f16	$c0, $s0, 4294967295;
	class_b1_f16	$c0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	class_b1_f32	$c0, $s0, $s0;
	// 
	class_b1_f32	$c0, 0Fffffffff, $s0;
	class_b1_f32	$c0, $s0, 4294967295;
	class_b1_f32	$c0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	class_b1_f64	$c0, $d0, $s0;
	// 
	class_b1_f64	$c0, 0Dffffffffffffffff, $s0;
	class_b1_f64	$c0, $d0, 4294967295;
	class_b1_f64	$c0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	nsin_f32	$s0, $s0;
	// 
	nsin_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	ncos_f32	$s0, $s0;
	// 
	ncos_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	nlog2_f32	$s0, $s0;
	// 
	nlog2_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	nexp2_f32	$s0, $s0;
	// 
	nexp2_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	nsqrt_f16	$s0, $s0;
	// 
	nsqrt_f16	$s0, 0Hffff;
	// 
	// Next sample
	// 
	nsqrt_f32	$s0, $s0;
	// 
	nsqrt_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	nsqrt_f64	$d0, $d0;
	// 
	nsqrt_f64	$d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	nrsqrt_f16	$s0, $s0;
	// 
	nrsqrt_f16	$s0, 0Hffff;
	// 
	// Next sample
	// 
	nrsqrt_f32	$s0, $s0;
	// 
	nrsqrt_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	nrsqrt_f64	$d0, $d0;
	// 
	nrsqrt_f64	$d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	nrcp_f16	$s0, $s0;
	// 
	nrcp_f16	$s0, 0Hffff;
	// 
	// Next sample
	// 
	nrcp_f32	$s0, $s0;
	// 
	nrcp_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	nrcp_f64	$d0, $d0;
	// 
	nrcp_f64	$d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	nfma_f16	$s0, $s0, $s0, $s0;
	// 
	nfma_f16	$s0, 0Hffff, $s0, $s0;
	nfma_f16	$s0, $s0, 0Hffff, $s0;
	nfma_f16	$s0, $s0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	nfma_f32	$s0, $s0, $s0, $s0;
	// 
	nfma_f32	$s0, 0Fffffffff, $s0, $s0;
	nfma_f32	$s0, $s0, 0Fffffffff, $s0;
	nfma_f32	$s0, $s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	nfma_f64	$d0, $d0, $d0, $d0;
	// 
	nfma_f64	$d0, 0Dffffffffffffffff, $d0, $d0;
	nfma_f64	$d0, $d0, 0Dffffffffffffffff, $d0;
	nfma_f64	$d0, $d0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	bitalign_b32	$s0, $s0, $s0, $s0;
	// 
	bitalign_b32	$s0, 4294967295, $s0, $s0;
	bitalign_b32	$s0, WAVESIZE, $s0, $s0;
	bitalign_b32	$s0, $s0, 4294967295, $s0;
	bitalign_b32	$s0, $s0, WAVESIZE, $s0;
	bitalign_b32	$s0, $s0, $s0, 4294967295;
	bitalign_b32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	bytealign_b32	$s0, $s0, $s0, $s0;
	// 
	bytealign_b32	$s0, 4294967295, $s0, $s0;
	bytealign_b32	$s0, WAVESIZE, $s0, $s0;
	bytealign_b32	$s0, $s0, 4294967295, $s0;
	bytealign_b32	$s0, $s0, WAVESIZE, $s0;
	bytealign_b32	$s0, $s0, $s0, 4294967295;
	bytealign_b32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	lerp_u8x4	$s0, $s0, $s0, $s0;
	// 
	lerp_u8x4	$s0, _u8x4(255,255,255,255), $s0, $s0;
	lerp_u8x4	$s0, $s0, _u8x4(255,255,255,255), $s0;
	lerp_u8x4	$s0, $s0, $s0, _u8x4(255,255,255,255);
	// 
	// Next sample
	// 
	sad_u32_u32	$s0, $s0, $s0, $s0;
	// 
	sad_u32_u32	$s0, 4294967295, $s0, $s0;
	sad_u32_u32	$s0, WAVESIZE, $s0, $s0;
	sad_u32_u32	$s0, $s0, 4294967295, $s0;
	sad_u32_u32	$s0, $s0, WAVESIZE, $s0;
	sad_u32_u32	$s0, $s0, $s0, 4294967295;
	sad_u32_u32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	sad_u32_u8x4	$s0, $s0, $s0, $s0;
	// 
	sad_u32_u8x4	$s0, _u8x4(255,255,255,255), $s0, $s0;
	sad_u32_u8x4	$s0, $s0, _u8x4(255,255,255,255), $s0;
	sad_u32_u8x4	$s0, $s0, $s0, 4294967295;
	sad_u32_u8x4	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	sad_u32_u16x2	$s0, $s0, $s0, $s0;
	// 
	sad_u32_u16x2	$s0, _u16x2(65535,65535), $s0, $s0;
	sad_u32_u16x2	$s0, $s0, _u16x2(65535,65535), $s0;
	sad_u32_u16x2	$s0, $s0, $s0, 4294967295;
	sad_u32_u16x2	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	sadhi_u16x2_u8x4	$s0, $s0, $s0, $s0;
	// 
	sadhi_u16x2_u8x4	$s0, _u8x4(255,255,255,255), $s0, $s0;
	sadhi_u16x2_u8x4	$s0, $s0, _u8x4(255,255,255,255), $s0;
	sadhi_u16x2_u8x4	$s0, $s0, $s0, _u16x2(65535,65535);
	// 
	// Next sample
	// 
	packcvt_u8x4_f32	$s0, $s0, $s0, $s0, $s0;
	// 
	packcvt_u8x4_f32	$s0, 0Fffffffff, $s0, $s0, $s0;
	packcvt_u8x4_f32	$s0, $s0, 0Fffffffff, $s0, $s0;
	packcvt_u8x4_f32	$s0, $s0, $s0, 0Fffffffff, $s0;
	packcvt_u8x4_f32	$s0, $s0, $s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	unpackcvt_f32_u8x4	$s0, $s0, 0;
	// 
	unpackcvt_f32_u8x4	$s0, _u8x4(255,255,255,255), 0;
	unpackcvt_f32_u8x4	$s0, $s0, 1;
	unpackcvt_f32_u8x4	$s0, $s0, 2;
	unpackcvt_f32_u8x4	$s0, $s0, 3;
	// 
	// Next sample
	// 
	segmentp_global_b1_u32	$c0, $s0;
	// 
	segmentp_global_b1_u32	$c0, 4294967295;
	segmentp_global_b1_u32	$c0, WAVESIZE;
	segmentp_global_nonull_b1_u32	$c0, $s0;
	// 
	// Next sample
	// 
	segmentp_readonly_b1_u32	$c0, $s0;
	// 
	segmentp_readonly_b1_u32	$c0, 4294967295;
	segmentp_readonly_b1_u32	$c0, WAVESIZE;
	segmentp_readonly_nonull_b1_u32	$c0, $s0;
	// 
	// Next sample
	// 
	segmentp_kernarg_b1_u32	$c0, $s0;
	// 
	segmentp_kernarg_b1_u32	$c0, 4294967295;
	segmentp_kernarg_b1_u32	$c0, WAVESIZE;
	segmentp_kernarg_nonull_b1_u32	$c0, $s0;
	// 
	// Next sample
	// 
	segmentp_group_b1_u32	$c0, $s0;
	// 
	segmentp_group_b1_u32	$c0, 4294967295;
	segmentp_group_b1_u32	$c0, WAVESIZE;
	segmentp_group_nonull_b1_u32	$c0, $s0;
	// 
	// Next sample
	// 
	segmentp_private_b1_u32	$c0, $s0;
	// 
	segmentp_private_b1_u32	$c0, 4294967295;
	segmentp_private_b1_u32	$c0, WAVESIZE;
	segmentp_private_nonull_b1_u32	$c0, $s0;
	// 
	// Next sample
	// 
	segmentp_spill_b1_u32	$c0, $s0;
	// 
	segmentp_spill_b1_u32	$c0, 4294967295;
	segmentp_spill_b1_u32	$c0, WAVESIZE;
	segmentp_spill_nonull_b1_u32	$c0, $s0;
	// 
	// Next sample
	// 
	segmentp_arg_b1_u32	$c0, $s0;
	// 
	segmentp_arg_b1_u32	$c0, 4294967295;
	segmentp_arg_b1_u32	$c0, WAVESIZE;
	segmentp_arg_nonull_b1_u32	$c0, $s0;
	// 
	// Next sample
	// 
	ftos_global_u32_u32	$s0, $s0;
	// 
	ftos_global_u32_u32	$s0, 4294967295;
	ftos_global_u32_u32	$s0, WAVESIZE;
	ftos_global_nonull_u32_u32	$s0, $s0;
	// 
	// Next sample
	// 
	ftos_readonly_u32_u32	$s0, $s0;
	// 
	ftos_readonly_u32_u32	$s0, 4294967295;
	ftos_readonly_u32_u32	$s0, WAVESIZE;
	ftos_readonly_nonull_u32_u32	$s0, $s0;
	// 
	// Next sample
	// 
	ftos_kernarg_u32_u32	$s0, $s0;
	// 
	ftos_kernarg_u32_u32	$s0, 4294967295;
	ftos_kernarg_u32_u32	$s0, WAVESIZE;
	ftos_kernarg_nonull_u32_u32	$s0, $s0;
	// 
	// Next sample
	// 
	ftos_group_u32_u32	$s0, $s0;
	// 
	ftos_group_u32_u32	$s0, 4294967295;
	ftos_group_u32_u32	$s0, WAVESIZE;
	ftos_group_nonull_u32_u32	$s0, $s0;
	// 
	// Next sample
	// 
	ftos_private_u32_u32	$s0, $s0;
	// 
	ftos_private_u32_u32	$s0, 4294967295;
	ftos_private_u32_u32	$s0, WAVESIZE;
	ftos_private_nonull_u32_u32	$s0, $s0;
	// 
	// Next sample
	// 
	ftos_spill_u32_u32	$s0, $s0;
	// 
	ftos_spill_u32_u32	$s0, 4294967295;
	ftos_spill_u32_u32	$s0, WAVESIZE;
	ftos_spill_nonull_u32_u32	$s0, $s0;
	// 
	// Next sample
	// 
	ftos_arg_u32_u32	$s0, $s0;
	// 
	ftos_arg_u32_u32	$s0, 4294967295;
	ftos_arg_u32_u32	$s0, WAVESIZE;
	ftos_arg_nonull_u32_u32	$s0, $s0;
	// 
	// Next sample
	// 
	stof_global_u32_u32	$s0, $s0;
	// 
	stof_global_u32_u32	$s0, 4294967295;
	stof_global_u32_u32	$s0, WAVESIZE;
	stof_global_nonull_u32_u32	$s0, $s0;
	// 
	// Next sample
	// 
	stof_readonly_u32_u32	$s0, $s0;
	// 
	stof_readonly_u32_u32	$s0, 4294967295;
	stof_readonly_u32_u32	$s0, WAVESIZE;
	stof_readonly_nonull_u32_u32	$s0, $s0;
	// 
	// Next sample
	// 
	stof_kernarg_u32_u32	$s0, $s0;
	// 
	stof_kernarg_u32_u32	$s0, 4294967295;
	stof_kernarg_u32_u32	$s0, WAVESIZE;
	stof_kernarg_nonull_u32_u32	$s0, $s0;
	// 
	// Next sample
	// 
	stof_group_u32_u32	$s0, $s0;
	// 
	stof_group_u32_u32	$s0, 4294967295;
	stof_group_u32_u32	$s0, WAVESIZE;
	stof_group_nonull_u32_u32	$s0, $s0;
	// 
	// Next sample
	// 
	stof_private_u32_u32	$s0, $s0;
	// 
	stof_private_u32_u32	$s0, 4294967295;
	stof_private_u32_u32	$s0, WAVESIZE;
	stof_private_nonull_u32_u32	$s0, $s0;
	// 
	// Next sample
	// 
	stof_spill_u32_u32	$s0, $s0;
	// 
	stof_spill_u32_u32	$s0, 4294967295;
	stof_spill_u32_u32	$s0, WAVESIZE;
	stof_spill_nonull_u32_u32	$s0, $s0;
	// 
	// Next sample
	// 
	stof_arg_u32_u32	$s0, $s0;
	// 
	stof_arg_u32_u32	$s0, 4294967295;
	stof_arg_u32_u32	$s0, WAVESIZE;
	stof_arg_nonull_u32_u32	$s0, $s0;
	// 
	// Next sample
	// 
	cmp_eq_u32_u32	$s0, $s0, $s0;
	// 
	cmp_ne_u32_u32	$s0, $s0, $s0;
	cmp_lt_u32_u32	$s0, $s0, $s0;
	cmp_le_u32_u32	$s0, $s0, $s0;
	cmp_gt_u32_u32	$s0, $s0, $s0;
	cmp_ge_u32_u32	$s0, $s0, $s0;
	cmp_eq_u32_u32	$s0, 4294967295, $s0;
	cmp_eq_u32_u32	$s0, WAVESIZE, $s0;
	cmp_eq_u32_u32	$s0, $s0, 4294967295;
	cmp_eq_u32_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_u64_u32	$d0, $s0, $s0;
	// 
	cmp_ne_u64_u32	$d0, $s0, $s0;
	cmp_lt_u64_u32	$d0, $s0, $s0;
	cmp_le_u64_u32	$d0, $s0, $s0;
	cmp_gt_u64_u32	$d0, $s0, $s0;
	cmp_ge_u64_u32	$d0, $s0, $s0;
	cmp_eq_u64_u32	$d0, 4294967295, $s0;
	cmp_eq_u64_u32	$d0, WAVESIZE, $s0;
	cmp_eq_u64_u32	$d0, $s0, 4294967295;
	cmp_eq_u64_u32	$d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_s32_u32	$s0, $s0, $s0;
	// 
	cmp_ne_s32_u32	$s0, $s0, $s0;
	cmp_lt_s32_u32	$s0, $s0, $s0;
	cmp_le_s32_u32	$s0, $s0, $s0;
	cmp_gt_s32_u32	$s0, $s0, $s0;
	cmp_ge_s32_u32	$s0, $s0, $s0;
	cmp_eq_s32_u32	$s0, 4294967295, $s0;
	cmp_eq_s32_u32	$s0, WAVESIZE, $s0;
	cmp_eq_s32_u32	$s0, $s0, 4294967295;
	cmp_eq_s32_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_s64_u32	$d0, $s0, $s0;
	// 
	cmp_ne_s64_u32	$d0, $s0, $s0;
	cmp_lt_s64_u32	$d0, $s0, $s0;
	cmp_le_s64_u32	$d0, $s0, $s0;
	cmp_gt_s64_u32	$d0, $s0, $s0;
	cmp_ge_s64_u32	$d0, $s0, $s0;
	cmp_eq_s64_u32	$d0, 4294967295, $s0;
	cmp_eq_s64_u32	$d0, WAVESIZE, $s0;
	cmp_eq_s64_u32	$d0, $s0, 4294967295;
	cmp_eq_s64_u32	$d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f16_u32	$s0, $s0, $s0;
	// 
	cmp_ne_f16_u32	$s0, $s0, $s0;
	cmp_lt_f16_u32	$s0, $s0, $s0;
	cmp_le_f16_u32	$s0, $s0, $s0;
	cmp_gt_f16_u32	$s0, $s0, $s0;
	cmp_ge_f16_u32	$s0, $s0, $s0;
	cmp_eq_f16_u32	$s0, 4294967295, $s0;
	cmp_eq_f16_u32	$s0, WAVESIZE, $s0;
	cmp_eq_f16_u32	$s0, $s0, 4294967295;
	cmp_eq_f16_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f32_u32	$s0, $s0, $s0;
	// 
	cmp_ne_f32_u32	$s0, $s0, $s0;
	cmp_lt_f32_u32	$s0, $s0, $s0;
	cmp_le_f32_u32	$s0, $s0, $s0;
	cmp_gt_f32_u32	$s0, $s0, $s0;
	cmp_ge_f32_u32	$s0, $s0, $s0;
	cmp_eq_f32_u32	$s0, 4294967295, $s0;
	cmp_eq_f32_u32	$s0, WAVESIZE, $s0;
	cmp_eq_f32_u32	$s0, $s0, 4294967295;
	cmp_eq_f32_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f64_u32	$d0, $s0, $s0;
	// 
	cmp_ne_f64_u32	$d0, $s0, $s0;
	cmp_lt_f64_u32	$d0, $s0, $s0;
	cmp_le_f64_u32	$d0, $s0, $s0;
	cmp_gt_f64_u32	$d0, $s0, $s0;
	cmp_ge_f64_u32	$d0, $s0, $s0;
	cmp_eq_f64_u32	$d0, 4294967295, $s0;
	cmp_eq_f64_u32	$d0, WAVESIZE, $s0;
	cmp_eq_f64_u32	$d0, $s0, 4294967295;
	cmp_eq_f64_u32	$d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_b1_u32	$c0, $s0, $s0;
	// 
	cmp_ne_b1_u32	$c0, $s0, $s0;
	cmp_lt_b1_u32	$c0, $s0, $s0;
	cmp_le_b1_u32	$c0, $s0, $s0;
	cmp_gt_b1_u32	$c0, $s0, $s0;
	cmp_ge_b1_u32	$c0, $s0, $s0;
	cmp_eq_b1_u32	$c0, 4294967295, $s0;
	cmp_eq_b1_u32	$c0, WAVESIZE, $s0;
	cmp_eq_b1_u32	$c0, $s0, 4294967295;
	cmp_eq_b1_u32	$c0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_u32_u64	$s0, $d0, $d0;
	// 
	cmp_ne_u32_u64	$s0, $d0, $d0;
	cmp_lt_u32_u64	$s0, $d0, $d0;
	cmp_le_u32_u64	$s0, $d0, $d0;
	cmp_gt_u32_u64	$s0, $d0, $d0;
	cmp_ge_u32_u64	$s0, $d0, $d0;
	cmp_eq_u32_u64	$s0, 18446744073709551615, $d0;
	cmp_eq_u32_u64	$s0, WAVESIZE, $d0;
	cmp_eq_u32_u64	$s0, $d0, 18446744073709551615;
	cmp_eq_u32_u64	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_u64_u64	$d0, $d0, $d0;
	// 
	cmp_ne_u64_u64	$d0, $d0, $d0;
	cmp_lt_u64_u64	$d0, $d0, $d0;
	cmp_le_u64_u64	$d0, $d0, $d0;
	cmp_gt_u64_u64	$d0, $d0, $d0;
	cmp_ge_u64_u64	$d0, $d0, $d0;
	cmp_eq_u64_u64	$d0, 18446744073709551615, $d0;
	cmp_eq_u64_u64	$d0, WAVESIZE, $d0;
	cmp_eq_u64_u64	$d0, $d0, 18446744073709551615;
	cmp_eq_u64_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_s32_u64	$s0, $d0, $d0;
	// 
	cmp_ne_s32_u64	$s0, $d0, $d0;
	cmp_lt_s32_u64	$s0, $d0, $d0;
	cmp_le_s32_u64	$s0, $d0, $d0;
	cmp_gt_s32_u64	$s0, $d0, $d0;
	cmp_ge_s32_u64	$s0, $d0, $d0;
	cmp_eq_s32_u64	$s0, 18446744073709551615, $d0;
	cmp_eq_s32_u64	$s0, WAVESIZE, $d0;
	cmp_eq_s32_u64	$s0, $d0, 18446744073709551615;
	cmp_eq_s32_u64	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_s64_u64	$d0, $d0, $d0;
	// 
	cmp_ne_s64_u64	$d0, $d0, $d0;
	cmp_lt_s64_u64	$d0, $d0, $d0;
	cmp_le_s64_u64	$d0, $d0, $d0;
	cmp_gt_s64_u64	$d0, $d0, $d0;
	cmp_ge_s64_u64	$d0, $d0, $d0;
	cmp_eq_s64_u64	$d0, 18446744073709551615, $d0;
	cmp_eq_s64_u64	$d0, WAVESIZE, $d0;
	cmp_eq_s64_u64	$d0, $d0, 18446744073709551615;
	cmp_eq_s64_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f16_u64	$s0, $d0, $d0;
	// 
	cmp_ne_f16_u64	$s0, $d0, $d0;
	cmp_lt_f16_u64	$s0, $d0, $d0;
	cmp_le_f16_u64	$s0, $d0, $d0;
	cmp_gt_f16_u64	$s0, $d0, $d0;
	cmp_ge_f16_u64	$s0, $d0, $d0;
	cmp_eq_f16_u64	$s0, 18446744073709551615, $d0;
	cmp_eq_f16_u64	$s0, WAVESIZE, $d0;
	cmp_eq_f16_u64	$s0, $d0, 18446744073709551615;
	cmp_eq_f16_u64	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f32_u64	$s0, $d0, $d0;
	// 
	cmp_ne_f32_u64	$s0, $d0, $d0;
	cmp_lt_f32_u64	$s0, $d0, $d0;
	cmp_le_f32_u64	$s0, $d0, $d0;
	cmp_gt_f32_u64	$s0, $d0, $d0;
	cmp_ge_f32_u64	$s0, $d0, $d0;
	cmp_eq_f32_u64	$s0, 18446744073709551615, $d0;
	cmp_eq_f32_u64	$s0, WAVESIZE, $d0;
	cmp_eq_f32_u64	$s0, $d0, 18446744073709551615;
	cmp_eq_f32_u64	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f64_u64	$d0, $d0, $d0;
	// 
	cmp_ne_f64_u64	$d0, $d0, $d0;
	cmp_lt_f64_u64	$d0, $d0, $d0;
	cmp_le_f64_u64	$d0, $d0, $d0;
	cmp_gt_f64_u64	$d0, $d0, $d0;
	cmp_ge_f64_u64	$d0, $d0, $d0;
	cmp_eq_f64_u64	$d0, 18446744073709551615, $d0;
	cmp_eq_f64_u64	$d0, WAVESIZE, $d0;
	cmp_eq_f64_u64	$d0, $d0, 18446744073709551615;
	cmp_eq_f64_u64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_b1_u64	$c0, $d0, $d0;
	// 
	cmp_ne_b1_u64	$c0, $d0, $d0;
	cmp_lt_b1_u64	$c0, $d0, $d0;
	cmp_le_b1_u64	$c0, $d0, $d0;
	cmp_gt_b1_u64	$c0, $d0, $d0;
	cmp_ge_b1_u64	$c0, $d0, $d0;
	cmp_eq_b1_u64	$c0, 18446744073709551615, $d0;
	cmp_eq_b1_u64	$c0, WAVESIZE, $d0;
	cmp_eq_b1_u64	$c0, $d0, 18446744073709551615;
	cmp_eq_b1_u64	$c0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_u32_s32	$s0, $s0, $s0;
	// 
	cmp_ne_u32_s32	$s0, $s0, $s0;
	cmp_lt_u32_s32	$s0, $s0, $s0;
	cmp_le_u32_s32	$s0, $s0, $s0;
	cmp_gt_u32_s32	$s0, $s0, $s0;
	cmp_ge_u32_s32	$s0, $s0, $s0;
	cmp_eq_u32_s32	$s0, -1, $s0;
	cmp_eq_u32_s32	$s0, WAVESIZE, $s0;
	cmp_eq_u32_s32	$s0, $s0, -1;
	cmp_eq_u32_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_u64_s32	$d0, $s0, $s0;
	// 
	cmp_ne_u64_s32	$d0, $s0, $s0;
	cmp_lt_u64_s32	$d0, $s0, $s0;
	cmp_le_u64_s32	$d0, $s0, $s0;
	cmp_gt_u64_s32	$d0, $s0, $s0;
	cmp_ge_u64_s32	$d0, $s0, $s0;
	cmp_eq_u64_s32	$d0, -1, $s0;
	cmp_eq_u64_s32	$d0, WAVESIZE, $s0;
	cmp_eq_u64_s32	$d0, $s0, -1;
	cmp_eq_u64_s32	$d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_s32_s32	$s0, $s0, $s0;
	// 
	cmp_ne_s32_s32	$s0, $s0, $s0;
	cmp_lt_s32_s32	$s0, $s0, $s0;
	cmp_le_s32_s32	$s0, $s0, $s0;
	cmp_gt_s32_s32	$s0, $s0, $s0;
	cmp_ge_s32_s32	$s0, $s0, $s0;
	cmp_eq_s32_s32	$s0, -1, $s0;
	cmp_eq_s32_s32	$s0, WAVESIZE, $s0;
	cmp_eq_s32_s32	$s0, $s0, -1;
	cmp_eq_s32_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_s64_s32	$d0, $s0, $s0;
	// 
	cmp_ne_s64_s32	$d0, $s0, $s0;
	cmp_lt_s64_s32	$d0, $s0, $s0;
	cmp_le_s64_s32	$d0, $s0, $s0;
	cmp_gt_s64_s32	$d0, $s0, $s0;
	cmp_ge_s64_s32	$d0, $s0, $s0;
	cmp_eq_s64_s32	$d0, -1, $s0;
	cmp_eq_s64_s32	$d0, WAVESIZE, $s0;
	cmp_eq_s64_s32	$d0, $s0, -1;
	cmp_eq_s64_s32	$d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f16_s32	$s0, $s0, $s0;
	// 
	cmp_ne_f16_s32	$s0, $s0, $s0;
	cmp_lt_f16_s32	$s0, $s0, $s0;
	cmp_le_f16_s32	$s0, $s0, $s0;
	cmp_gt_f16_s32	$s0, $s0, $s0;
	cmp_ge_f16_s32	$s0, $s0, $s0;
	cmp_eq_f16_s32	$s0, -1, $s0;
	cmp_eq_f16_s32	$s0, WAVESIZE, $s0;
	cmp_eq_f16_s32	$s0, $s0, -1;
	cmp_eq_f16_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f32_s32	$s0, $s0, $s0;
	// 
	cmp_ne_f32_s32	$s0, $s0, $s0;
	cmp_lt_f32_s32	$s0, $s0, $s0;
	cmp_le_f32_s32	$s0, $s0, $s0;
	cmp_gt_f32_s32	$s0, $s0, $s0;
	cmp_ge_f32_s32	$s0, $s0, $s0;
	cmp_eq_f32_s32	$s0, -1, $s0;
	cmp_eq_f32_s32	$s0, WAVESIZE, $s0;
	cmp_eq_f32_s32	$s0, $s0, -1;
	cmp_eq_f32_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f64_s32	$d0, $s0, $s0;
	// 
	cmp_ne_f64_s32	$d0, $s0, $s0;
	cmp_lt_f64_s32	$d0, $s0, $s0;
	cmp_le_f64_s32	$d0, $s0, $s0;
	cmp_gt_f64_s32	$d0, $s0, $s0;
	cmp_ge_f64_s32	$d0, $s0, $s0;
	cmp_eq_f64_s32	$d0, -1, $s0;
	cmp_eq_f64_s32	$d0, WAVESIZE, $s0;
	cmp_eq_f64_s32	$d0, $s0, -1;
	cmp_eq_f64_s32	$d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_b1_s32	$c0, $s0, $s0;
	// 
	cmp_ne_b1_s32	$c0, $s0, $s0;
	cmp_lt_b1_s32	$c0, $s0, $s0;
	cmp_le_b1_s32	$c0, $s0, $s0;
	cmp_gt_b1_s32	$c0, $s0, $s0;
	cmp_ge_b1_s32	$c0, $s0, $s0;
	cmp_eq_b1_s32	$c0, -1, $s0;
	cmp_eq_b1_s32	$c0, WAVESIZE, $s0;
	cmp_eq_b1_s32	$c0, $s0, -1;
	cmp_eq_b1_s32	$c0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_u32_s64	$s0, $d0, $d0;
	// 
	cmp_ne_u32_s64	$s0, $d0, $d0;
	cmp_lt_u32_s64	$s0, $d0, $d0;
	cmp_le_u32_s64	$s0, $d0, $d0;
	cmp_gt_u32_s64	$s0, $d0, $d0;
	cmp_ge_u32_s64	$s0, $d0, $d0;
	cmp_eq_u32_s64	$s0, -1, $d0;
	cmp_eq_u32_s64	$s0, WAVESIZE, $d0;
	cmp_eq_u32_s64	$s0, $d0, -1;
	cmp_eq_u32_s64	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_u64_s64	$d0, $d0, $d0;
	// 
	cmp_ne_u64_s64	$d0, $d0, $d0;
	cmp_lt_u64_s64	$d0, $d0, $d0;
	cmp_le_u64_s64	$d0, $d0, $d0;
	cmp_gt_u64_s64	$d0, $d0, $d0;
	cmp_ge_u64_s64	$d0, $d0, $d0;
	cmp_eq_u64_s64	$d0, -1, $d0;
	cmp_eq_u64_s64	$d0, WAVESIZE, $d0;
	cmp_eq_u64_s64	$d0, $d0, -1;
	cmp_eq_u64_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_s32_s64	$s0, $d0, $d0;
	// 
	cmp_ne_s32_s64	$s0, $d0, $d0;
	cmp_lt_s32_s64	$s0, $d0, $d0;
	cmp_le_s32_s64	$s0, $d0, $d0;
	cmp_gt_s32_s64	$s0, $d0, $d0;
	cmp_ge_s32_s64	$s0, $d0, $d0;
	cmp_eq_s32_s64	$s0, -1, $d0;
	cmp_eq_s32_s64	$s0, WAVESIZE, $d0;
	cmp_eq_s32_s64	$s0, $d0, -1;
	cmp_eq_s32_s64	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_s64_s64	$d0, $d0, $d0;
	// 
	cmp_ne_s64_s64	$d0, $d0, $d0;
	cmp_lt_s64_s64	$d0, $d0, $d0;
	cmp_le_s64_s64	$d0, $d0, $d0;
	cmp_gt_s64_s64	$d0, $d0, $d0;
	cmp_ge_s64_s64	$d0, $d0, $d0;
	cmp_eq_s64_s64	$d0, -1, $d0;
	cmp_eq_s64_s64	$d0, WAVESIZE, $d0;
	cmp_eq_s64_s64	$d0, $d0, -1;
	cmp_eq_s64_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f16_s64	$s0, $d0, $d0;
	// 
	cmp_ne_f16_s64	$s0, $d0, $d0;
	cmp_lt_f16_s64	$s0, $d0, $d0;
	cmp_le_f16_s64	$s0, $d0, $d0;
	cmp_gt_f16_s64	$s0, $d0, $d0;
	cmp_ge_f16_s64	$s0, $d0, $d0;
	cmp_eq_f16_s64	$s0, -1, $d0;
	cmp_eq_f16_s64	$s0, WAVESIZE, $d0;
	cmp_eq_f16_s64	$s0, $d0, -1;
	cmp_eq_f16_s64	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f32_s64	$s0, $d0, $d0;
	// 
	cmp_ne_f32_s64	$s0, $d0, $d0;
	cmp_lt_f32_s64	$s0, $d0, $d0;
	cmp_le_f32_s64	$s0, $d0, $d0;
	cmp_gt_f32_s64	$s0, $d0, $d0;
	cmp_ge_f32_s64	$s0, $d0, $d0;
	cmp_eq_f32_s64	$s0, -1, $d0;
	cmp_eq_f32_s64	$s0, WAVESIZE, $d0;
	cmp_eq_f32_s64	$s0, $d0, -1;
	cmp_eq_f32_s64	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f64_s64	$d0, $d0, $d0;
	// 
	cmp_ne_f64_s64	$d0, $d0, $d0;
	cmp_lt_f64_s64	$d0, $d0, $d0;
	cmp_le_f64_s64	$d0, $d0, $d0;
	cmp_gt_f64_s64	$d0, $d0, $d0;
	cmp_ge_f64_s64	$d0, $d0, $d0;
	cmp_eq_f64_s64	$d0, -1, $d0;
	cmp_eq_f64_s64	$d0, WAVESIZE, $d0;
	cmp_eq_f64_s64	$d0, $d0, -1;
	cmp_eq_f64_s64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_b1_s64	$c0, $d0, $d0;
	// 
	cmp_ne_b1_s64	$c0, $d0, $d0;
	cmp_lt_b1_s64	$c0, $d0, $d0;
	cmp_le_b1_s64	$c0, $d0, $d0;
	cmp_gt_b1_s64	$c0, $d0, $d0;
	cmp_ge_b1_s64	$c0, $d0, $d0;
	cmp_eq_b1_s64	$c0, -1, $d0;
	cmp_eq_b1_s64	$c0, WAVESIZE, $d0;
	cmp_eq_b1_s64	$c0, $d0, -1;
	cmp_eq_b1_s64	$c0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_u32_f16	$s0, $s0, $s0;
	// 
	cmp_ne_u32_f16	$s0, $s0, $s0;
	cmp_lt_u32_f16	$s0, $s0, $s0;
	cmp_le_u32_f16	$s0, $s0, $s0;
	cmp_gt_u32_f16	$s0, $s0, $s0;
	cmp_ge_u32_f16	$s0, $s0, $s0;
	cmp_equ_u32_f16	$s0, $s0, $s0;
	cmp_neu_u32_f16	$s0, $s0, $s0;
	cmp_ltu_u32_f16	$s0, $s0, $s0;
	cmp_leu_u32_f16	$s0, $s0, $s0;
	cmp_gtu_u32_f16	$s0, $s0, $s0;
	cmp_geu_u32_f16	$s0, $s0, $s0;
	cmp_num_u32_f16	$s0, $s0, $s0;
	cmp_nan_u32_f16	$s0, $s0, $s0;
	cmp_seq_u32_f16	$s0, $s0, $s0;
	cmp_sne_u32_f16	$s0, $s0, $s0;
	cmp_slt_u32_f16	$s0, $s0, $s0;
	cmp_sle_u32_f16	$s0, $s0, $s0;
	cmp_sgt_u32_f16	$s0, $s0, $s0;
	cmp_sge_u32_f16	$s0, $s0, $s0;
	cmp_sgeu_u32_f16	$s0, $s0, $s0;
	cmp_sequ_u32_f16	$s0, $s0, $s0;
	cmp_sneu_u32_f16	$s0, $s0, $s0;
	cmp_sltu_u32_f16	$s0, $s0, $s0;
	cmp_sleu_u32_f16	$s0, $s0, $s0;
	cmp_snum_u32_f16	$s0, $s0, $s0;
	cmp_snan_u32_f16	$s0, $s0, $s0;
	cmp_sgtu_u32_f16	$s0, $s0, $s0;
	cmp_eq_ftz_u32_f16	$s0, $s0, $s0;
	cmp_eq_u32_f16	$s0, 0Hffff, $s0;
	cmp_eq_u32_f16	$s0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	cmp_eq_u64_f16	$d0, $s0, $s0;
	// 
	cmp_ne_u64_f16	$d0, $s0, $s0;
	cmp_lt_u64_f16	$d0, $s0, $s0;
	cmp_le_u64_f16	$d0, $s0, $s0;
	cmp_gt_u64_f16	$d0, $s0, $s0;
	cmp_ge_u64_f16	$d0, $s0, $s0;
	cmp_equ_u64_f16	$d0, $s0, $s0;
	cmp_neu_u64_f16	$d0, $s0, $s0;
	cmp_ltu_u64_f16	$d0, $s0, $s0;
	cmp_leu_u64_f16	$d0, $s0, $s0;
	cmp_gtu_u64_f16	$d0, $s0, $s0;
	cmp_geu_u64_f16	$d0, $s0, $s0;
	cmp_num_u64_f16	$d0, $s0, $s0;
	cmp_nan_u64_f16	$d0, $s0, $s0;
	cmp_seq_u64_f16	$d0, $s0, $s0;
	cmp_sne_u64_f16	$d0, $s0, $s0;
	cmp_slt_u64_f16	$d0, $s0, $s0;
	cmp_sle_u64_f16	$d0, $s0, $s0;
	cmp_sgt_u64_f16	$d0, $s0, $s0;
	cmp_sge_u64_f16	$d0, $s0, $s0;
	cmp_sgeu_u64_f16	$d0, $s0, $s0;
	cmp_sequ_u64_f16	$d0, $s0, $s0;
	cmp_sneu_u64_f16	$d0, $s0, $s0;
	cmp_sltu_u64_f16	$d0, $s0, $s0;
	cmp_sleu_u64_f16	$d0, $s0, $s0;
	cmp_snum_u64_f16	$d0, $s0, $s0;
	cmp_snan_u64_f16	$d0, $s0, $s0;
	cmp_sgtu_u64_f16	$d0, $s0, $s0;
	cmp_eq_ftz_u64_f16	$d0, $s0, $s0;
	cmp_eq_u64_f16	$d0, 0Hffff, $s0;
	cmp_eq_u64_f16	$d0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	cmp_eq_s32_f16	$s0, $s0, $s0;
	// 
	cmp_ne_s32_f16	$s0, $s0, $s0;
	cmp_lt_s32_f16	$s0, $s0, $s0;
	cmp_le_s32_f16	$s0, $s0, $s0;
	cmp_gt_s32_f16	$s0, $s0, $s0;
	cmp_ge_s32_f16	$s0, $s0, $s0;
	cmp_equ_s32_f16	$s0, $s0, $s0;
	cmp_neu_s32_f16	$s0, $s0, $s0;
	cmp_ltu_s32_f16	$s0, $s0, $s0;
	cmp_leu_s32_f16	$s0, $s0, $s0;
	cmp_gtu_s32_f16	$s0, $s0, $s0;
	cmp_geu_s32_f16	$s0, $s0, $s0;
	cmp_num_s32_f16	$s0, $s0, $s0;
	cmp_nan_s32_f16	$s0, $s0, $s0;
	cmp_seq_s32_f16	$s0, $s0, $s0;
	cmp_sne_s32_f16	$s0, $s0, $s0;
	cmp_slt_s32_f16	$s0, $s0, $s0;
	cmp_sle_s32_f16	$s0, $s0, $s0;
	cmp_sgt_s32_f16	$s0, $s0, $s0;
	cmp_sge_s32_f16	$s0, $s0, $s0;
	cmp_sgeu_s32_f16	$s0, $s0, $s0;
	cmp_sequ_s32_f16	$s0, $s0, $s0;
	cmp_sneu_s32_f16	$s0, $s0, $s0;
	cmp_sltu_s32_f16	$s0, $s0, $s0;
	cmp_sleu_s32_f16	$s0, $s0, $s0;
	cmp_snum_s32_f16	$s0, $s0, $s0;
	cmp_snan_s32_f16	$s0, $s0, $s0;
	cmp_sgtu_s32_f16	$s0, $s0, $s0;
	cmp_eq_ftz_s32_f16	$s0, $s0, $s0;
	cmp_eq_s32_f16	$s0, 0Hffff, $s0;
	cmp_eq_s32_f16	$s0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	cmp_eq_s64_f16	$d0, $s0, $s0;
	// 
	cmp_ne_s64_f16	$d0, $s0, $s0;
	cmp_lt_s64_f16	$d0, $s0, $s0;
	cmp_le_s64_f16	$d0, $s0, $s0;
	cmp_gt_s64_f16	$d0, $s0, $s0;
	cmp_ge_s64_f16	$d0, $s0, $s0;
	cmp_equ_s64_f16	$d0, $s0, $s0;
	cmp_neu_s64_f16	$d0, $s0, $s0;
	cmp_ltu_s64_f16	$d0, $s0, $s0;
	cmp_leu_s64_f16	$d0, $s0, $s0;
	cmp_gtu_s64_f16	$d0, $s0, $s0;
	cmp_geu_s64_f16	$d0, $s0, $s0;
	cmp_num_s64_f16	$d0, $s0, $s0;
	cmp_nan_s64_f16	$d0, $s0, $s0;
	cmp_seq_s64_f16	$d0, $s0, $s0;
	cmp_sne_s64_f16	$d0, $s0, $s0;
	cmp_slt_s64_f16	$d0, $s0, $s0;
	cmp_sle_s64_f16	$d0, $s0, $s0;
	cmp_sgt_s64_f16	$d0, $s0, $s0;
	cmp_sge_s64_f16	$d0, $s0, $s0;
	cmp_sgeu_s64_f16	$d0, $s0, $s0;
	cmp_sequ_s64_f16	$d0, $s0, $s0;
	cmp_sneu_s64_f16	$d0, $s0, $s0;
	cmp_sltu_s64_f16	$d0, $s0, $s0;
	cmp_sleu_s64_f16	$d0, $s0, $s0;
	cmp_snum_s64_f16	$d0, $s0, $s0;
	cmp_snan_s64_f16	$d0, $s0, $s0;
	cmp_sgtu_s64_f16	$d0, $s0, $s0;
	cmp_eq_ftz_s64_f16	$d0, $s0, $s0;
	cmp_eq_s64_f16	$d0, 0Hffff, $s0;
	cmp_eq_s64_f16	$d0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	cmp_eq_f16_f16	$s0, $s0, $s0;
	// 
	cmp_ne_f16_f16	$s0, $s0, $s0;
	cmp_lt_f16_f16	$s0, $s0, $s0;
	cmp_le_f16_f16	$s0, $s0, $s0;
	cmp_gt_f16_f16	$s0, $s0, $s0;
	cmp_ge_f16_f16	$s0, $s0, $s0;
	cmp_equ_f16_f16	$s0, $s0, $s0;
	cmp_neu_f16_f16	$s0, $s0, $s0;
	cmp_ltu_f16_f16	$s0, $s0, $s0;
	cmp_leu_f16_f16	$s0, $s0, $s0;
	cmp_gtu_f16_f16	$s0, $s0, $s0;
	cmp_geu_f16_f16	$s0, $s0, $s0;
	cmp_num_f16_f16	$s0, $s0, $s0;
	cmp_nan_f16_f16	$s0, $s0, $s0;
	cmp_seq_f16_f16	$s0, $s0, $s0;
	cmp_sne_f16_f16	$s0, $s0, $s0;
	cmp_slt_f16_f16	$s0, $s0, $s0;
	cmp_sle_f16_f16	$s0, $s0, $s0;
	cmp_sgt_f16_f16	$s0, $s0, $s0;
	cmp_sge_f16_f16	$s0, $s0, $s0;
	cmp_sgeu_f16_f16	$s0, $s0, $s0;
	cmp_sequ_f16_f16	$s0, $s0, $s0;
	cmp_sneu_f16_f16	$s0, $s0, $s0;
	cmp_sltu_f16_f16	$s0, $s0, $s0;
	cmp_sleu_f16_f16	$s0, $s0, $s0;
	cmp_snum_f16_f16	$s0, $s0, $s0;
	cmp_snan_f16_f16	$s0, $s0, $s0;
	cmp_sgtu_f16_f16	$s0, $s0, $s0;
	cmp_eq_ftz_f16_f16	$s0, $s0, $s0;
	cmp_eq_f16_f16	$s0, 0Hffff, $s0;
	cmp_eq_f16_f16	$s0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	cmp_eq_f32_f16	$s0, $s0, $s0;
	// 
	cmp_ne_f32_f16	$s0, $s0, $s0;
	cmp_lt_f32_f16	$s0, $s0, $s0;
	cmp_le_f32_f16	$s0, $s0, $s0;
	cmp_gt_f32_f16	$s0, $s0, $s0;
	cmp_ge_f32_f16	$s0, $s0, $s0;
	cmp_equ_f32_f16	$s0, $s0, $s0;
	cmp_neu_f32_f16	$s0, $s0, $s0;
	cmp_ltu_f32_f16	$s0, $s0, $s0;
	cmp_leu_f32_f16	$s0, $s0, $s0;
	cmp_gtu_f32_f16	$s0, $s0, $s0;
	cmp_geu_f32_f16	$s0, $s0, $s0;
	cmp_num_f32_f16	$s0, $s0, $s0;
	cmp_nan_f32_f16	$s0, $s0, $s0;
	cmp_seq_f32_f16	$s0, $s0, $s0;
	cmp_sne_f32_f16	$s0, $s0, $s0;
	cmp_slt_f32_f16	$s0, $s0, $s0;
	cmp_sle_f32_f16	$s0, $s0, $s0;
	cmp_sgt_f32_f16	$s0, $s0, $s0;
	cmp_sge_f32_f16	$s0, $s0, $s0;
	cmp_sgeu_f32_f16	$s0, $s0, $s0;
	cmp_sequ_f32_f16	$s0, $s0, $s0;
	cmp_sneu_f32_f16	$s0, $s0, $s0;
	cmp_sltu_f32_f16	$s0, $s0, $s0;
	cmp_sleu_f32_f16	$s0, $s0, $s0;
	cmp_snum_f32_f16	$s0, $s0, $s0;
	cmp_snan_f32_f16	$s0, $s0, $s0;
	cmp_sgtu_f32_f16	$s0, $s0, $s0;
	cmp_eq_ftz_f32_f16	$s0, $s0, $s0;
	cmp_eq_f32_f16	$s0, 0Hffff, $s0;
	cmp_eq_f32_f16	$s0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	cmp_eq_f64_f16	$d0, $s0, $s0;
	// 
	cmp_ne_f64_f16	$d0, $s0, $s0;
	cmp_lt_f64_f16	$d0, $s0, $s0;
	cmp_le_f64_f16	$d0, $s0, $s0;
	cmp_gt_f64_f16	$d0, $s0, $s0;
	cmp_ge_f64_f16	$d0, $s0, $s0;
	cmp_equ_f64_f16	$d0, $s0, $s0;
	cmp_neu_f64_f16	$d0, $s0, $s0;
	cmp_ltu_f64_f16	$d0, $s0, $s0;
	cmp_leu_f64_f16	$d0, $s0, $s0;
	cmp_gtu_f64_f16	$d0, $s0, $s0;
	cmp_geu_f64_f16	$d0, $s0, $s0;
	cmp_num_f64_f16	$d0, $s0, $s0;
	cmp_nan_f64_f16	$d0, $s0, $s0;
	cmp_seq_f64_f16	$d0, $s0, $s0;
	cmp_sne_f64_f16	$d0, $s0, $s0;
	cmp_slt_f64_f16	$d0, $s0, $s0;
	cmp_sle_f64_f16	$d0, $s0, $s0;
	cmp_sgt_f64_f16	$d0, $s0, $s0;
	cmp_sge_f64_f16	$d0, $s0, $s0;
	cmp_sgeu_f64_f16	$d0, $s0, $s0;
	cmp_sequ_f64_f16	$d0, $s0, $s0;
	cmp_sneu_f64_f16	$d0, $s0, $s0;
	cmp_sltu_f64_f16	$d0, $s0, $s0;
	cmp_sleu_f64_f16	$d0, $s0, $s0;
	cmp_snum_f64_f16	$d0, $s0, $s0;
	cmp_snan_f64_f16	$d0, $s0, $s0;
	cmp_sgtu_f64_f16	$d0, $s0, $s0;
	cmp_eq_ftz_f64_f16	$d0, $s0, $s0;
	cmp_eq_f64_f16	$d0, 0Hffff, $s0;
	cmp_eq_f64_f16	$d0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	cmp_eq_b1_f16	$c0, $s0, $s0;
	// 
	cmp_ne_b1_f16	$c0, $s0, $s0;
	cmp_lt_b1_f16	$c0, $s0, $s0;
	cmp_le_b1_f16	$c0, $s0, $s0;
	cmp_gt_b1_f16	$c0, $s0, $s0;
	cmp_ge_b1_f16	$c0, $s0, $s0;
	cmp_equ_b1_f16	$c0, $s0, $s0;
	cmp_neu_b1_f16	$c0, $s0, $s0;
	cmp_ltu_b1_f16	$c0, $s0, $s0;
	cmp_leu_b1_f16	$c0, $s0, $s0;
	cmp_gtu_b1_f16	$c0, $s0, $s0;
	cmp_geu_b1_f16	$c0, $s0, $s0;
	cmp_num_b1_f16	$c0, $s0, $s0;
	cmp_nan_b1_f16	$c0, $s0, $s0;
	cmp_seq_b1_f16	$c0, $s0, $s0;
	cmp_sne_b1_f16	$c0, $s0, $s0;
	cmp_slt_b1_f16	$c0, $s0, $s0;
	cmp_sle_b1_f16	$c0, $s0, $s0;
	cmp_sgt_b1_f16	$c0, $s0, $s0;
	cmp_sge_b1_f16	$c0, $s0, $s0;
	cmp_sgeu_b1_f16	$c0, $s0, $s0;
	cmp_sequ_b1_f16	$c0, $s0, $s0;
	cmp_sneu_b1_f16	$c0, $s0, $s0;
	cmp_sltu_b1_f16	$c0, $s0, $s0;
	cmp_sleu_b1_f16	$c0, $s0, $s0;
	cmp_snum_b1_f16	$c0, $s0, $s0;
	cmp_snan_b1_f16	$c0, $s0, $s0;
	cmp_sgtu_b1_f16	$c0, $s0, $s0;
	cmp_eq_ftz_b1_f16	$c0, $s0, $s0;
	cmp_eq_b1_f16	$c0, 0Hffff, $s0;
	cmp_eq_b1_f16	$c0, $s0, 0Hffff;
	// 
	// Next sample
	// 
	cmp_eq_u32_f32	$s0, $s0, $s0;
	// 
	cmp_ne_u32_f32	$s0, $s0, $s0;
	cmp_lt_u32_f32	$s0, $s0, $s0;
	cmp_le_u32_f32	$s0, $s0, $s0;
	cmp_gt_u32_f32	$s0, $s0, $s0;
	cmp_ge_u32_f32	$s0, $s0, $s0;
	cmp_equ_u32_f32	$s0, $s0, $s0;
	cmp_neu_u32_f32	$s0, $s0, $s0;
	cmp_ltu_u32_f32	$s0, $s0, $s0;
	cmp_leu_u32_f32	$s0, $s0, $s0;
	cmp_gtu_u32_f32	$s0, $s0, $s0;
	cmp_geu_u32_f32	$s0, $s0, $s0;
	cmp_num_u32_f32	$s0, $s0, $s0;
	cmp_nan_u32_f32	$s0, $s0, $s0;
	cmp_seq_u32_f32	$s0, $s0, $s0;
	cmp_sne_u32_f32	$s0, $s0, $s0;
	cmp_slt_u32_f32	$s0, $s0, $s0;
	cmp_sle_u32_f32	$s0, $s0, $s0;
	cmp_sgt_u32_f32	$s0, $s0, $s0;
	cmp_sge_u32_f32	$s0, $s0, $s0;
	cmp_sgeu_u32_f32	$s0, $s0, $s0;
	cmp_sequ_u32_f32	$s0, $s0, $s0;
	cmp_sneu_u32_f32	$s0, $s0, $s0;
	cmp_sltu_u32_f32	$s0, $s0, $s0;
	cmp_sleu_u32_f32	$s0, $s0, $s0;
	cmp_snum_u32_f32	$s0, $s0, $s0;
	cmp_snan_u32_f32	$s0, $s0, $s0;
	cmp_sgtu_u32_f32	$s0, $s0, $s0;
	cmp_eq_ftz_u32_f32	$s0, $s0, $s0;
	cmp_eq_u32_f32	$s0, 0Fffffffff, $s0;
	cmp_eq_u32_f32	$s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cmp_eq_u64_f32	$d0, $s0, $s0;
	// 
	cmp_ne_u64_f32	$d0, $s0, $s0;
	cmp_lt_u64_f32	$d0, $s0, $s0;
	cmp_le_u64_f32	$d0, $s0, $s0;
	cmp_gt_u64_f32	$d0, $s0, $s0;
	cmp_ge_u64_f32	$d0, $s0, $s0;
	cmp_equ_u64_f32	$d0, $s0, $s0;
	cmp_neu_u64_f32	$d0, $s0, $s0;
	cmp_ltu_u64_f32	$d0, $s0, $s0;
	cmp_leu_u64_f32	$d0, $s0, $s0;
	cmp_gtu_u64_f32	$d0, $s0, $s0;
	cmp_geu_u64_f32	$d0, $s0, $s0;
	cmp_num_u64_f32	$d0, $s0, $s0;
	cmp_nan_u64_f32	$d0, $s0, $s0;
	cmp_seq_u64_f32	$d0, $s0, $s0;
	cmp_sne_u64_f32	$d0, $s0, $s0;
	cmp_slt_u64_f32	$d0, $s0, $s0;
	cmp_sle_u64_f32	$d0, $s0, $s0;
	cmp_sgt_u64_f32	$d0, $s0, $s0;
	cmp_sge_u64_f32	$d0, $s0, $s0;
	cmp_sgeu_u64_f32	$d0, $s0, $s0;
	cmp_sequ_u64_f32	$d0, $s0, $s0;
	cmp_sneu_u64_f32	$d0, $s0, $s0;
	cmp_sltu_u64_f32	$d0, $s0, $s0;
	cmp_sleu_u64_f32	$d0, $s0, $s0;
	cmp_snum_u64_f32	$d0, $s0, $s0;
	cmp_snan_u64_f32	$d0, $s0, $s0;
	cmp_sgtu_u64_f32	$d0, $s0, $s0;
	cmp_eq_ftz_u64_f32	$d0, $s0, $s0;
	cmp_eq_u64_f32	$d0, 0Fffffffff, $s0;
	cmp_eq_u64_f32	$d0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cmp_eq_s32_f32	$s0, $s0, $s0;
	// 
	cmp_ne_s32_f32	$s0, $s0, $s0;
	cmp_lt_s32_f32	$s0, $s0, $s0;
	cmp_le_s32_f32	$s0, $s0, $s0;
	cmp_gt_s32_f32	$s0, $s0, $s0;
	cmp_ge_s32_f32	$s0, $s0, $s0;
	cmp_equ_s32_f32	$s0, $s0, $s0;
	cmp_neu_s32_f32	$s0, $s0, $s0;
	cmp_ltu_s32_f32	$s0, $s0, $s0;
	cmp_leu_s32_f32	$s0, $s0, $s0;
	cmp_gtu_s32_f32	$s0, $s0, $s0;
	cmp_geu_s32_f32	$s0, $s0, $s0;
	cmp_num_s32_f32	$s0, $s0, $s0;
	cmp_nan_s32_f32	$s0, $s0, $s0;
	cmp_seq_s32_f32	$s0, $s0, $s0;
	cmp_sne_s32_f32	$s0, $s0, $s0;
	cmp_slt_s32_f32	$s0, $s0, $s0;
	cmp_sle_s32_f32	$s0, $s0, $s0;
	cmp_sgt_s32_f32	$s0, $s0, $s0;
	cmp_sge_s32_f32	$s0, $s0, $s0;
	cmp_sgeu_s32_f32	$s0, $s0, $s0;
	cmp_sequ_s32_f32	$s0, $s0, $s0;
	cmp_sneu_s32_f32	$s0, $s0, $s0;
	cmp_sltu_s32_f32	$s0, $s0, $s0;
	cmp_sleu_s32_f32	$s0, $s0, $s0;
	cmp_snum_s32_f32	$s0, $s0, $s0;
	cmp_snan_s32_f32	$s0, $s0, $s0;
	cmp_sgtu_s32_f32	$s0, $s0, $s0;
	cmp_eq_ftz_s32_f32	$s0, $s0, $s0;
	cmp_eq_s32_f32	$s0, 0Fffffffff, $s0;
	cmp_eq_s32_f32	$s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cmp_eq_s64_f32	$d0, $s0, $s0;
	// 
	cmp_ne_s64_f32	$d0, $s0, $s0;
	cmp_lt_s64_f32	$d0, $s0, $s0;
	cmp_le_s64_f32	$d0, $s0, $s0;
	cmp_gt_s64_f32	$d0, $s0, $s0;
	cmp_ge_s64_f32	$d0, $s0, $s0;
	cmp_equ_s64_f32	$d0, $s0, $s0;
	cmp_neu_s64_f32	$d0, $s0, $s0;
	cmp_ltu_s64_f32	$d0, $s0, $s0;
	cmp_leu_s64_f32	$d0, $s0, $s0;
	cmp_gtu_s64_f32	$d0, $s0, $s0;
	cmp_geu_s64_f32	$d0, $s0, $s0;
	cmp_num_s64_f32	$d0, $s0, $s0;
	cmp_nan_s64_f32	$d0, $s0, $s0;
	cmp_seq_s64_f32	$d0, $s0, $s0;
	cmp_sne_s64_f32	$d0, $s0, $s0;
	cmp_slt_s64_f32	$d0, $s0, $s0;
	cmp_sle_s64_f32	$d0, $s0, $s0;
	cmp_sgt_s64_f32	$d0, $s0, $s0;
	cmp_sge_s64_f32	$d0, $s0, $s0;
	cmp_sgeu_s64_f32	$d0, $s0, $s0;
	cmp_sequ_s64_f32	$d0, $s0, $s0;
	cmp_sneu_s64_f32	$d0, $s0, $s0;
	cmp_sltu_s64_f32	$d0, $s0, $s0;
	cmp_sleu_s64_f32	$d0, $s0, $s0;
	cmp_snum_s64_f32	$d0, $s0, $s0;
	cmp_snan_s64_f32	$d0, $s0, $s0;
	cmp_sgtu_s64_f32	$d0, $s0, $s0;
	cmp_eq_ftz_s64_f32	$d0, $s0, $s0;
	cmp_eq_s64_f32	$d0, 0Fffffffff, $s0;
	cmp_eq_s64_f32	$d0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cmp_eq_f16_f32	$s0, $s0, $s0;
	// 
	cmp_ne_f16_f32	$s0, $s0, $s0;
	cmp_lt_f16_f32	$s0, $s0, $s0;
	cmp_le_f16_f32	$s0, $s0, $s0;
	cmp_gt_f16_f32	$s0, $s0, $s0;
	cmp_ge_f16_f32	$s0, $s0, $s0;
	cmp_equ_f16_f32	$s0, $s0, $s0;
	cmp_neu_f16_f32	$s0, $s0, $s0;
	cmp_ltu_f16_f32	$s0, $s0, $s0;
	cmp_leu_f16_f32	$s0, $s0, $s0;
	cmp_gtu_f16_f32	$s0, $s0, $s0;
	cmp_geu_f16_f32	$s0, $s0, $s0;
	cmp_num_f16_f32	$s0, $s0, $s0;
	cmp_nan_f16_f32	$s0, $s0, $s0;
	cmp_seq_f16_f32	$s0, $s0, $s0;
	cmp_sne_f16_f32	$s0, $s0, $s0;
	cmp_slt_f16_f32	$s0, $s0, $s0;
	cmp_sle_f16_f32	$s0, $s0, $s0;
	cmp_sgt_f16_f32	$s0, $s0, $s0;
	cmp_sge_f16_f32	$s0, $s0, $s0;
	cmp_sgeu_f16_f32	$s0, $s0, $s0;
	cmp_sequ_f16_f32	$s0, $s0, $s0;
	cmp_sneu_f16_f32	$s0, $s0, $s0;
	cmp_sltu_f16_f32	$s0, $s0, $s0;
	cmp_sleu_f16_f32	$s0, $s0, $s0;
	cmp_snum_f16_f32	$s0, $s0, $s0;
	cmp_snan_f16_f32	$s0, $s0, $s0;
	cmp_sgtu_f16_f32	$s0, $s0, $s0;
	cmp_eq_ftz_f16_f32	$s0, $s0, $s0;
	cmp_eq_f16_f32	$s0, 0Fffffffff, $s0;
	cmp_eq_f16_f32	$s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cmp_eq_f32_f32	$s0, $s0, $s0;
	// 
	cmp_ne_f32_f32	$s0, $s0, $s0;
	cmp_lt_f32_f32	$s0, $s0, $s0;
	cmp_le_f32_f32	$s0, $s0, $s0;
	cmp_gt_f32_f32	$s0, $s0, $s0;
	cmp_ge_f32_f32	$s0, $s0, $s0;
	cmp_equ_f32_f32	$s0, $s0, $s0;
	cmp_neu_f32_f32	$s0, $s0, $s0;
	cmp_ltu_f32_f32	$s0, $s0, $s0;
	cmp_leu_f32_f32	$s0, $s0, $s0;
	cmp_gtu_f32_f32	$s0, $s0, $s0;
	cmp_geu_f32_f32	$s0, $s0, $s0;
	cmp_num_f32_f32	$s0, $s0, $s0;
	cmp_nan_f32_f32	$s0, $s0, $s0;
	cmp_seq_f32_f32	$s0, $s0, $s0;
	cmp_sne_f32_f32	$s0, $s0, $s0;
	cmp_slt_f32_f32	$s0, $s0, $s0;
	cmp_sle_f32_f32	$s0, $s0, $s0;
	cmp_sgt_f32_f32	$s0, $s0, $s0;
	cmp_sge_f32_f32	$s0, $s0, $s0;
	cmp_sgeu_f32_f32	$s0, $s0, $s0;
	cmp_sequ_f32_f32	$s0, $s0, $s0;
	cmp_sneu_f32_f32	$s0, $s0, $s0;
	cmp_sltu_f32_f32	$s0, $s0, $s0;
	cmp_sleu_f32_f32	$s0, $s0, $s0;
	cmp_snum_f32_f32	$s0, $s0, $s0;
	cmp_snan_f32_f32	$s0, $s0, $s0;
	cmp_sgtu_f32_f32	$s0, $s0, $s0;
	cmp_eq_ftz_f32_f32	$s0, $s0, $s0;
	cmp_eq_f32_f32	$s0, 0Fffffffff, $s0;
	cmp_eq_f32_f32	$s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cmp_eq_f64_f32	$d0, $s0, $s0;
	// 
	cmp_ne_f64_f32	$d0, $s0, $s0;
	cmp_lt_f64_f32	$d0, $s0, $s0;
	cmp_le_f64_f32	$d0, $s0, $s0;
	cmp_gt_f64_f32	$d0, $s0, $s0;
	cmp_ge_f64_f32	$d0, $s0, $s0;
	cmp_equ_f64_f32	$d0, $s0, $s0;
	cmp_neu_f64_f32	$d0, $s0, $s0;
	cmp_ltu_f64_f32	$d0, $s0, $s0;
	cmp_leu_f64_f32	$d0, $s0, $s0;
	cmp_gtu_f64_f32	$d0, $s0, $s0;
	cmp_geu_f64_f32	$d0, $s0, $s0;
	cmp_num_f64_f32	$d0, $s0, $s0;
	cmp_nan_f64_f32	$d0, $s0, $s0;
	cmp_seq_f64_f32	$d0, $s0, $s0;
	cmp_sne_f64_f32	$d0, $s0, $s0;
	cmp_slt_f64_f32	$d0, $s0, $s0;
	cmp_sle_f64_f32	$d0, $s0, $s0;
	cmp_sgt_f64_f32	$d0, $s0, $s0;
	cmp_sge_f64_f32	$d0, $s0, $s0;
	cmp_sgeu_f64_f32	$d0, $s0, $s0;
	cmp_sequ_f64_f32	$d0, $s0, $s0;
	cmp_sneu_f64_f32	$d0, $s0, $s0;
	cmp_sltu_f64_f32	$d0, $s0, $s0;
	cmp_sleu_f64_f32	$d0, $s0, $s0;
	cmp_snum_f64_f32	$d0, $s0, $s0;
	cmp_snan_f64_f32	$d0, $s0, $s0;
	cmp_sgtu_f64_f32	$d0, $s0, $s0;
	cmp_eq_ftz_f64_f32	$d0, $s0, $s0;
	cmp_eq_f64_f32	$d0, 0Fffffffff, $s0;
	cmp_eq_f64_f32	$d0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cmp_eq_b1_f32	$c0, $s0, $s0;
	// 
	cmp_ne_b1_f32	$c0, $s0, $s0;
	cmp_lt_b1_f32	$c0, $s0, $s0;
	cmp_le_b1_f32	$c0, $s0, $s0;
	cmp_gt_b1_f32	$c0, $s0, $s0;
	cmp_ge_b1_f32	$c0, $s0, $s0;
	cmp_equ_b1_f32	$c0, $s0, $s0;
	cmp_neu_b1_f32	$c0, $s0, $s0;
	cmp_ltu_b1_f32	$c0, $s0, $s0;
	cmp_leu_b1_f32	$c0, $s0, $s0;
	cmp_gtu_b1_f32	$c0, $s0, $s0;
	cmp_geu_b1_f32	$c0, $s0, $s0;
	cmp_num_b1_f32	$c0, $s0, $s0;
	cmp_nan_b1_f32	$c0, $s0, $s0;
	cmp_seq_b1_f32	$c0, $s0, $s0;
	cmp_sne_b1_f32	$c0, $s0, $s0;
	cmp_slt_b1_f32	$c0, $s0, $s0;
	cmp_sle_b1_f32	$c0, $s0, $s0;
	cmp_sgt_b1_f32	$c0, $s0, $s0;
	cmp_sge_b1_f32	$c0, $s0, $s0;
	cmp_sgeu_b1_f32	$c0, $s0, $s0;
	cmp_sequ_b1_f32	$c0, $s0, $s0;
	cmp_sneu_b1_f32	$c0, $s0, $s0;
	cmp_sltu_b1_f32	$c0, $s0, $s0;
	cmp_sleu_b1_f32	$c0, $s0, $s0;
	cmp_snum_b1_f32	$c0, $s0, $s0;
	cmp_snan_b1_f32	$c0, $s0, $s0;
	cmp_sgtu_b1_f32	$c0, $s0, $s0;
	cmp_eq_ftz_b1_f32	$c0, $s0, $s0;
	cmp_eq_b1_f32	$c0, 0Fffffffff, $s0;
	cmp_eq_b1_f32	$c0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cmp_eq_u32_f64	$s0, $d0, $d0;
	// 
	cmp_ne_u32_f64	$s0, $d0, $d0;
	cmp_lt_u32_f64	$s0, $d0, $d0;
	cmp_le_u32_f64	$s0, $d0, $d0;
	cmp_gt_u32_f64	$s0, $d0, $d0;
	cmp_ge_u32_f64	$s0, $d0, $d0;
	cmp_equ_u32_f64	$s0, $d0, $d0;
	cmp_neu_u32_f64	$s0, $d0, $d0;
	cmp_ltu_u32_f64	$s0, $d0, $d0;
	cmp_leu_u32_f64	$s0, $d0, $d0;
	cmp_gtu_u32_f64	$s0, $d0, $d0;
	cmp_geu_u32_f64	$s0, $d0, $d0;
	cmp_num_u32_f64	$s0, $d0, $d0;
	cmp_nan_u32_f64	$s0, $d0, $d0;
	cmp_seq_u32_f64	$s0, $d0, $d0;
	cmp_sne_u32_f64	$s0, $d0, $d0;
	cmp_slt_u32_f64	$s0, $d0, $d0;
	cmp_sle_u32_f64	$s0, $d0, $d0;
	cmp_sgt_u32_f64	$s0, $d0, $d0;
	cmp_sge_u32_f64	$s0, $d0, $d0;
	cmp_sgeu_u32_f64	$s0, $d0, $d0;
	cmp_sequ_u32_f64	$s0, $d0, $d0;
	cmp_sneu_u32_f64	$s0, $d0, $d0;
	cmp_sltu_u32_f64	$s0, $d0, $d0;
	cmp_sleu_u32_f64	$s0, $d0, $d0;
	cmp_snum_u32_f64	$s0, $d0, $d0;
	cmp_snan_u32_f64	$s0, $d0, $d0;
	cmp_sgtu_u32_f64	$s0, $d0, $d0;
	cmp_eq_ftz_u32_f64	$s0, $d0, $d0;
	cmp_eq_u32_f64	$s0, 0Dffffffffffffffff, $d0;
	cmp_eq_u32_f64	$s0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cmp_eq_u64_f64	$d0, $d0, $d0;
	// 
	cmp_ne_u64_f64	$d0, $d0, $d0;
	cmp_lt_u64_f64	$d0, $d0, $d0;
	cmp_le_u64_f64	$d0, $d0, $d0;
	cmp_gt_u64_f64	$d0, $d0, $d0;
	cmp_ge_u64_f64	$d0, $d0, $d0;
	cmp_equ_u64_f64	$d0, $d0, $d0;
	cmp_neu_u64_f64	$d0, $d0, $d0;
	cmp_ltu_u64_f64	$d0, $d0, $d0;
	cmp_leu_u64_f64	$d0, $d0, $d0;
	cmp_gtu_u64_f64	$d0, $d0, $d0;
	cmp_geu_u64_f64	$d0, $d0, $d0;
	cmp_num_u64_f64	$d0, $d0, $d0;
	cmp_nan_u64_f64	$d0, $d0, $d0;
	cmp_seq_u64_f64	$d0, $d0, $d0;
	cmp_sne_u64_f64	$d0, $d0, $d0;
	cmp_slt_u64_f64	$d0, $d0, $d0;
	cmp_sle_u64_f64	$d0, $d0, $d0;
	cmp_sgt_u64_f64	$d0, $d0, $d0;
	cmp_sge_u64_f64	$d0, $d0, $d0;
	cmp_sgeu_u64_f64	$d0, $d0, $d0;
	cmp_sequ_u64_f64	$d0, $d0, $d0;
	cmp_sneu_u64_f64	$d0, $d0, $d0;
	cmp_sltu_u64_f64	$d0, $d0, $d0;
	cmp_sleu_u64_f64	$d0, $d0, $d0;
	cmp_snum_u64_f64	$d0, $d0, $d0;
	cmp_snan_u64_f64	$d0, $d0, $d0;
	cmp_sgtu_u64_f64	$d0, $d0, $d0;
	cmp_eq_ftz_u64_f64	$d0, $d0, $d0;
	cmp_eq_u64_f64	$d0, 0Dffffffffffffffff, $d0;
	cmp_eq_u64_f64	$d0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cmp_eq_s32_f64	$s0, $d0, $d0;
	// 
	cmp_ne_s32_f64	$s0, $d0, $d0;
	cmp_lt_s32_f64	$s0, $d0, $d0;
	cmp_le_s32_f64	$s0, $d0, $d0;
	cmp_gt_s32_f64	$s0, $d0, $d0;
	cmp_ge_s32_f64	$s0, $d0, $d0;
	cmp_equ_s32_f64	$s0, $d0, $d0;
	cmp_neu_s32_f64	$s0, $d0, $d0;
	cmp_ltu_s32_f64	$s0, $d0, $d0;
	cmp_leu_s32_f64	$s0, $d0, $d0;
	cmp_gtu_s32_f64	$s0, $d0, $d0;
	cmp_geu_s32_f64	$s0, $d0, $d0;
	cmp_num_s32_f64	$s0, $d0, $d0;
	cmp_nan_s32_f64	$s0, $d0, $d0;
	cmp_seq_s32_f64	$s0, $d0, $d0;
	cmp_sne_s32_f64	$s0, $d0, $d0;
	cmp_slt_s32_f64	$s0, $d0, $d0;
	cmp_sle_s32_f64	$s0, $d0, $d0;
	cmp_sgt_s32_f64	$s0, $d0, $d0;
	cmp_sge_s32_f64	$s0, $d0, $d0;
	cmp_sgeu_s32_f64	$s0, $d0, $d0;
	cmp_sequ_s32_f64	$s0, $d0, $d0;
	cmp_sneu_s32_f64	$s0, $d0, $d0;
	cmp_sltu_s32_f64	$s0, $d0, $d0;
	cmp_sleu_s32_f64	$s0, $d0, $d0;
	cmp_snum_s32_f64	$s0, $d0, $d0;
	cmp_snan_s32_f64	$s0, $d0, $d0;
	cmp_sgtu_s32_f64	$s0, $d0, $d0;
	cmp_eq_ftz_s32_f64	$s0, $d0, $d0;
	cmp_eq_s32_f64	$s0, 0Dffffffffffffffff, $d0;
	cmp_eq_s32_f64	$s0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cmp_eq_s64_f64	$d0, $d0, $d0;
	// 
	cmp_ne_s64_f64	$d0, $d0, $d0;
	cmp_lt_s64_f64	$d0, $d0, $d0;
	cmp_le_s64_f64	$d0, $d0, $d0;
	cmp_gt_s64_f64	$d0, $d0, $d0;
	cmp_ge_s64_f64	$d0, $d0, $d0;
	cmp_equ_s64_f64	$d0, $d0, $d0;
	cmp_neu_s64_f64	$d0, $d0, $d0;
	cmp_ltu_s64_f64	$d0, $d0, $d0;
	cmp_leu_s64_f64	$d0, $d0, $d0;
	cmp_gtu_s64_f64	$d0, $d0, $d0;
	cmp_geu_s64_f64	$d0, $d0, $d0;
	cmp_num_s64_f64	$d0, $d0, $d0;
	cmp_nan_s64_f64	$d0, $d0, $d0;
	cmp_seq_s64_f64	$d0, $d0, $d0;
	cmp_sne_s64_f64	$d0, $d0, $d0;
	cmp_slt_s64_f64	$d0, $d0, $d0;
	cmp_sle_s64_f64	$d0, $d0, $d0;
	cmp_sgt_s64_f64	$d0, $d0, $d0;
	cmp_sge_s64_f64	$d0, $d0, $d0;
	cmp_sgeu_s64_f64	$d0, $d0, $d0;
	cmp_sequ_s64_f64	$d0, $d0, $d0;
	cmp_sneu_s64_f64	$d0, $d0, $d0;
	cmp_sltu_s64_f64	$d0, $d0, $d0;
	cmp_sleu_s64_f64	$d0, $d0, $d0;
	cmp_snum_s64_f64	$d0, $d0, $d0;
	cmp_snan_s64_f64	$d0, $d0, $d0;
	cmp_sgtu_s64_f64	$d0, $d0, $d0;
	cmp_eq_ftz_s64_f64	$d0, $d0, $d0;
	cmp_eq_s64_f64	$d0, 0Dffffffffffffffff, $d0;
	cmp_eq_s64_f64	$d0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cmp_eq_f16_f64	$s0, $d0, $d0;
	// 
	cmp_ne_f16_f64	$s0, $d0, $d0;
	cmp_lt_f16_f64	$s0, $d0, $d0;
	cmp_le_f16_f64	$s0, $d0, $d0;
	cmp_gt_f16_f64	$s0, $d0, $d0;
	cmp_ge_f16_f64	$s0, $d0, $d0;
	cmp_equ_f16_f64	$s0, $d0, $d0;
	cmp_neu_f16_f64	$s0, $d0, $d0;
	cmp_ltu_f16_f64	$s0, $d0, $d0;
	cmp_leu_f16_f64	$s0, $d0, $d0;
	cmp_gtu_f16_f64	$s0, $d0, $d0;
	cmp_geu_f16_f64	$s0, $d0, $d0;
	cmp_num_f16_f64	$s0, $d0, $d0;
	cmp_nan_f16_f64	$s0, $d0, $d0;
	cmp_seq_f16_f64	$s0, $d0, $d0;
	cmp_sne_f16_f64	$s0, $d0, $d0;
	cmp_slt_f16_f64	$s0, $d0, $d0;
	cmp_sle_f16_f64	$s0, $d0, $d0;
	cmp_sgt_f16_f64	$s0, $d0, $d0;
	cmp_sge_f16_f64	$s0, $d0, $d0;
	cmp_sgeu_f16_f64	$s0, $d0, $d0;
	cmp_sequ_f16_f64	$s0, $d0, $d0;
	cmp_sneu_f16_f64	$s0, $d0, $d0;
	cmp_sltu_f16_f64	$s0, $d0, $d0;
	cmp_sleu_f16_f64	$s0, $d0, $d0;
	cmp_snum_f16_f64	$s0, $d0, $d0;
	cmp_snan_f16_f64	$s0, $d0, $d0;
	cmp_sgtu_f16_f64	$s0, $d0, $d0;
	cmp_eq_ftz_f16_f64	$s0, $d0, $d0;
	cmp_eq_f16_f64	$s0, 0Dffffffffffffffff, $d0;
	cmp_eq_f16_f64	$s0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cmp_eq_f32_f64	$s0, $d0, $d0;
	// 
	cmp_ne_f32_f64	$s0, $d0, $d0;
	cmp_lt_f32_f64	$s0, $d0, $d0;
	cmp_le_f32_f64	$s0, $d0, $d0;
	cmp_gt_f32_f64	$s0, $d0, $d0;
	cmp_ge_f32_f64	$s0, $d0, $d0;
	cmp_equ_f32_f64	$s0, $d0, $d0;
	cmp_neu_f32_f64	$s0, $d0, $d0;
	cmp_ltu_f32_f64	$s0, $d0, $d0;
	cmp_leu_f32_f64	$s0, $d0, $d0;
	cmp_gtu_f32_f64	$s0, $d0, $d0;
	cmp_geu_f32_f64	$s0, $d0, $d0;
	cmp_num_f32_f64	$s0, $d0, $d0;
	cmp_nan_f32_f64	$s0, $d0, $d0;
	cmp_seq_f32_f64	$s0, $d0, $d0;
	cmp_sne_f32_f64	$s0, $d0, $d0;
	cmp_slt_f32_f64	$s0, $d0, $d0;
	cmp_sle_f32_f64	$s0, $d0, $d0;
	cmp_sgt_f32_f64	$s0, $d0, $d0;
	cmp_sge_f32_f64	$s0, $d0, $d0;
	cmp_sgeu_f32_f64	$s0, $d0, $d0;
	cmp_sequ_f32_f64	$s0, $d0, $d0;
	cmp_sneu_f32_f64	$s0, $d0, $d0;
	cmp_sltu_f32_f64	$s0, $d0, $d0;
	cmp_sleu_f32_f64	$s0, $d0, $d0;
	cmp_snum_f32_f64	$s0, $d0, $d0;
	cmp_snan_f32_f64	$s0, $d0, $d0;
	cmp_sgtu_f32_f64	$s0, $d0, $d0;
	cmp_eq_ftz_f32_f64	$s0, $d0, $d0;
	cmp_eq_f32_f64	$s0, 0Dffffffffffffffff, $d0;
	cmp_eq_f32_f64	$s0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cmp_eq_f64_f64	$d0, $d0, $d0;
	// 
	cmp_ne_f64_f64	$d0, $d0, $d0;
	cmp_lt_f64_f64	$d0, $d0, $d0;
	cmp_le_f64_f64	$d0, $d0, $d0;
	cmp_gt_f64_f64	$d0, $d0, $d0;
	cmp_ge_f64_f64	$d0, $d0, $d0;
	cmp_equ_f64_f64	$d0, $d0, $d0;
	cmp_neu_f64_f64	$d0, $d0, $d0;
	cmp_ltu_f64_f64	$d0, $d0, $d0;
	cmp_leu_f64_f64	$d0, $d0, $d0;
	cmp_gtu_f64_f64	$d0, $d0, $d0;
	cmp_geu_f64_f64	$d0, $d0, $d0;
	cmp_num_f64_f64	$d0, $d0, $d0;
	cmp_nan_f64_f64	$d0, $d0, $d0;
	cmp_seq_f64_f64	$d0, $d0, $d0;
	cmp_sne_f64_f64	$d0, $d0, $d0;
	cmp_slt_f64_f64	$d0, $d0, $d0;
	cmp_sle_f64_f64	$d0, $d0, $d0;
	cmp_sgt_f64_f64	$d0, $d0, $d0;
	cmp_sge_f64_f64	$d0, $d0, $d0;
	cmp_sgeu_f64_f64	$d0, $d0, $d0;
	cmp_sequ_f64_f64	$d0, $d0, $d0;
	cmp_sneu_f64_f64	$d0, $d0, $d0;
	cmp_sltu_f64_f64	$d0, $d0, $d0;
	cmp_sleu_f64_f64	$d0, $d0, $d0;
	cmp_snum_f64_f64	$d0, $d0, $d0;
	cmp_snan_f64_f64	$d0, $d0, $d0;
	cmp_sgtu_f64_f64	$d0, $d0, $d0;
	cmp_eq_ftz_f64_f64	$d0, $d0, $d0;
	cmp_eq_f64_f64	$d0, 0Dffffffffffffffff, $d0;
	cmp_eq_f64_f64	$d0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cmp_eq_b1_f64	$c0, $d0, $d0;
	// 
	cmp_ne_b1_f64	$c0, $d0, $d0;
	cmp_lt_b1_f64	$c0, $d0, $d0;
	cmp_le_b1_f64	$c0, $d0, $d0;
	cmp_gt_b1_f64	$c0, $d0, $d0;
	cmp_ge_b1_f64	$c0, $d0, $d0;
	cmp_equ_b1_f64	$c0, $d0, $d0;
	cmp_neu_b1_f64	$c0, $d0, $d0;
	cmp_ltu_b1_f64	$c0, $d0, $d0;
	cmp_leu_b1_f64	$c0, $d0, $d0;
	cmp_gtu_b1_f64	$c0, $d0, $d0;
	cmp_geu_b1_f64	$c0, $d0, $d0;
	cmp_num_b1_f64	$c0, $d0, $d0;
	cmp_nan_b1_f64	$c0, $d0, $d0;
	cmp_seq_b1_f64	$c0, $d0, $d0;
	cmp_sne_b1_f64	$c0, $d0, $d0;
	cmp_slt_b1_f64	$c0, $d0, $d0;
	cmp_sle_b1_f64	$c0, $d0, $d0;
	cmp_sgt_b1_f64	$c0, $d0, $d0;
	cmp_sge_b1_f64	$c0, $d0, $d0;
	cmp_sgeu_b1_f64	$c0, $d0, $d0;
	cmp_sequ_b1_f64	$c0, $d0, $d0;
	cmp_sneu_b1_f64	$c0, $d0, $d0;
	cmp_sltu_b1_f64	$c0, $d0, $d0;
	cmp_sleu_b1_f64	$c0, $d0, $d0;
	cmp_snum_b1_f64	$c0, $d0, $d0;
	cmp_snan_b1_f64	$c0, $d0, $d0;
	cmp_sgtu_b1_f64	$c0, $d0, $d0;
	cmp_eq_ftz_b1_f64	$c0, $d0, $d0;
	cmp_eq_b1_f64	$c0, 0Dffffffffffffffff, $d0;
	cmp_eq_b1_f64	$c0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cmp_eq_u32_b1	$s0, $c0, $c0;
	// 
	cmp_ne_u32_b1	$s0, $c0, $c0;
	cmp_eq_u32_b1	$s0, 1, $c0;
	cmp_eq_u32_b1	$s0, WAVESIZE, $c0;
	cmp_eq_u32_b1	$s0, $c0, 1;
	cmp_eq_u32_b1	$s0, $c0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_u64_b1	$d0, $c0, $c0;
	// 
	cmp_ne_u64_b1	$d0, $c0, $c0;
	cmp_eq_u64_b1	$d0, 1, $c0;
	cmp_eq_u64_b1	$d0, WAVESIZE, $c0;
	cmp_eq_u64_b1	$d0, $c0, 1;
	cmp_eq_u64_b1	$d0, $c0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_s32_b1	$s0, $c0, $c0;
	// 
	cmp_ne_s32_b1	$s0, $c0, $c0;
	cmp_eq_s32_b1	$s0, 1, $c0;
	cmp_eq_s32_b1	$s0, WAVESIZE, $c0;
	cmp_eq_s32_b1	$s0, $c0, 1;
	cmp_eq_s32_b1	$s0, $c0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_s64_b1	$d0, $c0, $c0;
	// 
	cmp_ne_s64_b1	$d0, $c0, $c0;
	cmp_eq_s64_b1	$d0, 1, $c0;
	cmp_eq_s64_b1	$d0, WAVESIZE, $c0;
	cmp_eq_s64_b1	$d0, $c0, 1;
	cmp_eq_s64_b1	$d0, $c0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f16_b1	$s0, $c0, $c0;
	// 
	cmp_ne_f16_b1	$s0, $c0, $c0;
	cmp_eq_f16_b1	$s0, 1, $c0;
	cmp_eq_f16_b1	$s0, WAVESIZE, $c0;
	cmp_eq_f16_b1	$s0, $c0, 1;
	cmp_eq_f16_b1	$s0, $c0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f32_b1	$s0, $c0, $c0;
	// 
	cmp_ne_f32_b1	$s0, $c0, $c0;
	cmp_eq_f32_b1	$s0, 1, $c0;
	cmp_eq_f32_b1	$s0, WAVESIZE, $c0;
	cmp_eq_f32_b1	$s0, $c0, 1;
	cmp_eq_f32_b1	$s0, $c0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f64_b1	$d0, $c0, $c0;
	// 
	cmp_ne_f64_b1	$d0, $c0, $c0;
	cmp_eq_f64_b1	$d0, 1, $c0;
	cmp_eq_f64_b1	$d0, WAVESIZE, $c0;
	cmp_eq_f64_b1	$d0, $c0, 1;
	cmp_eq_f64_b1	$d0, $c0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_b1_b1	$c0, $c0, $c0;
	// 
	cmp_ne_b1_b1	$c0, $c0, $c0;
	cmp_eq_b1_b1	$c0, 1, $c0;
	cmp_eq_b1_b1	$c0, WAVESIZE, $c0;
	cmp_eq_b1_b1	$c0, $c0, 1;
	cmp_eq_b1_b1	$c0, $c0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_u32_b32	$s0, $s0, $s0;
	// 
	cmp_ne_u32_b32	$s0, $s0, $s0;
	cmp_eq_u32_b32	$s0, 4294967295, $s0;
	cmp_eq_u32_b32	$s0, WAVESIZE, $s0;
	cmp_eq_u32_b32	$s0, $s0, 4294967295;
	cmp_eq_u32_b32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_u64_b32	$d0, $s0, $s0;
	// 
	cmp_ne_u64_b32	$d0, $s0, $s0;
	cmp_eq_u64_b32	$d0, 4294967295, $s0;
	cmp_eq_u64_b32	$d0, WAVESIZE, $s0;
	cmp_eq_u64_b32	$d0, $s0, 4294967295;
	cmp_eq_u64_b32	$d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_s32_b32	$s0, $s0, $s0;
	// 
	cmp_ne_s32_b32	$s0, $s0, $s0;
	cmp_eq_s32_b32	$s0, 4294967295, $s0;
	cmp_eq_s32_b32	$s0, WAVESIZE, $s0;
	cmp_eq_s32_b32	$s0, $s0, 4294967295;
	cmp_eq_s32_b32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_s64_b32	$d0, $s0, $s0;
	// 
	cmp_ne_s64_b32	$d0, $s0, $s0;
	cmp_eq_s64_b32	$d0, 4294967295, $s0;
	cmp_eq_s64_b32	$d0, WAVESIZE, $s0;
	cmp_eq_s64_b32	$d0, $s0, 4294967295;
	cmp_eq_s64_b32	$d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f16_b32	$s0, $s0, $s0;
	// 
	cmp_ne_f16_b32	$s0, $s0, $s0;
	cmp_eq_f16_b32	$s0, 4294967295, $s0;
	cmp_eq_f16_b32	$s0, WAVESIZE, $s0;
	cmp_eq_f16_b32	$s0, $s0, 4294967295;
	cmp_eq_f16_b32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f32_b32	$s0, $s0, $s0;
	// 
	cmp_ne_f32_b32	$s0, $s0, $s0;
	cmp_eq_f32_b32	$s0, 4294967295, $s0;
	cmp_eq_f32_b32	$s0, WAVESIZE, $s0;
	cmp_eq_f32_b32	$s0, $s0, 4294967295;
	cmp_eq_f32_b32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f64_b32	$d0, $s0, $s0;
	// 
	cmp_ne_f64_b32	$d0, $s0, $s0;
	cmp_eq_f64_b32	$d0, 4294967295, $s0;
	cmp_eq_f64_b32	$d0, WAVESIZE, $s0;
	cmp_eq_f64_b32	$d0, $s0, 4294967295;
	cmp_eq_f64_b32	$d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_b1_b32	$c0, $s0, $s0;
	// 
	cmp_ne_b1_b32	$c0, $s0, $s0;
	cmp_eq_b1_b32	$c0, 4294967295, $s0;
	cmp_eq_b1_b32	$c0, WAVESIZE, $s0;
	cmp_eq_b1_b32	$c0, $s0, 4294967295;
	cmp_eq_b1_b32	$c0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_u32_b64	$s0, $d0, $d0;
	// 
	cmp_ne_u32_b64	$s0, $d0, $d0;
	cmp_eq_u32_b64	$s0, 18446744073709551615, $d0;
	cmp_eq_u32_b64	$s0, WAVESIZE, $d0;
	cmp_eq_u32_b64	$s0, $d0, 18446744073709551615;
	cmp_eq_u32_b64	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_u64_b64	$d0, $d0, $d0;
	// 
	cmp_ne_u64_b64	$d0, $d0, $d0;
	cmp_eq_u64_b64	$d0, 18446744073709551615, $d0;
	cmp_eq_u64_b64	$d0, WAVESIZE, $d0;
	cmp_eq_u64_b64	$d0, $d0, 18446744073709551615;
	cmp_eq_u64_b64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_s32_b64	$s0, $d0, $d0;
	// 
	cmp_ne_s32_b64	$s0, $d0, $d0;
	cmp_eq_s32_b64	$s0, 18446744073709551615, $d0;
	cmp_eq_s32_b64	$s0, WAVESIZE, $d0;
	cmp_eq_s32_b64	$s0, $d0, 18446744073709551615;
	cmp_eq_s32_b64	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_s64_b64	$d0, $d0, $d0;
	// 
	cmp_ne_s64_b64	$d0, $d0, $d0;
	cmp_eq_s64_b64	$d0, 18446744073709551615, $d0;
	cmp_eq_s64_b64	$d0, WAVESIZE, $d0;
	cmp_eq_s64_b64	$d0, $d0, 18446744073709551615;
	cmp_eq_s64_b64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f16_b64	$s0, $d0, $d0;
	// 
	cmp_ne_f16_b64	$s0, $d0, $d0;
	cmp_eq_f16_b64	$s0, 18446744073709551615, $d0;
	cmp_eq_f16_b64	$s0, WAVESIZE, $d0;
	cmp_eq_f16_b64	$s0, $d0, 18446744073709551615;
	cmp_eq_f16_b64	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f32_b64	$s0, $d0, $d0;
	// 
	cmp_ne_f32_b64	$s0, $d0, $d0;
	cmp_eq_f32_b64	$s0, 18446744073709551615, $d0;
	cmp_eq_f32_b64	$s0, WAVESIZE, $d0;
	cmp_eq_f32_b64	$s0, $d0, 18446744073709551615;
	cmp_eq_f32_b64	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_f64_b64	$d0, $d0, $d0;
	// 
	cmp_ne_f64_b64	$d0, $d0, $d0;
	cmp_eq_f64_b64	$d0, 18446744073709551615, $d0;
	cmp_eq_f64_b64	$d0, WAVESIZE, $d0;
	cmp_eq_f64_b64	$d0, $d0, 18446744073709551615;
	cmp_eq_f64_b64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_b1_b64	$c0, $d0, $d0;
	// 
	cmp_ne_b1_b64	$c0, $d0, $d0;
	cmp_eq_b1_b64	$c0, 18446744073709551615, $d0;
	cmp_eq_b1_b64	$c0, WAVESIZE, $d0;
	cmp_eq_b1_b64	$c0, $d0, 18446744073709551615;
	cmp_eq_b1_b64	$c0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cmp_eq_pp_u8x4_u8x4	$s0, $s0, $s0;
	// 
	cmp_ne_pp_u8x4_u8x4	$s0, $s0, $s0;
	cmp_lt_pp_u8x4_u8x4	$s0, $s0, $s0;
	cmp_le_pp_u8x4_u8x4	$s0, $s0, $s0;
	cmp_gt_pp_u8x4_u8x4	$s0, $s0, $s0;
	cmp_ge_pp_u8x4_u8x4	$s0, $s0, $s0;
	cmp_eq_pp_u8x4_u8x4	$s0, _u8x4(255,255,255,255), $s0;
	cmp_eq_pp_u8x4_u8x4	$s0, $s0, _u8x4(255,255,255,255);
	// 
	// Next sample
	// 
	cmp_eq_pp_u16x2_u16x2	$s0, $s0, $s0;
	// 
	cmp_ne_pp_u16x2_u16x2	$s0, $s0, $s0;
	cmp_lt_pp_u16x2_u16x2	$s0, $s0, $s0;
	cmp_le_pp_u16x2_u16x2	$s0, $s0, $s0;
	cmp_gt_pp_u16x2_u16x2	$s0, $s0, $s0;
	cmp_ge_pp_u16x2_u16x2	$s0, $s0, $s0;
	cmp_eq_pp_u16x2_u16x2	$s0, _u16x2(65535,65535), $s0;
	cmp_eq_pp_u16x2_u16x2	$s0, $s0, _u16x2(65535,65535);
	// 
	// Next sample
	// 
	cmp_eq_pp_u8x4_s8x4	$s0, $s0, $s0;
	// 
	cmp_ne_pp_u8x4_s8x4	$s0, $s0, $s0;
	cmp_lt_pp_u8x4_s8x4	$s0, $s0, $s0;
	cmp_le_pp_u8x4_s8x4	$s0, $s0, $s0;
	cmp_gt_pp_u8x4_s8x4	$s0, $s0, $s0;
	cmp_ge_pp_u8x4_s8x4	$s0, $s0, $s0;
	cmp_eq_pp_u8x4_s8x4	$s0, _s8x4(-1,-1,-1,-1), $s0;
	cmp_eq_pp_u8x4_s8x4	$s0, $s0, _s8x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	cmp_eq_pp_u16x2_s16x2	$s0, $s0, $s0;
	// 
	cmp_ne_pp_u16x2_s16x2	$s0, $s0, $s0;
	cmp_lt_pp_u16x2_s16x2	$s0, $s0, $s0;
	cmp_le_pp_u16x2_s16x2	$s0, $s0, $s0;
	cmp_gt_pp_u16x2_s16x2	$s0, $s0, $s0;
	cmp_ge_pp_u16x2_s16x2	$s0, $s0, $s0;
	cmp_eq_pp_u16x2_s16x2	$s0, _s16x2(-1,-1), $s0;
	cmp_eq_pp_u16x2_s16x2	$s0, $s0, _s16x2(-1,-1);
	// 
	// Next sample
	// 
	cmp_eq_pp_u16x2_f16x2	$s0, $s0, $s0;
	// 
	cmp_ne_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_lt_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_le_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_gt_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_ge_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_equ_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_neu_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_ltu_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_leu_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_gtu_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_geu_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_num_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_nan_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_seq_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_sne_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_slt_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_sle_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_sgt_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_sge_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_sgeu_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_sequ_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_sneu_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_sltu_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_sleu_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_snum_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_snan_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_sgtu_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_eq_ftz_pp_u16x2_f16x2	$s0, $s0, $s0;
	cmp_eq_pp_u16x2_f16x2	$s0, _f16x2(0Hffff,0Hffff), $s0;
	cmp_eq_pp_u16x2_f16x2	$s0, $s0, _f16x2(0Hffff,0Hffff);
	// 
	// Next sample
	// 
	cmp_eq_pp_u8x8_u8x8	$d0, $d0, $d0;
	// 
	cmp_ne_pp_u8x8_u8x8	$d0, $d0, $d0;
	cmp_lt_pp_u8x8_u8x8	$d0, $d0, $d0;
	cmp_le_pp_u8x8_u8x8	$d0, $d0, $d0;
	cmp_gt_pp_u8x8_u8x8	$d0, $d0, $d0;
	cmp_ge_pp_u8x8_u8x8	$d0, $d0, $d0;
	cmp_eq_pp_u8x8_u8x8	$d0, _u8x8(255,255,255,255,255,255,255,255), $d0;
	cmp_eq_pp_u8x8_u8x8	$d0, $d0, _u8x8(255,255,255,255,255,255,255,255);
	// 
	// Next sample
	// 
	cmp_eq_pp_u16x4_u16x4	$d0, $d0, $d0;
	// 
	cmp_ne_pp_u16x4_u16x4	$d0, $d0, $d0;
	cmp_lt_pp_u16x4_u16x4	$d0, $d0, $d0;
	cmp_le_pp_u16x4_u16x4	$d0, $d0, $d0;
	cmp_gt_pp_u16x4_u16x4	$d0, $d0, $d0;
	cmp_ge_pp_u16x4_u16x4	$d0, $d0, $d0;
	cmp_eq_pp_u16x4_u16x4	$d0, _u16x4(65535,65535,65535,65535), $d0;
	cmp_eq_pp_u16x4_u16x4	$d0, $d0, _u16x4(65535,65535,65535,65535);
	// 
	// Next sample
	// 
	cmp_eq_pp_u32x2_u32x2	$d0, $d0, $d0;
	// 
	cmp_ne_pp_u32x2_u32x2	$d0, $d0, $d0;
	cmp_lt_pp_u32x2_u32x2	$d0, $d0, $d0;
	cmp_le_pp_u32x2_u32x2	$d0, $d0, $d0;
	cmp_gt_pp_u32x2_u32x2	$d0, $d0, $d0;
	cmp_ge_pp_u32x2_u32x2	$d0, $d0, $d0;
	cmp_eq_pp_u32x2_u32x2	$d0, _u32x2(4294967295,4294967295), $d0;
	cmp_eq_pp_u32x2_u32x2	$d0, $d0, _u32x2(4294967295,4294967295);
	// 
	// Next sample
	// 
	cmp_eq_pp_u8x8_s8x8	$d0, $d0, $d0;
	// 
	cmp_ne_pp_u8x8_s8x8	$d0, $d0, $d0;
	cmp_lt_pp_u8x8_s8x8	$d0, $d0, $d0;
	cmp_le_pp_u8x8_s8x8	$d0, $d0, $d0;
	cmp_gt_pp_u8x8_s8x8	$d0, $d0, $d0;
	cmp_ge_pp_u8x8_s8x8	$d0, $d0, $d0;
	cmp_eq_pp_u8x8_s8x8	$d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1), $d0;
	cmp_eq_pp_u8x8_s8x8	$d0, $d0, _s8x8(-1,-1,-1,-1,-1,-1,-1,-1);
	// 
	// Next sample
	// 
	cmp_eq_pp_u16x4_s16x4	$d0, $d0, $d0;
	// 
	cmp_ne_pp_u16x4_s16x4	$d0, $d0, $d0;
	cmp_lt_pp_u16x4_s16x4	$d0, $d0, $d0;
	cmp_le_pp_u16x4_s16x4	$d0, $d0, $d0;
	cmp_gt_pp_u16x4_s16x4	$d0, $d0, $d0;
	cmp_ge_pp_u16x4_s16x4	$d0, $d0, $d0;
	cmp_eq_pp_u16x4_s16x4	$d0, _s16x4(-1,-1,-1,-1), $d0;
	cmp_eq_pp_u16x4_s16x4	$d0, $d0, _s16x4(-1,-1,-1,-1);
	// 
	// Next sample
	// 
	cmp_eq_pp_u32x2_s32x2	$d0, $d0, $d0;
	// 
	cmp_ne_pp_u32x2_s32x2	$d0, $d0, $d0;
	cmp_lt_pp_u32x2_s32x2	$d0, $d0, $d0;
	cmp_le_pp_u32x2_s32x2	$d0, $d0, $d0;
	cmp_gt_pp_u32x2_s32x2	$d0, $d0, $d0;
	cmp_ge_pp_u32x2_s32x2	$d0, $d0, $d0;
	cmp_eq_pp_u32x2_s32x2	$d0, _s32x2(-1,-1), $d0;
	cmp_eq_pp_u32x2_s32x2	$d0, $d0, _s32x2(-1,-1);
	// 
	// Next sample
	// 
	cmp_eq_pp_u16x4_f16x4	$d0, $d0, $d0;
	// 
	cmp_ne_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_lt_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_le_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_gt_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_ge_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_equ_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_neu_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_ltu_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_leu_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_gtu_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_geu_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_num_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_nan_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_seq_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_sne_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_slt_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_sle_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_sgt_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_sge_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_sgeu_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_sequ_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_sneu_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_sltu_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_sleu_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_snum_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_snan_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_sgtu_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_eq_ftz_pp_u16x4_f16x4	$d0, $d0, $d0;
	cmp_eq_pp_u16x4_f16x4	$d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff), $d0;
	cmp_eq_pp_u16x4_f16x4	$d0, $d0, _f16x4(0Hffff,0Hffff,0Hffff,0Hffff);
	// 
	// Next sample
	// 
	cmp_eq_pp_u32x2_f32x2	$d0, $d0, $d0;
	// 
	cmp_ne_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_lt_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_le_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_gt_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_ge_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_equ_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_neu_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_ltu_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_leu_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_gtu_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_geu_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_num_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_nan_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_seq_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_sne_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_slt_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_sle_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_sgt_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_sge_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_sgeu_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_sequ_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_sneu_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_sltu_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_sleu_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_snum_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_snan_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_sgtu_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_eq_ftz_pp_u32x2_f32x2	$d0, $d0, $d0;
	cmp_eq_pp_u32x2_f32x2	$d0, _f32x2(0Fffffffff,0Fffffffff), $d0;
	cmp_eq_pp_u32x2_f32x2	$d0, $d0, _f32x2(0Fffffffff,0Fffffffff);
	// 
	// Next sample
	// 
	cmp_eq_pp_u8x16_u8x16	$q0, $q0, $q0;
	// 
	cmp_ne_pp_u8x16_u8x16	$q0, $q0, $q0;
	cmp_lt_pp_u8x16_u8x16	$q0, $q0, $q0;
	cmp_le_pp_u8x16_u8x16	$q0, $q0, $q0;
	cmp_gt_pp_u8x16_u8x16	$q0, $q0, $q0;
	cmp_ge_pp_u8x16_u8x16	$q0, $q0, $q0;
	cmp_eq_pp_u8x16_u8x16	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $q0;
	cmp_eq_pp_u8x16_u8x16	$q0, $q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113);
	// 
	// Next sample
	// 
	cmp_eq_pp_u16x8_u16x8	$q0, $q0, $q0;
	// 
	cmp_ne_pp_u16x8_u16x8	$q0, $q0, $q0;
	cmp_lt_pp_u16x8_u16x8	$q0, $q0, $q0;
	cmp_le_pp_u16x8_u16x8	$q0, $q0, $q0;
	cmp_gt_pp_u16x8_u16x8	$q0, $q0, $q0;
	cmp_ge_pp_u16x8_u16x8	$q0, $q0, $q0;
	cmp_eq_pp_u16x8_u16x8	$q0, _u16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	cmp_eq_pp_u16x8_u16x8	$q0, $q0, _u16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	cmp_eq_pp_u32x4_u32x4	$q0, $q0, $q0;
	// 
	cmp_ne_pp_u32x4_u32x4	$q0, $q0, $q0;
	cmp_lt_pp_u32x4_u32x4	$q0, $q0, $q0;
	cmp_le_pp_u32x4_u32x4	$q0, $q0, $q0;
	cmp_gt_pp_u32x4_u32x4	$q0, $q0, $q0;
	cmp_ge_pp_u32x4_u32x4	$q0, $q0, $q0;
	cmp_eq_pp_u32x4_u32x4	$q0, _u32x4(0,0,1810905006,845094001), $q0;
	cmp_eq_pp_u32x4_u32x4	$q0, $q0, _u32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	cmp_eq_pp_u64x2_u64x2	$q0, $q0, $q0;
	// 
	cmp_ne_pp_u64x2_u64x2	$q0, $q0, $q0;
	cmp_lt_pp_u64x2_u64x2	$q0, $q0, $q0;
	cmp_le_pp_u64x2_u64x2	$q0, $q0, $q0;
	cmp_gt_pp_u64x2_u64x2	$q0, $q0, $q0;
	cmp_ge_pp_u64x2_u64x2	$q0, $q0, $q0;
	cmp_eq_pp_u64x2_u64x2	$q0, _u64x2(0,7777777777777777777), $q0;
	cmp_eq_pp_u64x2_u64x2	$q0, $q0, _u64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	cmp_eq_pp_u8x16_s8x16	$q0, $q0, $q0;
	// 
	cmp_ne_pp_u8x16_s8x16	$q0, $q0, $q0;
	cmp_lt_pp_u8x16_s8x16	$q0, $q0, $q0;
	cmp_le_pp_u8x16_s8x16	$q0, $q0, $q0;
	cmp_gt_pp_u8x16_s8x16	$q0, $q0, $q0;
	cmp_ge_pp_u8x16_s8x16	$q0, $q0, $q0;
	cmp_eq_pp_u8x16_s8x16	$q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113), $q0;
	cmp_eq_pp_u8x16_s8x16	$q0, $q0, _s8x16(0,0,0,0,0,0,0,0,107,-16,55,-82,50,95,28,113);
	// 
	// Next sample
	// 
	cmp_eq_pp_u16x8_s16x8	$q0, $q0, $q0;
	// 
	cmp_ne_pp_u16x8_s16x8	$q0, $q0, $q0;
	cmp_lt_pp_u16x8_s16x8	$q0, $q0, $q0;
	cmp_le_pp_u16x8_s16x8	$q0, $q0, $q0;
	cmp_gt_pp_u16x8_s16x8	$q0, $q0, $q0;
	cmp_ge_pp_u16x8_s16x8	$q0, $q0, $q0;
	cmp_eq_pp_u16x8_s16x8	$q0, _s16x8(0,0,0,0,27632,14254,12895,7281), $q0;
	cmp_eq_pp_u16x8_s16x8	$q0, $q0, _s16x8(0,0,0,0,27632,14254,12895,7281);
	// 
	// Next sample
	// 
	cmp_eq_pp_u32x4_s32x4	$q0, $q0, $q0;
	// 
	cmp_ne_pp_u32x4_s32x4	$q0, $q0, $q0;
	cmp_lt_pp_u32x4_s32x4	$q0, $q0, $q0;
	cmp_le_pp_u32x4_s32x4	$q0, $q0, $q0;
	cmp_gt_pp_u32x4_s32x4	$q0, $q0, $q0;
	cmp_ge_pp_u32x4_s32x4	$q0, $q0, $q0;
	cmp_eq_pp_u32x4_s32x4	$q0, _s32x4(0,0,1810905006,845094001), $q0;
	cmp_eq_pp_u32x4_s32x4	$q0, $q0, _s32x4(0,0,1810905006,845094001);
	// 
	// Next sample
	// 
	cmp_eq_pp_u64x2_s64x2	$q0, $q0, $q0;
	// 
	cmp_ne_pp_u64x2_s64x2	$q0, $q0, $q0;
	cmp_lt_pp_u64x2_s64x2	$q0, $q0, $q0;
	cmp_le_pp_u64x2_s64x2	$q0, $q0, $q0;
	cmp_gt_pp_u64x2_s64x2	$q0, $q0, $q0;
	cmp_ge_pp_u64x2_s64x2	$q0, $q0, $q0;
	cmp_eq_pp_u64x2_s64x2	$q0, _s64x2(0,7777777777777777777), $q0;
	cmp_eq_pp_u64x2_s64x2	$q0, $q0, _s64x2(0,7777777777777777777);
	// 
	// Next sample
	// 
	cmp_eq_pp_u16x8_f16x8	$q0, $q0, $q0;
	// 
	cmp_ne_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_lt_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_le_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_gt_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_ge_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_equ_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_neu_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_ltu_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_leu_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_gtu_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_geu_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_num_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_nan_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_seq_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_sne_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_slt_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_sle_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_sgt_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_sge_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_sgeu_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_sequ_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_sneu_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_sltu_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_sleu_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_snum_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_snan_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_sgtu_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_eq_ftz_pp_u16x8_f16x8	$q0, $q0, $q0;
	cmp_eq_pp_u16x8_f16x8	$q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71), $q0;
	cmp_eq_pp_u16x8_f16x8	$q0, $q0, _f16x8(0H0000,0H0000,0H0000,0H0000,0H6bf0,0H37ae,0H325f,0H1c71);
	// 
	// Next sample
	// 
	cmp_eq_pp_u32x4_f32x4	$q0, $q0, $q0;
	// 
	cmp_ne_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_lt_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_le_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_gt_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_ge_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_equ_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_neu_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_ltu_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_leu_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_gtu_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_geu_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_num_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_nan_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_seq_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_sne_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_slt_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_sle_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_sgt_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_sge_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_sgeu_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_sequ_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_sneu_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_sltu_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_sleu_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_snum_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_snan_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_sgtu_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_eq_ftz_pp_u32x4_f32x4	$q0, $q0, $q0;
	cmp_eq_pp_u32x4_f32x4	$q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71), $q0;
	cmp_eq_pp_u32x4_f32x4	$q0, $q0, _f32x4(0F00000000,0F00000000,0F6bf037ae,0F325f1c71);
	// 
	// Next sample
	// 
	cmp_eq_pp_u64x2_f64x2	$q0, $q0, $q0;
	// 
	cmp_ne_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_lt_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_le_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_gt_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_ge_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_equ_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_neu_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_ltu_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_leu_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_gtu_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_geu_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_num_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_nan_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_seq_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_sne_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_slt_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_sle_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_sgt_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_sge_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_sgeu_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_sequ_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_sneu_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_sltu_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_sleu_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_snum_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_snan_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_sgtu_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_eq_ftz_pp_u64x2_f64x2	$q0, $q0, $q0;
	cmp_eq_pp_u64x2_f64x2	$q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71), $q0;
	cmp_eq_pp_u64x2_f64x2	$q0, $q0, _f64x2(0D0000000000000000,0D6bf037ae325f1c71);
	// 
	// Next sample
	// 
	cvt_u16_u8	$s0, $s0;
	// 
	cvt_u16_u8	$s0, 1;
	cvt_u16_u8	$s0, 255;
	cvt_u16_u8	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u32_u8	$s0, $s0;
	// 
	cvt_u32_u8	$s0, 1;
	cvt_u32_u8	$s0, 255;
	cvt_u32_u8	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u64_u8	$d0, $s0;
	// 
	cvt_u64_u8	$d0, 1;
	cvt_u64_u8	$d0, 255;
	cvt_u64_u8	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s16_u8	$s0, $s0;
	// 
	cvt_s16_u8	$s0, 1;
	cvt_s16_u8	$s0, 255;
	cvt_s16_u8	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s32_u8	$s0, $s0;
	// 
	cvt_s32_u8	$s0, 1;
	cvt_s32_u8	$s0, 255;
	cvt_s32_u8	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s64_u8	$d0, $s0;
	// 
	cvt_s64_u8	$d0, 1;
	cvt_s64_u8	$d0, 255;
	cvt_s64_u8	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f16_u8	$s0, $s0;
	// 
	cvt_zero_f16_u8	$s0, $s0;
	cvt_up_f16_u8	$s0, $s0;
	cvt_down_f16_u8	$s0, $s0;
	cvt_f16_u8	$s0, 1;
	cvt_f16_u8	$s0, 255;
	cvt_f16_u8	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f32_u8	$s0, $s0;
	// 
	cvt_zero_f32_u8	$s0, $s0;
	cvt_up_f32_u8	$s0, $s0;
	cvt_down_f32_u8	$s0, $s0;
	cvt_f32_u8	$s0, 1;
	cvt_f32_u8	$s0, 255;
	cvt_f32_u8	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f64_u8	$d0, $s0;
	// 
	cvt_zero_f64_u8	$d0, $s0;
	cvt_up_f64_u8	$d0, $s0;
	cvt_down_f64_u8	$d0, $s0;
	cvt_f64_u8	$d0, 1;
	cvt_f64_u8	$d0, 255;
	cvt_f64_u8	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_b1_u8	$c0, $s0;
	// 
	cvt_b1_u8	$c0, 1;
	cvt_b1_u8	$c0, 255;
	cvt_b1_u8	$c0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u8_u16	$s0, $s0;
	// 
	cvt_u8_u16	$s0, 65535;
	cvt_u8_u16	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u32_u16	$s0, $s0;
	// 
	cvt_u32_u16	$s0, 65535;
	cvt_u32_u16	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u64_u16	$d0, $s0;
	// 
	cvt_u64_u16	$d0, 65535;
	cvt_u64_u16	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s8_u16	$s0, $s0;
	// 
	cvt_s8_u16	$s0, 65535;
	cvt_s8_u16	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s32_u16	$s0, $s0;
	// 
	cvt_s32_u16	$s0, 65535;
	cvt_s32_u16	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s64_u16	$d0, $s0;
	// 
	cvt_s64_u16	$d0, 65535;
	cvt_s64_u16	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f16_u16	$s0, $s0;
	// 
	cvt_zero_f16_u16	$s0, $s0;
	cvt_up_f16_u16	$s0, $s0;
	cvt_down_f16_u16	$s0, $s0;
	cvt_f16_u16	$s0, 65535;
	cvt_f16_u16	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f32_u16	$s0, $s0;
	// 
	cvt_zero_f32_u16	$s0, $s0;
	cvt_up_f32_u16	$s0, $s0;
	cvt_down_f32_u16	$s0, $s0;
	cvt_f32_u16	$s0, 65535;
	cvt_f32_u16	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f64_u16	$d0, $s0;
	// 
	cvt_zero_f64_u16	$d0, $s0;
	cvt_up_f64_u16	$d0, $s0;
	cvt_down_f64_u16	$d0, $s0;
	cvt_f64_u16	$d0, 65535;
	cvt_f64_u16	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_b1_u16	$c0, $s0;
	// 
	cvt_b1_u16	$c0, 65535;
	cvt_b1_u16	$c0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u8_u32	$s0, $s0;
	// 
	cvt_u8_u32	$s0, 4294967295;
	cvt_u8_u32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u16_u32	$s0, $s0;
	// 
	cvt_u16_u32	$s0, 4294967295;
	cvt_u16_u32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u64_u32	$d0, $s0;
	// 
	cvt_u64_u32	$d0, 4294967295;
	cvt_u64_u32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s8_u32	$s0, $s0;
	// 
	cvt_s8_u32	$s0, 4294967295;
	cvt_s8_u32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s16_u32	$s0, $s0;
	// 
	cvt_s16_u32	$s0, 4294967295;
	cvt_s16_u32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s64_u32	$d0, $s0;
	// 
	cvt_s64_u32	$d0, 4294967295;
	cvt_s64_u32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f16_u32	$s0, $s0;
	// 
	cvt_zero_f16_u32	$s0, $s0;
	cvt_up_f16_u32	$s0, $s0;
	cvt_down_f16_u32	$s0, $s0;
	cvt_f16_u32	$s0, 4294967295;
	cvt_f16_u32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f32_u32	$s0, $s0;
	// 
	cvt_zero_f32_u32	$s0, $s0;
	cvt_up_f32_u32	$s0, $s0;
	cvt_down_f32_u32	$s0, $s0;
	cvt_f32_u32	$s0, 4294967295;
	cvt_f32_u32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f64_u32	$d0, $s0;
	// 
	cvt_zero_f64_u32	$d0, $s0;
	cvt_up_f64_u32	$d0, $s0;
	cvt_down_f64_u32	$d0, $s0;
	cvt_f64_u32	$d0, 4294967295;
	cvt_f64_u32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_b1_u32	$c0, $s0;
	// 
	cvt_b1_u32	$c0, 4294967295;
	cvt_b1_u32	$c0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u8_u64	$s0, $d0;
	// 
	cvt_u8_u64	$s0, 18446744073709551615;
	cvt_u8_u64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u16_u64	$s0, $d0;
	// 
	cvt_u16_u64	$s0, 18446744073709551615;
	cvt_u16_u64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u32_u64	$s0, $d0;
	// 
	cvt_u32_u64	$s0, 18446744073709551615;
	cvt_u32_u64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s8_u64	$s0, $d0;
	// 
	cvt_s8_u64	$s0, 18446744073709551615;
	cvt_s8_u64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s16_u64	$s0, $d0;
	// 
	cvt_s16_u64	$s0, 18446744073709551615;
	cvt_s16_u64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s32_u64	$s0, $d0;
	// 
	cvt_s32_u64	$s0, 18446744073709551615;
	cvt_s32_u64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f16_u64	$s0, $d0;
	// 
	cvt_zero_f16_u64	$s0, $d0;
	cvt_up_f16_u64	$s0, $d0;
	cvt_down_f16_u64	$s0, $d0;
	cvt_f16_u64	$s0, 18446744073709551615;
	cvt_f16_u64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f32_u64	$s0, $d0;
	// 
	cvt_zero_f32_u64	$s0, $d0;
	cvt_up_f32_u64	$s0, $d0;
	cvt_down_f32_u64	$s0, $d0;
	cvt_f32_u64	$s0, 18446744073709551615;
	cvt_f32_u64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f64_u64	$d0, $d0;
	// 
	cvt_zero_f64_u64	$d0, $d0;
	cvt_up_f64_u64	$d0, $d0;
	cvt_down_f64_u64	$d0, $d0;
	cvt_f64_u64	$d0, 18446744073709551615;
	cvt_f64_u64	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_b1_u64	$c0, $d0;
	// 
	cvt_b1_u64	$c0, 18446744073709551615;
	cvt_b1_u64	$c0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u16_s8	$s0, $s0;
	// 
	cvt_u16_s8	$s0, 1;
	cvt_u16_s8	$s0, -1;
	cvt_u16_s8	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u32_s8	$s0, $s0;
	// 
	cvt_u32_s8	$s0, 1;
	cvt_u32_s8	$s0, -1;
	cvt_u32_s8	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u64_s8	$d0, $s0;
	// 
	cvt_u64_s8	$d0, 1;
	cvt_u64_s8	$d0, -1;
	cvt_u64_s8	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s16_s8	$s0, $s0;
	// 
	cvt_s16_s8	$s0, 1;
	cvt_s16_s8	$s0, -1;
	cvt_s16_s8	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s32_s8	$s0, $s0;
	// 
	cvt_s32_s8	$s0, 1;
	cvt_s32_s8	$s0, -1;
	cvt_s32_s8	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s64_s8	$d0, $s0;
	// 
	cvt_s64_s8	$d0, 1;
	cvt_s64_s8	$d0, -1;
	cvt_s64_s8	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f16_s8	$s0, $s0;
	// 
	cvt_zero_f16_s8	$s0, $s0;
	cvt_up_f16_s8	$s0, $s0;
	cvt_down_f16_s8	$s0, $s0;
	cvt_f16_s8	$s0, 1;
	cvt_f16_s8	$s0, -1;
	cvt_f16_s8	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f32_s8	$s0, $s0;
	// 
	cvt_zero_f32_s8	$s0, $s0;
	cvt_up_f32_s8	$s0, $s0;
	cvt_down_f32_s8	$s0, $s0;
	cvt_f32_s8	$s0, 1;
	cvt_f32_s8	$s0, -1;
	cvt_f32_s8	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f64_s8	$d0, $s0;
	// 
	cvt_zero_f64_s8	$d0, $s0;
	cvt_up_f64_s8	$d0, $s0;
	cvt_down_f64_s8	$d0, $s0;
	cvt_f64_s8	$d0, 1;
	cvt_f64_s8	$d0, -1;
	cvt_f64_s8	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_b1_s8	$c0, $s0;
	// 
	cvt_b1_s8	$c0, 1;
	cvt_b1_s8	$c0, -1;
	cvt_b1_s8	$c0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u8_s16	$s0, $s0;
	// 
	cvt_u8_s16	$s0, -1;
	cvt_u8_s16	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u32_s16	$s0, $s0;
	// 
	cvt_u32_s16	$s0, -1;
	cvt_u32_s16	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u64_s16	$d0, $s0;
	// 
	cvt_u64_s16	$d0, -1;
	cvt_u64_s16	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s8_s16	$s0, $s0;
	// 
	cvt_s8_s16	$s0, -1;
	cvt_s8_s16	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s32_s16	$s0, $s0;
	// 
	cvt_s32_s16	$s0, -1;
	cvt_s32_s16	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s64_s16	$d0, $s0;
	// 
	cvt_s64_s16	$d0, -1;
	cvt_s64_s16	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f16_s16	$s0, $s0;
	// 
	cvt_zero_f16_s16	$s0, $s0;
	cvt_up_f16_s16	$s0, $s0;
	cvt_down_f16_s16	$s0, $s0;
	cvt_f16_s16	$s0, -1;
	cvt_f16_s16	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f32_s16	$s0, $s0;
	// 
	cvt_zero_f32_s16	$s0, $s0;
	cvt_up_f32_s16	$s0, $s0;
	cvt_down_f32_s16	$s0, $s0;
	cvt_f32_s16	$s0, -1;
	cvt_f32_s16	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f64_s16	$d0, $s0;
	// 
	cvt_zero_f64_s16	$d0, $s0;
	cvt_up_f64_s16	$d0, $s0;
	cvt_down_f64_s16	$d0, $s0;
	cvt_f64_s16	$d0, -1;
	cvt_f64_s16	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_b1_s16	$c0, $s0;
	// 
	cvt_b1_s16	$c0, -1;
	cvt_b1_s16	$c0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u8_s32	$s0, $s0;
	// 
	cvt_u8_s32	$s0, -1;
	cvt_u8_s32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u16_s32	$s0, $s0;
	// 
	cvt_u16_s32	$s0, -1;
	cvt_u16_s32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u64_s32	$d0, $s0;
	// 
	cvt_u64_s32	$d0, -1;
	cvt_u64_s32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s8_s32	$s0, $s0;
	// 
	cvt_s8_s32	$s0, -1;
	cvt_s8_s32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s16_s32	$s0, $s0;
	// 
	cvt_s16_s32	$s0, -1;
	cvt_s16_s32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s64_s32	$d0, $s0;
	// 
	cvt_s64_s32	$d0, -1;
	cvt_s64_s32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f16_s32	$s0, $s0;
	// 
	cvt_zero_f16_s32	$s0, $s0;
	cvt_up_f16_s32	$s0, $s0;
	cvt_down_f16_s32	$s0, $s0;
	cvt_f16_s32	$s0, -1;
	cvt_f16_s32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f32_s32	$s0, $s0;
	// 
	cvt_zero_f32_s32	$s0, $s0;
	cvt_up_f32_s32	$s0, $s0;
	cvt_down_f32_s32	$s0, $s0;
	cvt_f32_s32	$s0, -1;
	cvt_f32_s32	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f64_s32	$d0, $s0;
	// 
	cvt_zero_f64_s32	$d0, $s0;
	cvt_up_f64_s32	$d0, $s0;
	cvt_down_f64_s32	$d0, $s0;
	cvt_f64_s32	$d0, -1;
	cvt_f64_s32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_b1_s32	$c0, $s0;
	// 
	cvt_b1_s32	$c0, -1;
	cvt_b1_s32	$c0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u8_s64	$s0, $d0;
	// 
	cvt_u8_s64	$s0, -1;
	cvt_u8_s64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u16_s64	$s0, $d0;
	// 
	cvt_u16_s64	$s0, -1;
	cvt_u16_s64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u32_s64	$s0, $d0;
	// 
	cvt_u32_s64	$s0, -1;
	cvt_u32_s64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s8_s64	$s0, $d0;
	// 
	cvt_s8_s64	$s0, -1;
	cvt_s8_s64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s16_s64	$s0, $d0;
	// 
	cvt_s16_s64	$s0, -1;
	cvt_s16_s64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s32_s64	$s0, $d0;
	// 
	cvt_s32_s64	$s0, -1;
	cvt_s32_s64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f16_s64	$s0, $d0;
	// 
	cvt_zero_f16_s64	$s0, $d0;
	cvt_up_f16_s64	$s0, $d0;
	cvt_down_f16_s64	$s0, $d0;
	cvt_f16_s64	$s0, -1;
	cvt_f16_s64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f32_s64	$s0, $d0;
	// 
	cvt_zero_f32_s64	$s0, $d0;
	cvt_up_f32_s64	$s0, $d0;
	cvt_down_f32_s64	$s0, $d0;
	cvt_f32_s64	$s0, -1;
	cvt_f32_s64	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f64_s64	$d0, $d0;
	// 
	cvt_zero_f64_s64	$d0, $d0;
	cvt_up_f64_s64	$d0, $d0;
	cvt_down_f64_s64	$d0, $d0;
	cvt_f64_s64	$d0, -1;
	cvt_f64_s64	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_b1_s64	$c0, $d0;
	// 
	cvt_b1_s64	$c0, -1;
	cvt_b1_s64	$c0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_neari_u8_f16	$s0, $s0;
	// 
	cvt_ftz_neari_u8_f16	$s0, $s0;
	cvt_u8_f16	$s0, $s0;
	cvt_upi_u8_f16	$s0, $s0;
	cvt_downi_u8_f16	$s0, $s0;
	cvt_neari_sat_u8_f16	$s0, $s0;
	cvt_zeroi_sat_u8_f16	$s0, $s0;
	cvt_upi_sat_u8_f16	$s0, $s0;
	cvt_downi_sat_u8_f16	$s0, $s0;
	cvt_neari_u8_f16	$s0, 0Hffff;
	// 
	// Next sample
	// 
	cvt_neari_u16_f16	$s0, $s0;
	// 
	cvt_ftz_neari_u16_f16	$s0, $s0;
	cvt_u16_f16	$s0, $s0;
	cvt_upi_u16_f16	$s0, $s0;
	cvt_downi_u16_f16	$s0, $s0;
	cvt_neari_sat_u16_f16	$s0, $s0;
	cvt_zeroi_sat_u16_f16	$s0, $s0;
	cvt_upi_sat_u16_f16	$s0, $s0;
	cvt_downi_sat_u16_f16	$s0, $s0;
	cvt_neari_u16_f16	$s0, 0Hffff;
	// 
	// Next sample
	// 
	cvt_neari_u32_f16	$s0, $s0;
	// 
	cvt_ftz_neari_u32_f16	$s0, $s0;
	cvt_u32_f16	$s0, $s0;
	cvt_upi_u32_f16	$s0, $s0;
	cvt_downi_u32_f16	$s0, $s0;
	cvt_neari_sat_u32_f16	$s0, $s0;
	cvt_zeroi_sat_u32_f16	$s0, $s0;
	cvt_upi_sat_u32_f16	$s0, $s0;
	cvt_downi_sat_u32_f16	$s0, $s0;
	cvt_neari_u32_f16	$s0, 0Hffff;
	// 
	// Next sample
	// 
	cvt_neari_u64_f16	$d0, $s0;
	// 
	cvt_ftz_neari_u64_f16	$d0, $s0;
	cvt_u64_f16	$d0, $s0;
	cvt_upi_u64_f16	$d0, $s0;
	cvt_downi_u64_f16	$d0, $s0;
	cvt_neari_sat_u64_f16	$d0, $s0;
	cvt_zeroi_sat_u64_f16	$d0, $s0;
	cvt_upi_sat_u64_f16	$d0, $s0;
	cvt_downi_sat_u64_f16	$d0, $s0;
	cvt_neari_u64_f16	$d0, 0Hffff;
	// 
	// Next sample
	// 
	cvt_neari_s8_f16	$s0, $s0;
	// 
	cvt_ftz_neari_s8_f16	$s0, $s0;
	cvt_s8_f16	$s0, $s0;
	cvt_upi_s8_f16	$s0, $s0;
	cvt_downi_s8_f16	$s0, $s0;
	cvt_neari_sat_s8_f16	$s0, $s0;
	cvt_zeroi_sat_s8_f16	$s0, $s0;
	cvt_upi_sat_s8_f16	$s0, $s0;
	cvt_downi_sat_s8_f16	$s0, $s0;
	cvt_neari_s8_f16	$s0, 0Hffff;
	// 
	// Next sample
	// 
	cvt_neari_s16_f16	$s0, $s0;
	// 
	cvt_ftz_neari_s16_f16	$s0, $s0;
	cvt_s16_f16	$s0, $s0;
	cvt_upi_s16_f16	$s0, $s0;
	cvt_downi_s16_f16	$s0, $s0;
	cvt_neari_sat_s16_f16	$s0, $s0;
	cvt_zeroi_sat_s16_f16	$s0, $s0;
	cvt_upi_sat_s16_f16	$s0, $s0;
	cvt_downi_sat_s16_f16	$s0, $s0;
	cvt_neari_s16_f16	$s0, 0Hffff;
	// 
	// Next sample
	// 
	cvt_neari_s32_f16	$s0, $s0;
	// 
	cvt_ftz_neari_s32_f16	$s0, $s0;
	cvt_s32_f16	$s0, $s0;
	cvt_upi_s32_f16	$s0, $s0;
	cvt_downi_s32_f16	$s0, $s0;
	cvt_neari_sat_s32_f16	$s0, $s0;
	cvt_zeroi_sat_s32_f16	$s0, $s0;
	cvt_upi_sat_s32_f16	$s0, $s0;
	cvt_downi_sat_s32_f16	$s0, $s0;
	cvt_neari_s32_f16	$s0, 0Hffff;
	// 
	// Next sample
	// 
	cvt_neari_s64_f16	$d0, $s0;
	// 
	cvt_ftz_neari_s64_f16	$d0, $s0;
	cvt_s64_f16	$d0, $s0;
	cvt_upi_s64_f16	$d0, $s0;
	cvt_downi_s64_f16	$d0, $s0;
	cvt_neari_sat_s64_f16	$d0, $s0;
	cvt_zeroi_sat_s64_f16	$d0, $s0;
	cvt_upi_sat_s64_f16	$d0, $s0;
	cvt_downi_sat_s64_f16	$d0, $s0;
	cvt_neari_s64_f16	$d0, 0Hffff;
	// 
	// Next sample
	// 
	cvt_f16_f16	$s0, $s0;
	// 
	cvt_ftz_f16_f16	$s0, $s0;
	cvt_f16_f16	$s0, 0Hffff;
	// 
	// Next sample
	// 
	cvt_f32_f16	$s0, $s0;
	// 
	cvt_ftz_f32_f16	$s0, $s0;
	cvt_f32_f16	$s0, 0Hffff;
	// 
	// Next sample
	// 
	cvt_f64_f16	$d0, $s0;
	// 
	cvt_ftz_f64_f16	$d0, $s0;
	cvt_f64_f16	$d0, 0Hffff;
	// 
	// Next sample
	// 
	cvt_b1_f16	$c0, $s0;
	// 
	cvt_ftz_b1_f16	$c0, $s0;
	cvt_b1_f16	$c0, 0Hffff;
	// 
	// Next sample
	// 
	cvt_neari_u8_f32	$s0, $s0;
	// 
	cvt_ftz_neari_u8_f32	$s0, $s0;
	cvt_u8_f32	$s0, $s0;
	cvt_upi_u8_f32	$s0, $s0;
	cvt_downi_u8_f32	$s0, $s0;
	cvt_neari_sat_u8_f32	$s0, $s0;
	cvt_zeroi_sat_u8_f32	$s0, $s0;
	cvt_upi_sat_u8_f32	$s0, $s0;
	cvt_downi_sat_u8_f32	$s0, $s0;
	cvt_neari_u8_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cvt_neari_u16_f32	$s0, $s0;
	// 
	cvt_ftz_neari_u16_f32	$s0, $s0;
	cvt_u16_f32	$s0, $s0;
	cvt_upi_u16_f32	$s0, $s0;
	cvt_downi_u16_f32	$s0, $s0;
	cvt_neari_sat_u16_f32	$s0, $s0;
	cvt_zeroi_sat_u16_f32	$s0, $s0;
	cvt_upi_sat_u16_f32	$s0, $s0;
	cvt_downi_sat_u16_f32	$s0, $s0;
	cvt_neari_u16_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cvt_neari_u32_f32	$s0, $s0;
	// 
	cvt_ftz_neari_u32_f32	$s0, $s0;
	cvt_u32_f32	$s0, $s0;
	cvt_upi_u32_f32	$s0, $s0;
	cvt_downi_u32_f32	$s0, $s0;
	cvt_neari_sat_u32_f32	$s0, $s0;
	cvt_zeroi_sat_u32_f32	$s0, $s0;
	cvt_upi_sat_u32_f32	$s0, $s0;
	cvt_downi_sat_u32_f32	$s0, $s0;
	cvt_neari_u32_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cvt_neari_u64_f32	$d0, $s0;
	// 
	cvt_ftz_neari_u64_f32	$d0, $s0;
	cvt_u64_f32	$d0, $s0;
	cvt_upi_u64_f32	$d0, $s0;
	cvt_downi_u64_f32	$d0, $s0;
	cvt_neari_sat_u64_f32	$d0, $s0;
	cvt_zeroi_sat_u64_f32	$d0, $s0;
	cvt_upi_sat_u64_f32	$d0, $s0;
	cvt_downi_sat_u64_f32	$d0, $s0;
	cvt_neari_u64_f32	$d0, 0Fffffffff;
	// 
	// Next sample
	// 
	cvt_neari_s8_f32	$s0, $s0;
	// 
	cvt_ftz_neari_s8_f32	$s0, $s0;
	cvt_s8_f32	$s0, $s0;
	cvt_upi_s8_f32	$s0, $s0;
	cvt_downi_s8_f32	$s0, $s0;
	cvt_neari_sat_s8_f32	$s0, $s0;
	cvt_zeroi_sat_s8_f32	$s0, $s0;
	cvt_upi_sat_s8_f32	$s0, $s0;
	cvt_downi_sat_s8_f32	$s0, $s0;
	cvt_neari_s8_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cvt_neari_s16_f32	$s0, $s0;
	// 
	cvt_ftz_neari_s16_f32	$s0, $s0;
	cvt_s16_f32	$s0, $s0;
	cvt_upi_s16_f32	$s0, $s0;
	cvt_downi_s16_f32	$s0, $s0;
	cvt_neari_sat_s16_f32	$s0, $s0;
	cvt_zeroi_sat_s16_f32	$s0, $s0;
	cvt_upi_sat_s16_f32	$s0, $s0;
	cvt_downi_sat_s16_f32	$s0, $s0;
	cvt_neari_s16_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cvt_neari_s32_f32	$s0, $s0;
	// 
	cvt_ftz_neari_s32_f32	$s0, $s0;
	cvt_s32_f32	$s0, $s0;
	cvt_upi_s32_f32	$s0, $s0;
	cvt_downi_s32_f32	$s0, $s0;
	cvt_neari_sat_s32_f32	$s0, $s0;
	cvt_zeroi_sat_s32_f32	$s0, $s0;
	cvt_upi_sat_s32_f32	$s0, $s0;
	cvt_downi_sat_s32_f32	$s0, $s0;
	cvt_neari_s32_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cvt_neari_s64_f32	$d0, $s0;
	// 
	cvt_ftz_neari_s64_f32	$d0, $s0;
	cvt_s64_f32	$d0, $s0;
	cvt_upi_s64_f32	$d0, $s0;
	cvt_downi_s64_f32	$d0, $s0;
	cvt_neari_sat_s64_f32	$d0, $s0;
	cvt_zeroi_sat_s64_f32	$d0, $s0;
	cvt_upi_sat_s64_f32	$d0, $s0;
	cvt_downi_sat_s64_f32	$d0, $s0;
	cvt_neari_s64_f32	$d0, 0Fffffffff;
	// 
	// Next sample
	// 
	cvt_f16_f32	$s0, $s0;
	// 
	cvt_ftz_f16_f32	$s0, $s0;
	cvt_zero_f16_f32	$s0, $s0;
	cvt_up_f16_f32	$s0, $s0;
	cvt_down_f16_f32	$s0, $s0;
	cvt_f16_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cvt_f32_f32	$s0, $s0;
	// 
	cvt_ftz_f32_f32	$s0, $s0;
	cvt_f32_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	cvt_f64_f32	$d0, $s0;
	// 
	cvt_ftz_f64_f32	$d0, $s0;
	cvt_f64_f32	$d0, 0Fffffffff;
	// 
	// Next sample
	// 
	cvt_b1_f32	$c0, $s0;
	// 
	cvt_ftz_b1_f32	$c0, $s0;
	cvt_b1_f32	$c0, 0Fffffffff;
	// 
	// Next sample
	// 
	cvt_neari_u8_f64	$s0, $d0;
	// 
	cvt_ftz_neari_u8_f64	$s0, $d0;
	cvt_u8_f64	$s0, $d0;
	cvt_upi_u8_f64	$s0, $d0;
	cvt_downi_u8_f64	$s0, $d0;
	cvt_neari_sat_u8_f64	$s0, $d0;
	cvt_zeroi_sat_u8_f64	$s0, $d0;
	cvt_upi_sat_u8_f64	$s0, $d0;
	cvt_downi_sat_u8_f64	$s0, $d0;
	cvt_neari_u8_f64	$s0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cvt_neari_u16_f64	$s0, $d0;
	// 
	cvt_ftz_neari_u16_f64	$s0, $d0;
	cvt_u16_f64	$s0, $d0;
	cvt_upi_u16_f64	$s0, $d0;
	cvt_downi_u16_f64	$s0, $d0;
	cvt_neari_sat_u16_f64	$s0, $d0;
	cvt_zeroi_sat_u16_f64	$s0, $d0;
	cvt_upi_sat_u16_f64	$s0, $d0;
	cvt_downi_sat_u16_f64	$s0, $d0;
	cvt_neari_u16_f64	$s0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cvt_neari_u32_f64	$s0, $d0;
	// 
	cvt_ftz_neari_u32_f64	$s0, $d0;
	cvt_u32_f64	$s0, $d0;
	cvt_upi_u32_f64	$s0, $d0;
	cvt_downi_u32_f64	$s0, $d0;
	cvt_neari_sat_u32_f64	$s0, $d0;
	cvt_zeroi_sat_u32_f64	$s0, $d0;
	cvt_upi_sat_u32_f64	$s0, $d0;
	cvt_downi_sat_u32_f64	$s0, $d0;
	cvt_neari_u32_f64	$s0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cvt_neari_u64_f64	$d0, $d0;
	// 
	cvt_ftz_neari_u64_f64	$d0, $d0;
	cvt_u64_f64	$d0, $d0;
	cvt_upi_u64_f64	$d0, $d0;
	cvt_downi_u64_f64	$d0, $d0;
	cvt_neari_sat_u64_f64	$d0, $d0;
	cvt_zeroi_sat_u64_f64	$d0, $d0;
	cvt_upi_sat_u64_f64	$d0, $d0;
	cvt_downi_sat_u64_f64	$d0, $d0;
	cvt_neari_u64_f64	$d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cvt_neari_s8_f64	$s0, $d0;
	// 
	cvt_ftz_neari_s8_f64	$s0, $d0;
	cvt_s8_f64	$s0, $d0;
	cvt_upi_s8_f64	$s0, $d0;
	cvt_downi_s8_f64	$s0, $d0;
	cvt_neari_sat_s8_f64	$s0, $d0;
	cvt_zeroi_sat_s8_f64	$s0, $d0;
	cvt_upi_sat_s8_f64	$s0, $d0;
	cvt_downi_sat_s8_f64	$s0, $d0;
	cvt_neari_s8_f64	$s0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cvt_neari_s16_f64	$s0, $d0;
	// 
	cvt_ftz_neari_s16_f64	$s0, $d0;
	cvt_s16_f64	$s0, $d0;
	cvt_upi_s16_f64	$s0, $d0;
	cvt_downi_s16_f64	$s0, $d0;
	cvt_neari_sat_s16_f64	$s0, $d0;
	cvt_zeroi_sat_s16_f64	$s0, $d0;
	cvt_upi_sat_s16_f64	$s0, $d0;
	cvt_downi_sat_s16_f64	$s0, $d0;
	cvt_neari_s16_f64	$s0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cvt_neari_s32_f64	$s0, $d0;
	// 
	cvt_ftz_neari_s32_f64	$s0, $d0;
	cvt_s32_f64	$s0, $d0;
	cvt_upi_s32_f64	$s0, $d0;
	cvt_downi_s32_f64	$s0, $d0;
	cvt_neari_sat_s32_f64	$s0, $d0;
	cvt_zeroi_sat_s32_f64	$s0, $d0;
	cvt_upi_sat_s32_f64	$s0, $d0;
	cvt_downi_sat_s32_f64	$s0, $d0;
	cvt_neari_s32_f64	$s0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cvt_neari_s64_f64	$d0, $d0;
	// 
	cvt_ftz_neari_s64_f64	$d0, $d0;
	cvt_s64_f64	$d0, $d0;
	cvt_upi_s64_f64	$d0, $d0;
	cvt_downi_s64_f64	$d0, $d0;
	cvt_neari_sat_s64_f64	$d0, $d0;
	cvt_zeroi_sat_s64_f64	$d0, $d0;
	cvt_upi_sat_s64_f64	$d0, $d0;
	cvt_downi_sat_s64_f64	$d0, $d0;
	cvt_neari_s64_f64	$d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cvt_f16_f64	$s0, $d0;
	// 
	cvt_ftz_f16_f64	$s0, $d0;
	cvt_zero_f16_f64	$s0, $d0;
	cvt_up_f16_f64	$s0, $d0;
	cvt_down_f16_f64	$s0, $d0;
	cvt_f16_f64	$s0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cvt_f32_f64	$s0, $d0;
	// 
	cvt_ftz_f32_f64	$s0, $d0;
	cvt_zero_f32_f64	$s0, $d0;
	cvt_up_f32_f64	$s0, $d0;
	cvt_down_f32_f64	$s0, $d0;
	cvt_f32_f64	$s0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cvt_f64_f64	$d0, $d0;
	// 
	cvt_ftz_f64_f64	$d0, $d0;
	cvt_f64_f64	$d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cvt_b1_f64	$c0, $d0;
	// 
	cvt_ftz_b1_f64	$c0, $d0;
	cvt_b1_f64	$c0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	cvt_u8_b1	$s0, $c0;
	// 
	cvt_u8_b1	$s0, 1;
	cvt_u8_b1	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u16_b1	$s0, $c0;
	// 
	cvt_u16_b1	$s0, 1;
	cvt_u16_b1	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u32_b1	$s0, $c0;
	// 
	cvt_u32_b1	$s0, 1;
	cvt_u32_b1	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_u64_b1	$d0, $c0;
	// 
	cvt_u64_b1	$d0, 1;
	cvt_u64_b1	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s8_b1	$s0, $c0;
	// 
	cvt_s8_b1	$s0, 1;
	cvt_s8_b1	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s16_b1	$s0, $c0;
	// 
	cvt_s16_b1	$s0, 1;
	cvt_s16_b1	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s32_b1	$s0, $c0;
	// 
	cvt_s32_b1	$s0, 1;
	cvt_s32_b1	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_s64_b1	$d0, $c0;
	// 
	cvt_s64_b1	$d0, 1;
	cvt_s64_b1	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f16_b1	$s0, $c0;
	// 
	cvt_f16_b1	$s0, 1;
	cvt_f16_b1	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f32_b1	$s0, $c0;
	// 
	cvt_f32_b1	$s0, 1;
	cvt_f32_b1	$s0, WAVESIZE;
	// 
	// Next sample
	// 
	cvt_f64_b1	$d0, $c0;
	// 
	cvt_f64_b1	$d0, 1;
	cvt_f64_b1	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	ld_u8	$s0, [$s0];
	// 
	ld_const_u8	$s0, [$s0];
	ld_v2_u8	($s0,$s1), [$s0];
	ld_v3_u8	($s0,$s1,$s2), [$s0];
	ld_v4_u8	($s0,$s1,$s2,$s3), [$s0];
	ld_u8	$s0, [0];
	ld_align(2)_u8	$s0, [$s0];
	ld_align(4)_u8	$s0, [$s0];
	ld_align(8)_u8	$s0, [$s0];
	ld_align(16)_u8	$s0, [$s0];
	ld_align(32)_u8	$s0, [$s0];
	ld_align(64)_u8	$s0, [$s0];
	ld_align(128)_u8	$s0, [$s0];
	ld_equiv(1)_u8	$s0, [$s0];
	ld_equiv(2)_u8	$s0, [$s0];
	ld_equiv(255)_u8	$s0, [$s0];
	ld_width(2)_u8	$s0, [$s0];
	ld_width(4)_u8	$s0, [$s0];
	ld_width(8)_u8	$s0, [$s0];
	ld_width(16)_u8	$s0, [$s0];
	ld_width(32)_u8	$s0, [$s0];
	ld_width(64)_u8	$s0, [$s0];
	ld_width(128)_u8	$s0, [$s0];
	ld_width(256)_u8	$s0, [$s0];
	ld_width(512)_u8	$s0, [$s0];
	ld_width(1024)_u8	$s0, [$s0];
	ld_width(2048)_u8	$s0, [$s0];
	ld_width(4096)_u8	$s0, [$s0];
	ld_width(8192)_u8	$s0, [$s0];
	ld_width(16384)_u8	$s0, [$s0];
	ld_width(32768)_u8	$s0, [$s0];
	ld_width(65536)_u8	$s0, [$s0];
	ld_width(131072)_u8	$s0, [$s0];
	ld_width(262144)_u8	$s0, [$s0];
	ld_width(524288)_u8	$s0, [$s0];
	ld_width(1048576)_u8	$s0, [$s0];
	ld_width(2097152)_u8	$s0, [$s0];
	ld_width(4194304)_u8	$s0, [$s0];
	ld_width(8388608)_u8	$s0, [$s0];
	ld_width(16777216)_u8	$s0, [$s0];
	ld_width(33554432)_u8	$s0, [$s0];
	ld_width(67108864)_u8	$s0, [$s0];
	ld_width(134217728)_u8	$s0, [$s0];
	ld_width(268435456)_u8	$s0, [$s0];
	ld_width(536870912)_u8	$s0, [$s0];
	ld_width(1073741824)_u8	$s0, [$s0];
	ld_width(2147483648)_u8	$s0, [$s0];
	ld_width(WAVESIZE)_u8	$s0, [$s0];
	ld_width(all)_u8	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_global_u8	$s0, [&GlobalVar];
	// 
	ld_global_const_u8	$s0, [&GlobalVar];
	ld_v2_global_u8	($s0,$s1), [&GlobalVar];
	ld_v3_global_u8	($s0,$s1,$s2), [&GlobalVar];
	ld_v4_global_u8	($s0,$s1,$s2,$s3), [&GlobalVar];
	ld_global_u8	$s0, [$s0];
	ld_global_u8	$s0, [0];
	ld_global_align(2)_u8	$s0, [&GlobalVar];
	ld_global_align(4)_u8	$s0, [&GlobalVar];
	ld_global_align(8)_u8	$s0, [&GlobalVar];
	ld_global_align(16)_u8	$s0, [&GlobalVar];
	ld_global_align(32)_u8	$s0, [&GlobalVar];
	ld_global_align(64)_u8	$s0, [&GlobalVar];
	ld_global_align(128)_u8	$s0, [&GlobalVar];
	ld_global_equiv(1)_u8	$s0, [&GlobalVar];
	ld_global_equiv(2)_u8	$s0, [&GlobalVar];
	ld_global_equiv(255)_u8	$s0, [&GlobalVar];
	ld_global_width(2)_u8	$s0, [&GlobalVar];
	ld_global_width(4)_u8	$s0, [&GlobalVar];
	ld_global_width(8)_u8	$s0, [&GlobalVar];
	ld_global_width(16)_u8	$s0, [&GlobalVar];
	ld_global_width(32)_u8	$s0, [&GlobalVar];
	ld_global_width(64)_u8	$s0, [&GlobalVar];
	ld_global_width(128)_u8	$s0, [&GlobalVar];
	ld_global_width(256)_u8	$s0, [&GlobalVar];
	ld_global_width(512)_u8	$s0, [&GlobalVar];
	ld_global_width(1024)_u8	$s0, [&GlobalVar];
	ld_global_width(2048)_u8	$s0, [&GlobalVar];
	ld_global_width(4096)_u8	$s0, [&GlobalVar];
	ld_global_width(8192)_u8	$s0, [&GlobalVar];
	ld_global_width(16384)_u8	$s0, [&GlobalVar];
	ld_global_width(32768)_u8	$s0, [&GlobalVar];
	ld_global_width(65536)_u8	$s0, [&GlobalVar];
	ld_global_width(131072)_u8	$s0, [&GlobalVar];
	ld_global_width(262144)_u8	$s0, [&GlobalVar];
	ld_global_width(524288)_u8	$s0, [&GlobalVar];
	ld_global_width(1048576)_u8	$s0, [&GlobalVar];
	ld_global_width(2097152)_u8	$s0, [&GlobalVar];
	ld_global_width(4194304)_u8	$s0, [&GlobalVar];
	ld_global_width(8388608)_u8	$s0, [&GlobalVar];
	ld_global_width(16777216)_u8	$s0, [&GlobalVar];
	ld_global_width(33554432)_u8	$s0, [&GlobalVar];
	ld_global_width(67108864)_u8	$s0, [&GlobalVar];
	ld_global_width(134217728)_u8	$s0, [&GlobalVar];
	ld_global_width(268435456)_u8	$s0, [&GlobalVar];
	ld_global_width(536870912)_u8	$s0, [&GlobalVar];
	ld_global_width(1073741824)_u8	$s0, [&GlobalVar];
	ld_global_width(2147483648)_u8	$s0, [&GlobalVar];
	ld_global_width(WAVESIZE)_u8	$s0, [&GlobalVar];
	ld_global_width(all)_u8	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	ld_readonly_u8	$s0, [&ReadonlyVar];
	// 
	ld_readonly_const_u8	$s0, [&ReadonlyVar];
	ld_v2_readonly_u8	($s0,$s1), [&ReadonlyVar];
	ld_v3_readonly_u8	($s0,$s1,$s2), [&ReadonlyVar];
	ld_v4_readonly_u8	($s0,$s1,$s2,$s3), [&ReadonlyVar];
	ld_readonly_u8	$s0, [$s0];
	ld_readonly_u8	$s0, [0];
	ld_readonly_align(2)_u8	$s0, [&ReadonlyVar];
	ld_readonly_align(4)_u8	$s0, [&ReadonlyVar];
	ld_readonly_align(8)_u8	$s0, [&ReadonlyVar];
	ld_readonly_align(16)_u8	$s0, [&ReadonlyVar];
	ld_readonly_align(32)_u8	$s0, [&ReadonlyVar];
	ld_readonly_align(64)_u8	$s0, [&ReadonlyVar];
	ld_readonly_align(128)_u8	$s0, [&ReadonlyVar];
	ld_readonly_equiv(1)_u8	$s0, [&ReadonlyVar];
	ld_readonly_equiv(2)_u8	$s0, [&ReadonlyVar];
	ld_readonly_equiv(255)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(2)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(4)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(8)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(16)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(32)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(64)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(128)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(256)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(512)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(1024)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(2048)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(4096)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(8192)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(16384)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(32768)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(65536)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(131072)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(262144)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(524288)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(1048576)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(2097152)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(4194304)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(8388608)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(16777216)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(33554432)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(67108864)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(134217728)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(268435456)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(536870912)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(1073741824)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(2147483648)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(WAVESIZE)_u8	$s0, [&ReadonlyVar];
	ld_readonly_width(all)_u8	$s0, [&ReadonlyVar];
	// 
	// Next sample
	// 
	ld_kernarg_u8	$s0, [$s0];
	// 
	ld_kernarg_const_u8	$s0, [$s0];
	ld_v2_kernarg_u8	($s0,$s1), [$s0];
	ld_v3_kernarg_u8	($s0,$s1,$s2), [$s0];
	ld_v4_kernarg_u8	($s0,$s1,$s2,$s3), [$s0];
	ld_kernarg_u8	$s0, [0];
	ld_kernarg_align(2)_u8	$s0, [$s0];
	ld_kernarg_align(4)_u8	$s0, [$s0];
	ld_kernarg_align(8)_u8	$s0, [$s0];
	ld_kernarg_align(16)_u8	$s0, [$s0];
	ld_kernarg_align(32)_u8	$s0, [$s0];
	ld_kernarg_align(64)_u8	$s0, [$s0];
	ld_kernarg_align(128)_u8	$s0, [$s0];
	ld_kernarg_equiv(1)_u8	$s0, [$s0];
	ld_kernarg_equiv(2)_u8	$s0, [$s0];
	ld_kernarg_equiv(255)_u8	$s0, [$s0];
	ld_kernarg_width(2)_u8	$s0, [$s0];
	ld_kernarg_width(4)_u8	$s0, [$s0];
	ld_kernarg_width(8)_u8	$s0, [$s0];
	ld_kernarg_width(16)_u8	$s0, [$s0];
	ld_kernarg_width(32)_u8	$s0, [$s0];
	ld_kernarg_width(64)_u8	$s0, [$s0];
	ld_kernarg_width(128)_u8	$s0, [$s0];
	ld_kernarg_width(256)_u8	$s0, [$s0];
	ld_kernarg_width(512)_u8	$s0, [$s0];
	ld_kernarg_width(1024)_u8	$s0, [$s0];
	ld_kernarg_width(2048)_u8	$s0, [$s0];
	ld_kernarg_width(4096)_u8	$s0, [$s0];
	ld_kernarg_width(8192)_u8	$s0, [$s0];
	ld_kernarg_width(16384)_u8	$s0, [$s0];
	ld_kernarg_width(32768)_u8	$s0, [$s0];
	ld_kernarg_width(65536)_u8	$s0, [$s0];
	ld_kernarg_width(131072)_u8	$s0, [$s0];
	ld_kernarg_width(262144)_u8	$s0, [$s0];
	ld_kernarg_width(524288)_u8	$s0, [$s0];
	ld_kernarg_width(1048576)_u8	$s0, [$s0];
	ld_kernarg_width(2097152)_u8	$s0, [$s0];
	ld_kernarg_width(4194304)_u8	$s0, [$s0];
	ld_kernarg_width(8388608)_u8	$s0, [$s0];
	ld_kernarg_width(16777216)_u8	$s0, [$s0];
	ld_kernarg_width(33554432)_u8	$s0, [$s0];
	ld_kernarg_width(67108864)_u8	$s0, [$s0];
	ld_kernarg_width(134217728)_u8	$s0, [$s0];
	ld_kernarg_width(268435456)_u8	$s0, [$s0];
	ld_kernarg_width(536870912)_u8	$s0, [$s0];
	ld_kernarg_width(1073741824)_u8	$s0, [$s0];
	ld_kernarg_width(2147483648)_u8	$s0, [$s0];
	ld_kernarg_width(WAVESIZE)_u8	$s0, [$s0];
	ld_kernarg_width(all)_u8	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_group_u8	$s0, [&GroupVar];
	// 
	ld_v2_group_u8	($s0,$s1), [&GroupVar];
	ld_v3_group_u8	($s0,$s1,$s2), [&GroupVar];
	ld_v4_group_u8	($s0,$s1,$s2,$s3), [&GroupVar];
	ld_group_u8	$s0, [$s0];
	ld_group_u8	$s0, [0];
	ld_group_align(2)_u8	$s0, [&GroupVar];
	ld_group_align(4)_u8	$s0, [&GroupVar];
	ld_group_align(8)_u8	$s0, [&GroupVar];
	ld_group_align(16)_u8	$s0, [&GroupVar];
	ld_group_align(32)_u8	$s0, [&GroupVar];
	ld_group_align(64)_u8	$s0, [&GroupVar];
	ld_group_align(128)_u8	$s0, [&GroupVar];
	ld_group_equiv(1)_u8	$s0, [&GroupVar];
	ld_group_equiv(2)_u8	$s0, [&GroupVar];
	ld_group_equiv(255)_u8	$s0, [&GroupVar];
	ld_group_width(2)_u8	$s0, [&GroupVar];
	ld_group_width(4)_u8	$s0, [&GroupVar];
	ld_group_width(8)_u8	$s0, [&GroupVar];
	ld_group_width(16)_u8	$s0, [&GroupVar];
	ld_group_width(32)_u8	$s0, [&GroupVar];
	ld_group_width(64)_u8	$s0, [&GroupVar];
	ld_group_width(128)_u8	$s0, [&GroupVar];
	ld_group_width(256)_u8	$s0, [&GroupVar];
	ld_group_width(512)_u8	$s0, [&GroupVar];
	ld_group_width(1024)_u8	$s0, [&GroupVar];
	ld_group_width(2048)_u8	$s0, [&GroupVar];
	ld_group_width(4096)_u8	$s0, [&GroupVar];
	ld_group_width(8192)_u8	$s0, [&GroupVar];
	ld_group_width(16384)_u8	$s0, [&GroupVar];
	ld_group_width(32768)_u8	$s0, [&GroupVar];
	ld_group_width(65536)_u8	$s0, [&GroupVar];
	ld_group_width(131072)_u8	$s0, [&GroupVar];
	ld_group_width(262144)_u8	$s0, [&GroupVar];
	ld_group_width(524288)_u8	$s0, [&GroupVar];
	ld_group_width(1048576)_u8	$s0, [&GroupVar];
	ld_group_width(2097152)_u8	$s0, [&GroupVar];
	ld_group_width(4194304)_u8	$s0, [&GroupVar];
	ld_group_width(8388608)_u8	$s0, [&GroupVar];
	ld_group_width(16777216)_u8	$s0, [&GroupVar];
	ld_group_width(33554432)_u8	$s0, [&GroupVar];
	ld_group_width(67108864)_u8	$s0, [&GroupVar];
	ld_group_width(134217728)_u8	$s0, [&GroupVar];
	ld_group_width(268435456)_u8	$s0, [&GroupVar];
	ld_group_width(536870912)_u8	$s0, [&GroupVar];
	ld_group_width(1073741824)_u8	$s0, [&GroupVar];
	ld_group_width(2147483648)_u8	$s0, [&GroupVar];
	ld_group_width(WAVESIZE)_u8	$s0, [&GroupVar];
	ld_group_width(all)_u8	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	ld_private_u8	$s0, [&PrivateVar];
	// 
	ld_v2_private_u8	($s0,$s1), [&PrivateVar];
	ld_v3_private_u8	($s0,$s1,$s2), [&PrivateVar];
	ld_v4_private_u8	($s0,$s1,$s2,$s3), [&PrivateVar];
	ld_private_u8	$s0, [$s0];
	ld_private_u8	$s0, [0];
	ld_private_align(2)_u8	$s0, [&PrivateVar];
	ld_private_align(4)_u8	$s0, [&PrivateVar];
	ld_private_align(8)_u8	$s0, [&PrivateVar];
	ld_private_align(16)_u8	$s0, [&PrivateVar];
	ld_private_align(32)_u8	$s0, [&PrivateVar];
	ld_private_align(64)_u8	$s0, [&PrivateVar];
	ld_private_align(128)_u8	$s0, [&PrivateVar];
	ld_private_equiv(1)_u8	$s0, [&PrivateVar];
	ld_private_equiv(2)_u8	$s0, [&PrivateVar];
	ld_private_equiv(255)_u8	$s0, [&PrivateVar];
	ld_private_width(2)_u8	$s0, [&PrivateVar];
	ld_private_width(4)_u8	$s0, [&PrivateVar];
	ld_private_width(8)_u8	$s0, [&PrivateVar];
	ld_private_width(16)_u8	$s0, [&PrivateVar];
	ld_private_width(32)_u8	$s0, [&PrivateVar];
	ld_private_width(64)_u8	$s0, [&PrivateVar];
	ld_private_width(128)_u8	$s0, [&PrivateVar];
	ld_private_width(256)_u8	$s0, [&PrivateVar];
	ld_private_width(512)_u8	$s0, [&PrivateVar];
	ld_private_width(1024)_u8	$s0, [&PrivateVar];
	ld_private_width(2048)_u8	$s0, [&PrivateVar];
	ld_private_width(4096)_u8	$s0, [&PrivateVar];
	ld_private_width(8192)_u8	$s0, [&PrivateVar];
	ld_private_width(16384)_u8	$s0, [&PrivateVar];
	ld_private_width(32768)_u8	$s0, [&PrivateVar];
	ld_private_width(65536)_u8	$s0, [&PrivateVar];
	ld_private_width(131072)_u8	$s0, [&PrivateVar];
	ld_private_width(262144)_u8	$s0, [&PrivateVar];
	ld_private_width(524288)_u8	$s0, [&PrivateVar];
	ld_private_width(1048576)_u8	$s0, [&PrivateVar];
	ld_private_width(2097152)_u8	$s0, [&PrivateVar];
	ld_private_width(4194304)_u8	$s0, [&PrivateVar];
	ld_private_width(8388608)_u8	$s0, [&PrivateVar];
	ld_private_width(16777216)_u8	$s0, [&PrivateVar];
	ld_private_width(33554432)_u8	$s0, [&PrivateVar];
	ld_private_width(67108864)_u8	$s0, [&PrivateVar];
	ld_private_width(134217728)_u8	$s0, [&PrivateVar];
	ld_private_width(268435456)_u8	$s0, [&PrivateVar];
	ld_private_width(536870912)_u8	$s0, [&PrivateVar];
	ld_private_width(1073741824)_u8	$s0, [&PrivateVar];
	ld_private_width(2147483648)_u8	$s0, [&PrivateVar];
	ld_private_width(WAVESIZE)_u8	$s0, [&PrivateVar];
	ld_private_width(all)_u8	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	ld_spill_u8	$s0, [$s0];
	// 
	ld_v2_spill_u8	($s0,$s1), [$s0];
	ld_v3_spill_u8	($s0,$s1,$s2), [$s0];
	ld_v4_spill_u8	($s0,$s1,$s2,$s3), [$s0];
	ld_spill_u8	$s0, [0];
	ld_spill_align(2)_u8	$s0, [$s0];
	ld_spill_align(4)_u8	$s0, [$s0];
	ld_spill_align(8)_u8	$s0, [$s0];
	ld_spill_align(16)_u8	$s0, [$s0];
	ld_spill_align(32)_u8	$s0, [$s0];
	ld_spill_align(64)_u8	$s0, [$s0];
	ld_spill_align(128)_u8	$s0, [$s0];
	ld_spill_equiv(1)_u8	$s0, [$s0];
	ld_spill_equiv(2)_u8	$s0, [$s0];
	ld_spill_equiv(255)_u8	$s0, [$s0];
	ld_spill_width(2)_u8	$s0, [$s0];
	ld_spill_width(4)_u8	$s0, [$s0];
	ld_spill_width(8)_u8	$s0, [$s0];
	ld_spill_width(16)_u8	$s0, [$s0];
	ld_spill_width(32)_u8	$s0, [$s0];
	ld_spill_width(64)_u8	$s0, [$s0];
	ld_spill_width(128)_u8	$s0, [$s0];
	ld_spill_width(256)_u8	$s0, [$s0];
	ld_spill_width(512)_u8	$s0, [$s0];
	ld_spill_width(1024)_u8	$s0, [$s0];
	ld_spill_width(2048)_u8	$s0, [$s0];
	ld_spill_width(4096)_u8	$s0, [$s0];
	ld_spill_width(8192)_u8	$s0, [$s0];
	ld_spill_width(16384)_u8	$s0, [$s0];
	ld_spill_width(32768)_u8	$s0, [$s0];
	ld_spill_width(65536)_u8	$s0, [$s0];
	ld_spill_width(131072)_u8	$s0, [$s0];
	ld_spill_width(262144)_u8	$s0, [$s0];
	ld_spill_width(524288)_u8	$s0, [$s0];
	ld_spill_width(1048576)_u8	$s0, [$s0];
	ld_spill_width(2097152)_u8	$s0, [$s0];
	ld_spill_width(4194304)_u8	$s0, [$s0];
	ld_spill_width(8388608)_u8	$s0, [$s0];
	ld_spill_width(16777216)_u8	$s0, [$s0];
	ld_spill_width(33554432)_u8	$s0, [$s0];
	ld_spill_width(67108864)_u8	$s0, [$s0];
	ld_spill_width(134217728)_u8	$s0, [$s0];
	ld_spill_width(268435456)_u8	$s0, [$s0];
	ld_spill_width(536870912)_u8	$s0, [$s0];
	ld_spill_width(1073741824)_u8	$s0, [$s0];
	ld_spill_width(2147483648)_u8	$s0, [$s0];
	ld_spill_width(WAVESIZE)_u8	$s0, [$s0];
	ld_spill_width(all)_u8	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_u8	$s0, [$s0];
	// 
	ld_v2_arg_u8	($s0,$s1), [$s0];
	ld_v3_arg_u8	($s0,$s1,$s2), [$s0];
	ld_v4_arg_u8	($s0,$s1,$s2,$s3), [$s0];
	ld_arg_u8	$s0, [0];
	ld_arg_align(2)_u8	$s0, [$s0];
	ld_arg_align(4)_u8	$s0, [$s0];
	ld_arg_align(8)_u8	$s0, [$s0];
	ld_arg_align(16)_u8	$s0, [$s0];
	ld_arg_align(32)_u8	$s0, [$s0];
	ld_arg_align(64)_u8	$s0, [$s0];
	ld_arg_align(128)_u8	$s0, [$s0];
	ld_arg_equiv(1)_u8	$s0, [$s0];
	ld_arg_equiv(2)_u8	$s0, [$s0];
	ld_arg_equiv(255)_u8	$s0, [$s0];
	ld_arg_width(2)_u8	$s0, [$s0];
	ld_arg_width(4)_u8	$s0, [$s0];
	ld_arg_width(8)_u8	$s0, [$s0];
	ld_arg_width(16)_u8	$s0, [$s0];
	ld_arg_width(32)_u8	$s0, [$s0];
	ld_arg_width(64)_u8	$s0, [$s0];
	ld_arg_width(128)_u8	$s0, [$s0];
	ld_arg_width(256)_u8	$s0, [$s0];
	ld_arg_width(512)_u8	$s0, [$s0];
	ld_arg_width(1024)_u8	$s0, [$s0];
	ld_arg_width(2048)_u8	$s0, [$s0];
	ld_arg_width(4096)_u8	$s0, [$s0];
	ld_arg_width(8192)_u8	$s0, [$s0];
	ld_arg_width(16384)_u8	$s0, [$s0];
	ld_arg_width(32768)_u8	$s0, [$s0];
	ld_arg_width(65536)_u8	$s0, [$s0];
	ld_arg_width(131072)_u8	$s0, [$s0];
	ld_arg_width(262144)_u8	$s0, [$s0];
	ld_arg_width(524288)_u8	$s0, [$s0];
	ld_arg_width(1048576)_u8	$s0, [$s0];
	ld_arg_width(2097152)_u8	$s0, [$s0];
	ld_arg_width(4194304)_u8	$s0, [$s0];
	ld_arg_width(8388608)_u8	$s0, [$s0];
	ld_arg_width(16777216)_u8	$s0, [$s0];
	ld_arg_width(33554432)_u8	$s0, [$s0];
	ld_arg_width(67108864)_u8	$s0, [$s0];
	ld_arg_width(134217728)_u8	$s0, [$s0];
	ld_arg_width(268435456)_u8	$s0, [$s0];
	ld_arg_width(536870912)_u8	$s0, [$s0];
	ld_arg_width(1073741824)_u8	$s0, [$s0];
	ld_arg_width(2147483648)_u8	$s0, [$s0];
	ld_arg_width(WAVESIZE)_u8	$s0, [$s0];
	ld_arg_width(all)_u8	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_u16	$s0, [$s0];
	// 
	ld_const_u16	$s0, [$s0];
	ld_v2_u16	($s0,$s1), [$s0];
	ld_v3_u16	($s0,$s1,$s2), [$s0];
	ld_v4_u16	($s0,$s1,$s2,$s3), [$s0];
	ld_u16	$s0, [0];
	ld_align(2)_u16	$s0, [$s0];
	ld_align(4)_u16	$s0, [$s0];
	ld_align(8)_u16	$s0, [$s0];
	ld_align(16)_u16	$s0, [$s0];
	ld_align(32)_u16	$s0, [$s0];
	ld_align(64)_u16	$s0, [$s0];
	ld_align(128)_u16	$s0, [$s0];
	ld_equiv(1)_u16	$s0, [$s0];
	ld_equiv(2)_u16	$s0, [$s0];
	ld_equiv(255)_u16	$s0, [$s0];
	ld_width(2)_u16	$s0, [$s0];
	ld_width(4)_u16	$s0, [$s0];
	ld_width(8)_u16	$s0, [$s0];
	ld_width(16)_u16	$s0, [$s0];
	ld_width(32)_u16	$s0, [$s0];
	ld_width(64)_u16	$s0, [$s0];
	ld_width(128)_u16	$s0, [$s0];
	ld_width(256)_u16	$s0, [$s0];
	ld_width(512)_u16	$s0, [$s0];
	ld_width(1024)_u16	$s0, [$s0];
	ld_width(2048)_u16	$s0, [$s0];
	ld_width(4096)_u16	$s0, [$s0];
	ld_width(8192)_u16	$s0, [$s0];
	ld_width(16384)_u16	$s0, [$s0];
	ld_width(32768)_u16	$s0, [$s0];
	ld_width(65536)_u16	$s0, [$s0];
	ld_width(131072)_u16	$s0, [$s0];
	ld_width(262144)_u16	$s0, [$s0];
	ld_width(524288)_u16	$s0, [$s0];
	ld_width(1048576)_u16	$s0, [$s0];
	ld_width(2097152)_u16	$s0, [$s0];
	ld_width(4194304)_u16	$s0, [$s0];
	ld_width(8388608)_u16	$s0, [$s0];
	ld_width(16777216)_u16	$s0, [$s0];
	ld_width(33554432)_u16	$s0, [$s0];
	ld_width(67108864)_u16	$s0, [$s0];
	ld_width(134217728)_u16	$s0, [$s0];
	ld_width(268435456)_u16	$s0, [$s0];
	ld_width(536870912)_u16	$s0, [$s0];
	ld_width(1073741824)_u16	$s0, [$s0];
	ld_width(2147483648)_u16	$s0, [$s0];
	ld_width(WAVESIZE)_u16	$s0, [$s0];
	ld_width(all)_u16	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_global_u16	$s0, [&GlobalVar];
	// 
	ld_global_const_u16	$s0, [&GlobalVar];
	ld_v2_global_u16	($s0,$s1), [&GlobalVar];
	ld_v3_global_u16	($s0,$s1,$s2), [&GlobalVar];
	ld_v4_global_u16	($s0,$s1,$s2,$s3), [&GlobalVar];
	ld_global_u16	$s0, [$s0];
	ld_global_u16	$s0, [0];
	ld_global_align(2)_u16	$s0, [&GlobalVar];
	ld_global_align(4)_u16	$s0, [&GlobalVar];
	ld_global_align(8)_u16	$s0, [&GlobalVar];
	ld_global_align(16)_u16	$s0, [&GlobalVar];
	ld_global_align(32)_u16	$s0, [&GlobalVar];
	ld_global_align(64)_u16	$s0, [&GlobalVar];
	ld_global_align(128)_u16	$s0, [&GlobalVar];
	ld_global_equiv(1)_u16	$s0, [&GlobalVar];
	ld_global_equiv(2)_u16	$s0, [&GlobalVar];
	ld_global_equiv(255)_u16	$s0, [&GlobalVar];
	ld_global_width(2)_u16	$s0, [&GlobalVar];
	ld_global_width(4)_u16	$s0, [&GlobalVar];
	ld_global_width(8)_u16	$s0, [&GlobalVar];
	ld_global_width(16)_u16	$s0, [&GlobalVar];
	ld_global_width(32)_u16	$s0, [&GlobalVar];
	ld_global_width(64)_u16	$s0, [&GlobalVar];
	ld_global_width(128)_u16	$s0, [&GlobalVar];
	ld_global_width(256)_u16	$s0, [&GlobalVar];
	ld_global_width(512)_u16	$s0, [&GlobalVar];
	ld_global_width(1024)_u16	$s0, [&GlobalVar];
	ld_global_width(2048)_u16	$s0, [&GlobalVar];
	ld_global_width(4096)_u16	$s0, [&GlobalVar];
	ld_global_width(8192)_u16	$s0, [&GlobalVar];
	ld_global_width(16384)_u16	$s0, [&GlobalVar];
	ld_global_width(32768)_u16	$s0, [&GlobalVar];
	ld_global_width(65536)_u16	$s0, [&GlobalVar];
	ld_global_width(131072)_u16	$s0, [&GlobalVar];
	ld_global_width(262144)_u16	$s0, [&GlobalVar];
	ld_global_width(524288)_u16	$s0, [&GlobalVar];
	ld_global_width(1048576)_u16	$s0, [&GlobalVar];
	ld_global_width(2097152)_u16	$s0, [&GlobalVar];
	ld_global_width(4194304)_u16	$s0, [&GlobalVar];
	ld_global_width(8388608)_u16	$s0, [&GlobalVar];
	ld_global_width(16777216)_u16	$s0, [&GlobalVar];
	ld_global_width(33554432)_u16	$s0, [&GlobalVar];
	ld_global_width(67108864)_u16	$s0, [&GlobalVar];
	ld_global_width(134217728)_u16	$s0, [&GlobalVar];
	ld_global_width(268435456)_u16	$s0, [&GlobalVar];
	ld_global_width(536870912)_u16	$s0, [&GlobalVar];
	ld_global_width(1073741824)_u16	$s0, [&GlobalVar];
	ld_global_width(2147483648)_u16	$s0, [&GlobalVar];
	ld_global_width(WAVESIZE)_u16	$s0, [&GlobalVar];
	ld_global_width(all)_u16	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	ld_readonly_u16	$s0, [&ReadonlyVar];
	// 
	ld_readonly_const_u16	$s0, [&ReadonlyVar];
	ld_v2_readonly_u16	($s0,$s1), [&ReadonlyVar];
	ld_v3_readonly_u16	($s0,$s1,$s2), [&ReadonlyVar];
	ld_v4_readonly_u16	($s0,$s1,$s2,$s3), [&ReadonlyVar];
	ld_readonly_u16	$s0, [$s0];
	ld_readonly_u16	$s0, [0];
	ld_readonly_align(2)_u16	$s0, [&ReadonlyVar];
	ld_readonly_align(4)_u16	$s0, [&ReadonlyVar];
	ld_readonly_align(8)_u16	$s0, [&ReadonlyVar];
	ld_readonly_align(16)_u16	$s0, [&ReadonlyVar];
	ld_readonly_align(32)_u16	$s0, [&ReadonlyVar];
	ld_readonly_align(64)_u16	$s0, [&ReadonlyVar];
	ld_readonly_align(128)_u16	$s0, [&ReadonlyVar];
	ld_readonly_equiv(1)_u16	$s0, [&ReadonlyVar];
	ld_readonly_equiv(2)_u16	$s0, [&ReadonlyVar];
	ld_readonly_equiv(255)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(2)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(4)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(8)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(16)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(32)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(64)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(128)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(256)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(512)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(1024)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(2048)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(4096)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(8192)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(16384)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(32768)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(65536)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(131072)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(262144)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(524288)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(1048576)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(2097152)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(4194304)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(8388608)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(16777216)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(33554432)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(67108864)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(134217728)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(268435456)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(536870912)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(1073741824)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(2147483648)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(WAVESIZE)_u16	$s0, [&ReadonlyVar];
	ld_readonly_width(all)_u16	$s0, [&ReadonlyVar];
	// 
	// Next sample
	// 
	ld_kernarg_u16	$s0, [$s0];
	// 
	ld_kernarg_const_u16	$s0, [$s0];
	ld_v2_kernarg_u16	($s0,$s1), [$s0];
	ld_v3_kernarg_u16	($s0,$s1,$s2), [$s0];
	ld_v4_kernarg_u16	($s0,$s1,$s2,$s3), [$s0];
	ld_kernarg_u16	$s0, [0];
	ld_kernarg_align(2)_u16	$s0, [$s0];
	ld_kernarg_align(4)_u16	$s0, [$s0];
	ld_kernarg_align(8)_u16	$s0, [$s0];
	ld_kernarg_align(16)_u16	$s0, [$s0];
	ld_kernarg_align(32)_u16	$s0, [$s0];
	ld_kernarg_align(64)_u16	$s0, [$s0];
	ld_kernarg_align(128)_u16	$s0, [$s0];
	ld_kernarg_equiv(1)_u16	$s0, [$s0];
	ld_kernarg_equiv(2)_u16	$s0, [$s0];
	ld_kernarg_equiv(255)_u16	$s0, [$s0];
	ld_kernarg_width(2)_u16	$s0, [$s0];
	ld_kernarg_width(4)_u16	$s0, [$s0];
	ld_kernarg_width(8)_u16	$s0, [$s0];
	ld_kernarg_width(16)_u16	$s0, [$s0];
	ld_kernarg_width(32)_u16	$s0, [$s0];
	ld_kernarg_width(64)_u16	$s0, [$s0];
	ld_kernarg_width(128)_u16	$s0, [$s0];
	ld_kernarg_width(256)_u16	$s0, [$s0];
	ld_kernarg_width(512)_u16	$s0, [$s0];
	ld_kernarg_width(1024)_u16	$s0, [$s0];
	ld_kernarg_width(2048)_u16	$s0, [$s0];
	ld_kernarg_width(4096)_u16	$s0, [$s0];
	ld_kernarg_width(8192)_u16	$s0, [$s0];
	ld_kernarg_width(16384)_u16	$s0, [$s0];
	ld_kernarg_width(32768)_u16	$s0, [$s0];
	ld_kernarg_width(65536)_u16	$s0, [$s0];
	ld_kernarg_width(131072)_u16	$s0, [$s0];
	ld_kernarg_width(262144)_u16	$s0, [$s0];
	ld_kernarg_width(524288)_u16	$s0, [$s0];
	ld_kernarg_width(1048576)_u16	$s0, [$s0];
	ld_kernarg_width(2097152)_u16	$s0, [$s0];
	ld_kernarg_width(4194304)_u16	$s0, [$s0];
	ld_kernarg_width(8388608)_u16	$s0, [$s0];
	ld_kernarg_width(16777216)_u16	$s0, [$s0];
	ld_kernarg_width(33554432)_u16	$s0, [$s0];
	ld_kernarg_width(67108864)_u16	$s0, [$s0];
	ld_kernarg_width(134217728)_u16	$s0, [$s0];
	ld_kernarg_width(268435456)_u16	$s0, [$s0];
	ld_kernarg_width(536870912)_u16	$s0, [$s0];
	ld_kernarg_width(1073741824)_u16	$s0, [$s0];
	ld_kernarg_width(2147483648)_u16	$s0, [$s0];
	ld_kernarg_width(WAVESIZE)_u16	$s0, [$s0];
	ld_kernarg_width(all)_u16	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_group_u16	$s0, [&GroupVar];
	// 
	ld_v2_group_u16	($s0,$s1), [&GroupVar];
	ld_v3_group_u16	($s0,$s1,$s2), [&GroupVar];
	ld_v4_group_u16	($s0,$s1,$s2,$s3), [&GroupVar];
	ld_group_u16	$s0, [$s0];
	ld_group_u16	$s0, [0];
	ld_group_align(2)_u16	$s0, [&GroupVar];
	ld_group_align(4)_u16	$s0, [&GroupVar];
	ld_group_align(8)_u16	$s0, [&GroupVar];
	ld_group_align(16)_u16	$s0, [&GroupVar];
	ld_group_align(32)_u16	$s0, [&GroupVar];
	ld_group_align(64)_u16	$s0, [&GroupVar];
	ld_group_align(128)_u16	$s0, [&GroupVar];
	ld_group_equiv(1)_u16	$s0, [&GroupVar];
	ld_group_equiv(2)_u16	$s0, [&GroupVar];
	ld_group_equiv(255)_u16	$s0, [&GroupVar];
	ld_group_width(2)_u16	$s0, [&GroupVar];
	ld_group_width(4)_u16	$s0, [&GroupVar];
	ld_group_width(8)_u16	$s0, [&GroupVar];
	ld_group_width(16)_u16	$s0, [&GroupVar];
	ld_group_width(32)_u16	$s0, [&GroupVar];
	ld_group_width(64)_u16	$s0, [&GroupVar];
	ld_group_width(128)_u16	$s0, [&GroupVar];
	ld_group_width(256)_u16	$s0, [&GroupVar];
	ld_group_width(512)_u16	$s0, [&GroupVar];
	ld_group_width(1024)_u16	$s0, [&GroupVar];
	ld_group_width(2048)_u16	$s0, [&GroupVar];
	ld_group_width(4096)_u16	$s0, [&GroupVar];
	ld_group_width(8192)_u16	$s0, [&GroupVar];
	ld_group_width(16384)_u16	$s0, [&GroupVar];
	ld_group_width(32768)_u16	$s0, [&GroupVar];
	ld_group_width(65536)_u16	$s0, [&GroupVar];
	ld_group_width(131072)_u16	$s0, [&GroupVar];
	ld_group_width(262144)_u16	$s0, [&GroupVar];
	ld_group_width(524288)_u16	$s0, [&GroupVar];
	ld_group_width(1048576)_u16	$s0, [&GroupVar];
	ld_group_width(2097152)_u16	$s0, [&GroupVar];
	ld_group_width(4194304)_u16	$s0, [&GroupVar];
	ld_group_width(8388608)_u16	$s0, [&GroupVar];
	ld_group_width(16777216)_u16	$s0, [&GroupVar];
	ld_group_width(33554432)_u16	$s0, [&GroupVar];
	ld_group_width(67108864)_u16	$s0, [&GroupVar];
	ld_group_width(134217728)_u16	$s0, [&GroupVar];
	ld_group_width(268435456)_u16	$s0, [&GroupVar];
	ld_group_width(536870912)_u16	$s0, [&GroupVar];
	ld_group_width(1073741824)_u16	$s0, [&GroupVar];
	ld_group_width(2147483648)_u16	$s0, [&GroupVar];
	ld_group_width(WAVESIZE)_u16	$s0, [&GroupVar];
	ld_group_width(all)_u16	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	ld_private_u16	$s0, [&PrivateVar];
	// 
	ld_v2_private_u16	($s0,$s1), [&PrivateVar];
	ld_v3_private_u16	($s0,$s1,$s2), [&PrivateVar];
	ld_v4_private_u16	($s0,$s1,$s2,$s3), [&PrivateVar];
	ld_private_u16	$s0, [$s0];
	ld_private_u16	$s0, [0];
	ld_private_align(2)_u16	$s0, [&PrivateVar];
	ld_private_align(4)_u16	$s0, [&PrivateVar];
	ld_private_align(8)_u16	$s0, [&PrivateVar];
	ld_private_align(16)_u16	$s0, [&PrivateVar];
	ld_private_align(32)_u16	$s0, [&PrivateVar];
	ld_private_align(64)_u16	$s0, [&PrivateVar];
	ld_private_align(128)_u16	$s0, [&PrivateVar];
	ld_private_equiv(1)_u16	$s0, [&PrivateVar];
	ld_private_equiv(2)_u16	$s0, [&PrivateVar];
	ld_private_equiv(255)_u16	$s0, [&PrivateVar];
	ld_private_width(2)_u16	$s0, [&PrivateVar];
	ld_private_width(4)_u16	$s0, [&PrivateVar];
	ld_private_width(8)_u16	$s0, [&PrivateVar];
	ld_private_width(16)_u16	$s0, [&PrivateVar];
	ld_private_width(32)_u16	$s0, [&PrivateVar];
	ld_private_width(64)_u16	$s0, [&PrivateVar];
	ld_private_width(128)_u16	$s0, [&PrivateVar];
	ld_private_width(256)_u16	$s0, [&PrivateVar];
	ld_private_width(512)_u16	$s0, [&PrivateVar];
	ld_private_width(1024)_u16	$s0, [&PrivateVar];
	ld_private_width(2048)_u16	$s0, [&PrivateVar];
	ld_private_width(4096)_u16	$s0, [&PrivateVar];
	ld_private_width(8192)_u16	$s0, [&PrivateVar];
	ld_private_width(16384)_u16	$s0, [&PrivateVar];
	ld_private_width(32768)_u16	$s0, [&PrivateVar];
	ld_private_width(65536)_u16	$s0, [&PrivateVar];
	ld_private_width(131072)_u16	$s0, [&PrivateVar];
	ld_private_width(262144)_u16	$s0, [&PrivateVar];
	ld_private_width(524288)_u16	$s0, [&PrivateVar];
	ld_private_width(1048576)_u16	$s0, [&PrivateVar];
	ld_private_width(2097152)_u16	$s0, [&PrivateVar];
	ld_private_width(4194304)_u16	$s0, [&PrivateVar];
	ld_private_width(8388608)_u16	$s0, [&PrivateVar];
	ld_private_width(16777216)_u16	$s0, [&PrivateVar];
	ld_private_width(33554432)_u16	$s0, [&PrivateVar];
	ld_private_width(67108864)_u16	$s0, [&PrivateVar];
	ld_private_width(134217728)_u16	$s0, [&PrivateVar];
	ld_private_width(268435456)_u16	$s0, [&PrivateVar];
	ld_private_width(536870912)_u16	$s0, [&PrivateVar];
	ld_private_width(1073741824)_u16	$s0, [&PrivateVar];
	ld_private_width(2147483648)_u16	$s0, [&PrivateVar];
	ld_private_width(WAVESIZE)_u16	$s0, [&PrivateVar];
	ld_private_width(all)_u16	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	ld_spill_u16	$s0, [$s0];
	// 
	ld_v2_spill_u16	($s0,$s1), [$s0];
	ld_v3_spill_u16	($s0,$s1,$s2), [$s0];
	ld_v4_spill_u16	($s0,$s1,$s2,$s3), [$s0];
	ld_spill_u16	$s0, [0];
	ld_spill_align(2)_u16	$s0, [$s0];
	ld_spill_align(4)_u16	$s0, [$s0];
	ld_spill_align(8)_u16	$s0, [$s0];
	ld_spill_align(16)_u16	$s0, [$s0];
	ld_spill_align(32)_u16	$s0, [$s0];
	ld_spill_align(64)_u16	$s0, [$s0];
	ld_spill_align(128)_u16	$s0, [$s0];
	ld_spill_equiv(1)_u16	$s0, [$s0];
	ld_spill_equiv(2)_u16	$s0, [$s0];
	ld_spill_equiv(255)_u16	$s0, [$s0];
	ld_spill_width(2)_u16	$s0, [$s0];
	ld_spill_width(4)_u16	$s0, [$s0];
	ld_spill_width(8)_u16	$s0, [$s0];
	ld_spill_width(16)_u16	$s0, [$s0];
	ld_spill_width(32)_u16	$s0, [$s0];
	ld_spill_width(64)_u16	$s0, [$s0];
	ld_spill_width(128)_u16	$s0, [$s0];
	ld_spill_width(256)_u16	$s0, [$s0];
	ld_spill_width(512)_u16	$s0, [$s0];
	ld_spill_width(1024)_u16	$s0, [$s0];
	ld_spill_width(2048)_u16	$s0, [$s0];
	ld_spill_width(4096)_u16	$s0, [$s0];
	ld_spill_width(8192)_u16	$s0, [$s0];
	ld_spill_width(16384)_u16	$s0, [$s0];
	ld_spill_width(32768)_u16	$s0, [$s0];
	ld_spill_width(65536)_u16	$s0, [$s0];
	ld_spill_width(131072)_u16	$s0, [$s0];
	ld_spill_width(262144)_u16	$s0, [$s0];
	ld_spill_width(524288)_u16	$s0, [$s0];
	ld_spill_width(1048576)_u16	$s0, [$s0];
	ld_spill_width(2097152)_u16	$s0, [$s0];
	ld_spill_width(4194304)_u16	$s0, [$s0];
	ld_spill_width(8388608)_u16	$s0, [$s0];
	ld_spill_width(16777216)_u16	$s0, [$s0];
	ld_spill_width(33554432)_u16	$s0, [$s0];
	ld_spill_width(67108864)_u16	$s0, [$s0];
	ld_spill_width(134217728)_u16	$s0, [$s0];
	ld_spill_width(268435456)_u16	$s0, [$s0];
	ld_spill_width(536870912)_u16	$s0, [$s0];
	ld_spill_width(1073741824)_u16	$s0, [$s0];
	ld_spill_width(2147483648)_u16	$s0, [$s0];
	ld_spill_width(WAVESIZE)_u16	$s0, [$s0];
	ld_spill_width(all)_u16	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_u16	$s0, [$s0];
	// 
	ld_v2_arg_u16	($s0,$s1), [$s0];
	ld_v3_arg_u16	($s0,$s1,$s2), [$s0];
	ld_v4_arg_u16	($s0,$s1,$s2,$s3), [$s0];
	ld_arg_u16	$s0, [0];
	ld_arg_align(2)_u16	$s0, [$s0];
	ld_arg_align(4)_u16	$s0, [$s0];
	ld_arg_align(8)_u16	$s0, [$s0];
	ld_arg_align(16)_u16	$s0, [$s0];
	ld_arg_align(32)_u16	$s0, [$s0];
	ld_arg_align(64)_u16	$s0, [$s0];
	ld_arg_align(128)_u16	$s0, [$s0];
	ld_arg_equiv(1)_u16	$s0, [$s0];
	ld_arg_equiv(2)_u16	$s0, [$s0];
	ld_arg_equiv(255)_u16	$s0, [$s0];
	ld_arg_width(2)_u16	$s0, [$s0];
	ld_arg_width(4)_u16	$s0, [$s0];
	ld_arg_width(8)_u16	$s0, [$s0];
	ld_arg_width(16)_u16	$s0, [$s0];
	ld_arg_width(32)_u16	$s0, [$s0];
	ld_arg_width(64)_u16	$s0, [$s0];
	ld_arg_width(128)_u16	$s0, [$s0];
	ld_arg_width(256)_u16	$s0, [$s0];
	ld_arg_width(512)_u16	$s0, [$s0];
	ld_arg_width(1024)_u16	$s0, [$s0];
	ld_arg_width(2048)_u16	$s0, [$s0];
	ld_arg_width(4096)_u16	$s0, [$s0];
	ld_arg_width(8192)_u16	$s0, [$s0];
	ld_arg_width(16384)_u16	$s0, [$s0];
	ld_arg_width(32768)_u16	$s0, [$s0];
	ld_arg_width(65536)_u16	$s0, [$s0];
	ld_arg_width(131072)_u16	$s0, [$s0];
	ld_arg_width(262144)_u16	$s0, [$s0];
	ld_arg_width(524288)_u16	$s0, [$s0];
	ld_arg_width(1048576)_u16	$s0, [$s0];
	ld_arg_width(2097152)_u16	$s0, [$s0];
	ld_arg_width(4194304)_u16	$s0, [$s0];
	ld_arg_width(8388608)_u16	$s0, [$s0];
	ld_arg_width(16777216)_u16	$s0, [$s0];
	ld_arg_width(33554432)_u16	$s0, [$s0];
	ld_arg_width(67108864)_u16	$s0, [$s0];
	ld_arg_width(134217728)_u16	$s0, [$s0];
	ld_arg_width(268435456)_u16	$s0, [$s0];
	ld_arg_width(536870912)_u16	$s0, [$s0];
	ld_arg_width(1073741824)_u16	$s0, [$s0];
	ld_arg_width(2147483648)_u16	$s0, [$s0];
	ld_arg_width(WAVESIZE)_u16	$s0, [$s0];
	ld_arg_width(all)_u16	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_u32	$s0, [$s0];
	// 
	ld_const_u32	$s0, [$s0];
	ld_v2_u32	($s0,$s1), [$s0];
	ld_v3_u32	($s0,$s1,$s2), [$s0];
	ld_v4_u32	($s0,$s1,$s2,$s3), [$s0];
	ld_u32	$s0, [0];
	ld_align(2)_u32	$s0, [$s0];
	ld_align(4)_u32	$s0, [$s0];
	ld_align(8)_u32	$s0, [$s0];
	ld_align(16)_u32	$s0, [$s0];
	ld_align(32)_u32	$s0, [$s0];
	ld_align(64)_u32	$s0, [$s0];
	ld_align(128)_u32	$s0, [$s0];
	ld_equiv(1)_u32	$s0, [$s0];
	ld_equiv(2)_u32	$s0, [$s0];
	ld_equiv(255)_u32	$s0, [$s0];
	ld_width(2)_u32	$s0, [$s0];
	ld_width(4)_u32	$s0, [$s0];
	ld_width(8)_u32	$s0, [$s0];
	ld_width(16)_u32	$s0, [$s0];
	ld_width(32)_u32	$s0, [$s0];
	ld_width(64)_u32	$s0, [$s0];
	ld_width(128)_u32	$s0, [$s0];
	ld_width(256)_u32	$s0, [$s0];
	ld_width(512)_u32	$s0, [$s0];
	ld_width(1024)_u32	$s0, [$s0];
	ld_width(2048)_u32	$s0, [$s0];
	ld_width(4096)_u32	$s0, [$s0];
	ld_width(8192)_u32	$s0, [$s0];
	ld_width(16384)_u32	$s0, [$s0];
	ld_width(32768)_u32	$s0, [$s0];
	ld_width(65536)_u32	$s0, [$s0];
	ld_width(131072)_u32	$s0, [$s0];
	ld_width(262144)_u32	$s0, [$s0];
	ld_width(524288)_u32	$s0, [$s0];
	ld_width(1048576)_u32	$s0, [$s0];
	ld_width(2097152)_u32	$s0, [$s0];
	ld_width(4194304)_u32	$s0, [$s0];
	ld_width(8388608)_u32	$s0, [$s0];
	ld_width(16777216)_u32	$s0, [$s0];
	ld_width(33554432)_u32	$s0, [$s0];
	ld_width(67108864)_u32	$s0, [$s0];
	ld_width(134217728)_u32	$s0, [$s0];
	ld_width(268435456)_u32	$s0, [$s0];
	ld_width(536870912)_u32	$s0, [$s0];
	ld_width(1073741824)_u32	$s0, [$s0];
	ld_width(2147483648)_u32	$s0, [$s0];
	ld_width(WAVESIZE)_u32	$s0, [$s0];
	ld_width(all)_u32	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_global_u32	$s0, [&GlobalVar];
	// 
	ld_global_const_u32	$s0, [&GlobalVar];
	ld_v2_global_u32	($s0,$s1), [&GlobalVar];
	ld_v3_global_u32	($s0,$s1,$s2), [&GlobalVar];
	ld_v4_global_u32	($s0,$s1,$s2,$s3), [&GlobalVar];
	ld_global_u32	$s0, [$s0];
	ld_global_u32	$s0, [0];
	ld_global_align(2)_u32	$s0, [&GlobalVar];
	ld_global_align(4)_u32	$s0, [&GlobalVar];
	ld_global_align(8)_u32	$s0, [&GlobalVar];
	ld_global_align(16)_u32	$s0, [&GlobalVar];
	ld_global_align(32)_u32	$s0, [&GlobalVar];
	ld_global_align(64)_u32	$s0, [&GlobalVar];
	ld_global_align(128)_u32	$s0, [&GlobalVar];
	ld_global_equiv(1)_u32	$s0, [&GlobalVar];
	ld_global_equiv(2)_u32	$s0, [&GlobalVar];
	ld_global_equiv(255)_u32	$s0, [&GlobalVar];
	ld_global_width(2)_u32	$s0, [&GlobalVar];
	ld_global_width(4)_u32	$s0, [&GlobalVar];
	ld_global_width(8)_u32	$s0, [&GlobalVar];
	ld_global_width(16)_u32	$s0, [&GlobalVar];
	ld_global_width(32)_u32	$s0, [&GlobalVar];
	ld_global_width(64)_u32	$s0, [&GlobalVar];
	ld_global_width(128)_u32	$s0, [&GlobalVar];
	ld_global_width(256)_u32	$s0, [&GlobalVar];
	ld_global_width(512)_u32	$s0, [&GlobalVar];
	ld_global_width(1024)_u32	$s0, [&GlobalVar];
	ld_global_width(2048)_u32	$s0, [&GlobalVar];
	ld_global_width(4096)_u32	$s0, [&GlobalVar];
	ld_global_width(8192)_u32	$s0, [&GlobalVar];
	ld_global_width(16384)_u32	$s0, [&GlobalVar];
	ld_global_width(32768)_u32	$s0, [&GlobalVar];
	ld_global_width(65536)_u32	$s0, [&GlobalVar];
	ld_global_width(131072)_u32	$s0, [&GlobalVar];
	ld_global_width(262144)_u32	$s0, [&GlobalVar];
	ld_global_width(524288)_u32	$s0, [&GlobalVar];
	ld_global_width(1048576)_u32	$s0, [&GlobalVar];
	ld_global_width(2097152)_u32	$s0, [&GlobalVar];
	ld_global_width(4194304)_u32	$s0, [&GlobalVar];
	ld_global_width(8388608)_u32	$s0, [&GlobalVar];
	ld_global_width(16777216)_u32	$s0, [&GlobalVar];
	ld_global_width(33554432)_u32	$s0, [&GlobalVar];
	ld_global_width(67108864)_u32	$s0, [&GlobalVar];
	ld_global_width(134217728)_u32	$s0, [&GlobalVar];
	ld_global_width(268435456)_u32	$s0, [&GlobalVar];
	ld_global_width(536870912)_u32	$s0, [&GlobalVar];
	ld_global_width(1073741824)_u32	$s0, [&GlobalVar];
	ld_global_width(2147483648)_u32	$s0, [&GlobalVar];
	ld_global_width(WAVESIZE)_u32	$s0, [&GlobalVar];
	ld_global_width(all)_u32	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	ld_readonly_u32	$s0, [&ReadonlyVar];
	// 
	ld_readonly_const_u32	$s0, [&ReadonlyVar];
	ld_v2_readonly_u32	($s0,$s1), [&ReadonlyVar];
	ld_v3_readonly_u32	($s0,$s1,$s2), [&ReadonlyVar];
	ld_v4_readonly_u32	($s0,$s1,$s2,$s3), [&ReadonlyVar];
	ld_readonly_u32	$s0, [$s0];
	ld_readonly_u32	$s0, [0];
	ld_readonly_align(2)_u32	$s0, [&ReadonlyVar];
	ld_readonly_align(4)_u32	$s0, [&ReadonlyVar];
	ld_readonly_align(8)_u32	$s0, [&ReadonlyVar];
	ld_readonly_align(16)_u32	$s0, [&ReadonlyVar];
	ld_readonly_align(32)_u32	$s0, [&ReadonlyVar];
	ld_readonly_align(64)_u32	$s0, [&ReadonlyVar];
	ld_readonly_align(128)_u32	$s0, [&ReadonlyVar];
	ld_readonly_equiv(1)_u32	$s0, [&ReadonlyVar];
	ld_readonly_equiv(2)_u32	$s0, [&ReadonlyVar];
	ld_readonly_equiv(255)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(2)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(4)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(8)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(16)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(32)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(64)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(128)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(256)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(512)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(1024)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(2048)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(4096)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(8192)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(16384)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(32768)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(65536)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(131072)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(262144)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(524288)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(1048576)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(2097152)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(4194304)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(8388608)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(16777216)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(33554432)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(67108864)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(134217728)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(268435456)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(536870912)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(1073741824)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(2147483648)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(WAVESIZE)_u32	$s0, [&ReadonlyVar];
	ld_readonly_width(all)_u32	$s0, [&ReadonlyVar];
	// 
	// Next sample
	// 
	ld_kernarg_u32	$s0, [$s0];
	// 
	ld_kernarg_const_u32	$s0, [$s0];
	ld_v2_kernarg_u32	($s0,$s1), [$s0];
	ld_v3_kernarg_u32	($s0,$s1,$s2), [$s0];
	ld_v4_kernarg_u32	($s0,$s1,$s2,$s3), [$s0];
	ld_kernarg_u32	$s0, [0];
	ld_kernarg_align(2)_u32	$s0, [$s0];
	ld_kernarg_align(4)_u32	$s0, [$s0];
	ld_kernarg_align(8)_u32	$s0, [$s0];
	ld_kernarg_align(16)_u32	$s0, [$s0];
	ld_kernarg_align(32)_u32	$s0, [$s0];
	ld_kernarg_align(64)_u32	$s0, [$s0];
	ld_kernarg_align(128)_u32	$s0, [$s0];
	ld_kernarg_equiv(1)_u32	$s0, [$s0];
	ld_kernarg_equiv(2)_u32	$s0, [$s0];
	ld_kernarg_equiv(255)_u32	$s0, [$s0];
	ld_kernarg_width(2)_u32	$s0, [$s0];
	ld_kernarg_width(4)_u32	$s0, [$s0];
	ld_kernarg_width(8)_u32	$s0, [$s0];
	ld_kernarg_width(16)_u32	$s0, [$s0];
	ld_kernarg_width(32)_u32	$s0, [$s0];
	ld_kernarg_width(64)_u32	$s0, [$s0];
	ld_kernarg_width(128)_u32	$s0, [$s0];
	ld_kernarg_width(256)_u32	$s0, [$s0];
	ld_kernarg_width(512)_u32	$s0, [$s0];
	ld_kernarg_width(1024)_u32	$s0, [$s0];
	ld_kernarg_width(2048)_u32	$s0, [$s0];
	ld_kernarg_width(4096)_u32	$s0, [$s0];
	ld_kernarg_width(8192)_u32	$s0, [$s0];
	ld_kernarg_width(16384)_u32	$s0, [$s0];
	ld_kernarg_width(32768)_u32	$s0, [$s0];
	ld_kernarg_width(65536)_u32	$s0, [$s0];
	ld_kernarg_width(131072)_u32	$s0, [$s0];
	ld_kernarg_width(262144)_u32	$s0, [$s0];
	ld_kernarg_width(524288)_u32	$s0, [$s0];
	ld_kernarg_width(1048576)_u32	$s0, [$s0];
	ld_kernarg_width(2097152)_u32	$s0, [$s0];
	ld_kernarg_width(4194304)_u32	$s0, [$s0];
	ld_kernarg_width(8388608)_u32	$s0, [$s0];
	ld_kernarg_width(16777216)_u32	$s0, [$s0];
	ld_kernarg_width(33554432)_u32	$s0, [$s0];
	ld_kernarg_width(67108864)_u32	$s0, [$s0];
	ld_kernarg_width(134217728)_u32	$s0, [$s0];
	ld_kernarg_width(268435456)_u32	$s0, [$s0];
	ld_kernarg_width(536870912)_u32	$s0, [$s0];
	ld_kernarg_width(1073741824)_u32	$s0, [$s0];
	ld_kernarg_width(2147483648)_u32	$s0, [$s0];
	ld_kernarg_width(WAVESIZE)_u32	$s0, [$s0];
	ld_kernarg_width(all)_u32	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_group_u32	$s0, [&GroupVar];
	// 
	ld_v2_group_u32	($s0,$s1), [&GroupVar];
	ld_v3_group_u32	($s0,$s1,$s2), [&GroupVar];
	ld_v4_group_u32	($s0,$s1,$s2,$s3), [&GroupVar];
	ld_group_u32	$s0, [$s0];
	ld_group_u32	$s0, [0];
	ld_group_align(2)_u32	$s0, [&GroupVar];
	ld_group_align(4)_u32	$s0, [&GroupVar];
	ld_group_align(8)_u32	$s0, [&GroupVar];
	ld_group_align(16)_u32	$s0, [&GroupVar];
	ld_group_align(32)_u32	$s0, [&GroupVar];
	ld_group_align(64)_u32	$s0, [&GroupVar];
	ld_group_align(128)_u32	$s0, [&GroupVar];
	ld_group_equiv(1)_u32	$s0, [&GroupVar];
	ld_group_equiv(2)_u32	$s0, [&GroupVar];
	ld_group_equiv(255)_u32	$s0, [&GroupVar];
	ld_group_width(2)_u32	$s0, [&GroupVar];
	ld_group_width(4)_u32	$s0, [&GroupVar];
	ld_group_width(8)_u32	$s0, [&GroupVar];
	ld_group_width(16)_u32	$s0, [&GroupVar];
	ld_group_width(32)_u32	$s0, [&GroupVar];
	ld_group_width(64)_u32	$s0, [&GroupVar];
	ld_group_width(128)_u32	$s0, [&GroupVar];
	ld_group_width(256)_u32	$s0, [&GroupVar];
	ld_group_width(512)_u32	$s0, [&GroupVar];
	ld_group_width(1024)_u32	$s0, [&GroupVar];
	ld_group_width(2048)_u32	$s0, [&GroupVar];
	ld_group_width(4096)_u32	$s0, [&GroupVar];
	ld_group_width(8192)_u32	$s0, [&GroupVar];
	ld_group_width(16384)_u32	$s0, [&GroupVar];
	ld_group_width(32768)_u32	$s0, [&GroupVar];
	ld_group_width(65536)_u32	$s0, [&GroupVar];
	ld_group_width(131072)_u32	$s0, [&GroupVar];
	ld_group_width(262144)_u32	$s0, [&GroupVar];
	ld_group_width(524288)_u32	$s0, [&GroupVar];
	ld_group_width(1048576)_u32	$s0, [&GroupVar];
	ld_group_width(2097152)_u32	$s0, [&GroupVar];
	ld_group_width(4194304)_u32	$s0, [&GroupVar];
	ld_group_width(8388608)_u32	$s0, [&GroupVar];
	ld_group_width(16777216)_u32	$s0, [&GroupVar];
	ld_group_width(33554432)_u32	$s0, [&GroupVar];
	ld_group_width(67108864)_u32	$s0, [&GroupVar];
	ld_group_width(134217728)_u32	$s0, [&GroupVar];
	ld_group_width(268435456)_u32	$s0, [&GroupVar];
	ld_group_width(536870912)_u32	$s0, [&GroupVar];
	ld_group_width(1073741824)_u32	$s0, [&GroupVar];
	ld_group_width(2147483648)_u32	$s0, [&GroupVar];
	ld_group_width(WAVESIZE)_u32	$s0, [&GroupVar];
	ld_group_width(all)_u32	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	ld_private_u32	$s0, [&PrivateVar];
	// 
	ld_v2_private_u32	($s0,$s1), [&PrivateVar];
	ld_v3_private_u32	($s0,$s1,$s2), [&PrivateVar];
	ld_v4_private_u32	($s0,$s1,$s2,$s3), [&PrivateVar];
	ld_private_u32	$s0, [$s0];
	ld_private_u32	$s0, [0];
	ld_private_align(2)_u32	$s0, [&PrivateVar];
	ld_private_align(4)_u32	$s0, [&PrivateVar];
	ld_private_align(8)_u32	$s0, [&PrivateVar];
	ld_private_align(16)_u32	$s0, [&PrivateVar];
	ld_private_align(32)_u32	$s0, [&PrivateVar];
	ld_private_align(64)_u32	$s0, [&PrivateVar];
	ld_private_align(128)_u32	$s0, [&PrivateVar];
	ld_private_equiv(1)_u32	$s0, [&PrivateVar];
	ld_private_equiv(2)_u32	$s0, [&PrivateVar];
	ld_private_equiv(255)_u32	$s0, [&PrivateVar];
	ld_private_width(2)_u32	$s0, [&PrivateVar];
	ld_private_width(4)_u32	$s0, [&PrivateVar];
	ld_private_width(8)_u32	$s0, [&PrivateVar];
	ld_private_width(16)_u32	$s0, [&PrivateVar];
	ld_private_width(32)_u32	$s0, [&PrivateVar];
	ld_private_width(64)_u32	$s0, [&PrivateVar];
	ld_private_width(128)_u32	$s0, [&PrivateVar];
	ld_private_width(256)_u32	$s0, [&PrivateVar];
	ld_private_width(512)_u32	$s0, [&PrivateVar];
	ld_private_width(1024)_u32	$s0, [&PrivateVar];
	ld_private_width(2048)_u32	$s0, [&PrivateVar];
	ld_private_width(4096)_u32	$s0, [&PrivateVar];
	ld_private_width(8192)_u32	$s0, [&PrivateVar];
	ld_private_width(16384)_u32	$s0, [&PrivateVar];
	ld_private_width(32768)_u32	$s0, [&PrivateVar];
	ld_private_width(65536)_u32	$s0, [&PrivateVar];
	ld_private_width(131072)_u32	$s0, [&PrivateVar];
	ld_private_width(262144)_u32	$s0, [&PrivateVar];
	ld_private_width(524288)_u32	$s0, [&PrivateVar];
	ld_private_width(1048576)_u32	$s0, [&PrivateVar];
	ld_private_width(2097152)_u32	$s0, [&PrivateVar];
	ld_private_width(4194304)_u32	$s0, [&PrivateVar];
	ld_private_width(8388608)_u32	$s0, [&PrivateVar];
	ld_private_width(16777216)_u32	$s0, [&PrivateVar];
	ld_private_width(33554432)_u32	$s0, [&PrivateVar];
	ld_private_width(67108864)_u32	$s0, [&PrivateVar];
	ld_private_width(134217728)_u32	$s0, [&PrivateVar];
	ld_private_width(268435456)_u32	$s0, [&PrivateVar];
	ld_private_width(536870912)_u32	$s0, [&PrivateVar];
	ld_private_width(1073741824)_u32	$s0, [&PrivateVar];
	ld_private_width(2147483648)_u32	$s0, [&PrivateVar];
	ld_private_width(WAVESIZE)_u32	$s0, [&PrivateVar];
	ld_private_width(all)_u32	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	ld_spill_u32	$s0, [$s0];
	// 
	ld_v2_spill_u32	($s0,$s1), [$s0];
	ld_v3_spill_u32	($s0,$s1,$s2), [$s0];
	ld_v4_spill_u32	($s0,$s1,$s2,$s3), [$s0];
	ld_spill_u32	$s0, [0];
	ld_spill_align(2)_u32	$s0, [$s0];
	ld_spill_align(4)_u32	$s0, [$s0];
	ld_spill_align(8)_u32	$s0, [$s0];
	ld_spill_align(16)_u32	$s0, [$s0];
	ld_spill_align(32)_u32	$s0, [$s0];
	ld_spill_align(64)_u32	$s0, [$s0];
	ld_spill_align(128)_u32	$s0, [$s0];
	ld_spill_equiv(1)_u32	$s0, [$s0];
	ld_spill_equiv(2)_u32	$s0, [$s0];
	ld_spill_equiv(255)_u32	$s0, [$s0];
	ld_spill_width(2)_u32	$s0, [$s0];
	ld_spill_width(4)_u32	$s0, [$s0];
	ld_spill_width(8)_u32	$s0, [$s0];
	ld_spill_width(16)_u32	$s0, [$s0];
	ld_spill_width(32)_u32	$s0, [$s0];
	ld_spill_width(64)_u32	$s0, [$s0];
	ld_spill_width(128)_u32	$s0, [$s0];
	ld_spill_width(256)_u32	$s0, [$s0];
	ld_spill_width(512)_u32	$s0, [$s0];
	ld_spill_width(1024)_u32	$s0, [$s0];
	ld_spill_width(2048)_u32	$s0, [$s0];
	ld_spill_width(4096)_u32	$s0, [$s0];
	ld_spill_width(8192)_u32	$s0, [$s0];
	ld_spill_width(16384)_u32	$s0, [$s0];
	ld_spill_width(32768)_u32	$s0, [$s0];
	ld_spill_width(65536)_u32	$s0, [$s0];
	ld_spill_width(131072)_u32	$s0, [$s0];
	ld_spill_width(262144)_u32	$s0, [$s0];
	ld_spill_width(524288)_u32	$s0, [$s0];
	ld_spill_width(1048576)_u32	$s0, [$s0];
	ld_spill_width(2097152)_u32	$s0, [$s0];
	ld_spill_width(4194304)_u32	$s0, [$s0];
	ld_spill_width(8388608)_u32	$s0, [$s0];
	ld_spill_width(16777216)_u32	$s0, [$s0];
	ld_spill_width(33554432)_u32	$s0, [$s0];
	ld_spill_width(67108864)_u32	$s0, [$s0];
	ld_spill_width(134217728)_u32	$s0, [$s0];
	ld_spill_width(268435456)_u32	$s0, [$s0];
	ld_spill_width(536870912)_u32	$s0, [$s0];
	ld_spill_width(1073741824)_u32	$s0, [$s0];
	ld_spill_width(2147483648)_u32	$s0, [$s0];
	ld_spill_width(WAVESIZE)_u32	$s0, [$s0];
	ld_spill_width(all)_u32	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_u32	$s0, [$s0];
	// 
	ld_v2_arg_u32	($s0,$s1), [$s0];
	ld_v3_arg_u32	($s0,$s1,$s2), [$s0];
	ld_v4_arg_u32	($s0,$s1,$s2,$s3), [$s0];
	ld_arg_u32	$s0, [0];
	ld_arg_align(2)_u32	$s0, [$s0];
	ld_arg_align(4)_u32	$s0, [$s0];
	ld_arg_align(8)_u32	$s0, [$s0];
	ld_arg_align(16)_u32	$s0, [$s0];
	ld_arg_align(32)_u32	$s0, [$s0];
	ld_arg_align(64)_u32	$s0, [$s0];
	ld_arg_align(128)_u32	$s0, [$s0];
	ld_arg_equiv(1)_u32	$s0, [$s0];
	ld_arg_equiv(2)_u32	$s0, [$s0];
	ld_arg_equiv(255)_u32	$s0, [$s0];
	ld_arg_width(2)_u32	$s0, [$s0];
	ld_arg_width(4)_u32	$s0, [$s0];
	ld_arg_width(8)_u32	$s0, [$s0];
	ld_arg_width(16)_u32	$s0, [$s0];
	ld_arg_width(32)_u32	$s0, [$s0];
	ld_arg_width(64)_u32	$s0, [$s0];
	ld_arg_width(128)_u32	$s0, [$s0];
	ld_arg_width(256)_u32	$s0, [$s0];
	ld_arg_width(512)_u32	$s0, [$s0];
	ld_arg_width(1024)_u32	$s0, [$s0];
	ld_arg_width(2048)_u32	$s0, [$s0];
	ld_arg_width(4096)_u32	$s0, [$s0];
	ld_arg_width(8192)_u32	$s0, [$s0];
	ld_arg_width(16384)_u32	$s0, [$s0];
	ld_arg_width(32768)_u32	$s0, [$s0];
	ld_arg_width(65536)_u32	$s0, [$s0];
	ld_arg_width(131072)_u32	$s0, [$s0];
	ld_arg_width(262144)_u32	$s0, [$s0];
	ld_arg_width(524288)_u32	$s0, [$s0];
	ld_arg_width(1048576)_u32	$s0, [$s0];
	ld_arg_width(2097152)_u32	$s0, [$s0];
	ld_arg_width(4194304)_u32	$s0, [$s0];
	ld_arg_width(8388608)_u32	$s0, [$s0];
	ld_arg_width(16777216)_u32	$s0, [$s0];
	ld_arg_width(33554432)_u32	$s0, [$s0];
	ld_arg_width(67108864)_u32	$s0, [$s0];
	ld_arg_width(134217728)_u32	$s0, [$s0];
	ld_arg_width(268435456)_u32	$s0, [$s0];
	ld_arg_width(536870912)_u32	$s0, [$s0];
	ld_arg_width(1073741824)_u32	$s0, [$s0];
	ld_arg_width(2147483648)_u32	$s0, [$s0];
	ld_arg_width(WAVESIZE)_u32	$s0, [$s0];
	ld_arg_width(all)_u32	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_u64	$d0, [$s0];
	// 
	ld_const_u64	$d0, [$s0];
	ld_v2_u64	($d0,$d1), [$s0];
	ld_v3_u64	($d0,$d1,$d2), [$s0];
	ld_v4_u64	($d0,$d1,$d2,$d3), [$s0];
	ld_u64	$d0, [0];
	ld_align(2)_u64	$d0, [$s0];
	ld_align(4)_u64	$d0, [$s0];
	ld_align(8)_u64	$d0, [$s0];
	ld_align(16)_u64	$d0, [$s0];
	ld_align(32)_u64	$d0, [$s0];
	ld_align(64)_u64	$d0, [$s0];
	ld_align(128)_u64	$d0, [$s0];
	ld_equiv(1)_u64	$d0, [$s0];
	ld_equiv(2)_u64	$d0, [$s0];
	ld_equiv(255)_u64	$d0, [$s0];
	ld_width(2)_u64	$d0, [$s0];
	ld_width(4)_u64	$d0, [$s0];
	ld_width(8)_u64	$d0, [$s0];
	ld_width(16)_u64	$d0, [$s0];
	ld_width(32)_u64	$d0, [$s0];
	ld_width(64)_u64	$d0, [$s0];
	ld_width(128)_u64	$d0, [$s0];
	ld_width(256)_u64	$d0, [$s0];
	ld_width(512)_u64	$d0, [$s0];
	ld_width(1024)_u64	$d0, [$s0];
	ld_width(2048)_u64	$d0, [$s0];
	ld_width(4096)_u64	$d0, [$s0];
	ld_width(8192)_u64	$d0, [$s0];
	ld_width(16384)_u64	$d0, [$s0];
	ld_width(32768)_u64	$d0, [$s0];
	ld_width(65536)_u64	$d0, [$s0];
	ld_width(131072)_u64	$d0, [$s0];
	ld_width(262144)_u64	$d0, [$s0];
	ld_width(524288)_u64	$d0, [$s0];
	ld_width(1048576)_u64	$d0, [$s0];
	ld_width(2097152)_u64	$d0, [$s0];
	ld_width(4194304)_u64	$d0, [$s0];
	ld_width(8388608)_u64	$d0, [$s0];
	ld_width(16777216)_u64	$d0, [$s0];
	ld_width(33554432)_u64	$d0, [$s0];
	ld_width(67108864)_u64	$d0, [$s0];
	ld_width(134217728)_u64	$d0, [$s0];
	ld_width(268435456)_u64	$d0, [$s0];
	ld_width(536870912)_u64	$d0, [$s0];
	ld_width(1073741824)_u64	$d0, [$s0];
	ld_width(2147483648)_u64	$d0, [$s0];
	ld_width(WAVESIZE)_u64	$d0, [$s0];
	ld_width(all)_u64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_global_u64	$d0, [&GlobalVar];
	// 
	ld_global_const_u64	$d0, [&GlobalVar];
	ld_v2_global_u64	($d0,$d1), [&GlobalVar];
	ld_v3_global_u64	($d0,$d1,$d2), [&GlobalVar];
	ld_v4_global_u64	($d0,$d1,$d2,$d3), [&GlobalVar];
	ld_global_u64	$d0, [$s0];
	ld_global_u64	$d0, [0];
	ld_global_align(2)_u64	$d0, [&GlobalVar];
	ld_global_align(4)_u64	$d0, [&GlobalVar];
	ld_global_align(8)_u64	$d0, [&GlobalVar];
	ld_global_align(16)_u64	$d0, [&GlobalVar];
	ld_global_align(32)_u64	$d0, [&GlobalVar];
	ld_global_align(64)_u64	$d0, [&GlobalVar];
	ld_global_align(128)_u64	$d0, [&GlobalVar];
	ld_global_equiv(1)_u64	$d0, [&GlobalVar];
	ld_global_equiv(2)_u64	$d0, [&GlobalVar];
	ld_global_equiv(255)_u64	$d0, [&GlobalVar];
	ld_global_width(2)_u64	$d0, [&GlobalVar];
	ld_global_width(4)_u64	$d0, [&GlobalVar];
	ld_global_width(8)_u64	$d0, [&GlobalVar];
	ld_global_width(16)_u64	$d0, [&GlobalVar];
	ld_global_width(32)_u64	$d0, [&GlobalVar];
	ld_global_width(64)_u64	$d0, [&GlobalVar];
	ld_global_width(128)_u64	$d0, [&GlobalVar];
	ld_global_width(256)_u64	$d0, [&GlobalVar];
	ld_global_width(512)_u64	$d0, [&GlobalVar];
	ld_global_width(1024)_u64	$d0, [&GlobalVar];
	ld_global_width(2048)_u64	$d0, [&GlobalVar];
	ld_global_width(4096)_u64	$d0, [&GlobalVar];
	ld_global_width(8192)_u64	$d0, [&GlobalVar];
	ld_global_width(16384)_u64	$d0, [&GlobalVar];
	ld_global_width(32768)_u64	$d0, [&GlobalVar];
	ld_global_width(65536)_u64	$d0, [&GlobalVar];
	ld_global_width(131072)_u64	$d0, [&GlobalVar];
	ld_global_width(262144)_u64	$d0, [&GlobalVar];
	ld_global_width(524288)_u64	$d0, [&GlobalVar];
	ld_global_width(1048576)_u64	$d0, [&GlobalVar];
	ld_global_width(2097152)_u64	$d0, [&GlobalVar];
	ld_global_width(4194304)_u64	$d0, [&GlobalVar];
	ld_global_width(8388608)_u64	$d0, [&GlobalVar];
	ld_global_width(16777216)_u64	$d0, [&GlobalVar];
	ld_global_width(33554432)_u64	$d0, [&GlobalVar];
	ld_global_width(67108864)_u64	$d0, [&GlobalVar];
	ld_global_width(134217728)_u64	$d0, [&GlobalVar];
	ld_global_width(268435456)_u64	$d0, [&GlobalVar];
	ld_global_width(536870912)_u64	$d0, [&GlobalVar];
	ld_global_width(1073741824)_u64	$d0, [&GlobalVar];
	ld_global_width(2147483648)_u64	$d0, [&GlobalVar];
	ld_global_width(WAVESIZE)_u64	$d0, [&GlobalVar];
	ld_global_width(all)_u64	$d0, [&GlobalVar];
	// 
	// Next sample
	// 
	ld_readonly_u64	$d0, [&ReadonlyVar];
	// 
	ld_readonly_const_u64	$d0, [&ReadonlyVar];
	ld_v2_readonly_u64	($d0,$d1), [&ReadonlyVar];
	ld_v3_readonly_u64	($d0,$d1,$d2), [&ReadonlyVar];
	ld_v4_readonly_u64	($d0,$d1,$d2,$d3), [&ReadonlyVar];
	ld_readonly_u64	$d0, [$s0];
	ld_readonly_u64	$d0, [0];
	ld_readonly_align(2)_u64	$d0, [&ReadonlyVar];
	ld_readonly_align(4)_u64	$d0, [&ReadonlyVar];
	ld_readonly_align(8)_u64	$d0, [&ReadonlyVar];
	ld_readonly_align(16)_u64	$d0, [&ReadonlyVar];
	ld_readonly_align(32)_u64	$d0, [&ReadonlyVar];
	ld_readonly_align(64)_u64	$d0, [&ReadonlyVar];
	ld_readonly_align(128)_u64	$d0, [&ReadonlyVar];
	ld_readonly_equiv(1)_u64	$d0, [&ReadonlyVar];
	ld_readonly_equiv(2)_u64	$d0, [&ReadonlyVar];
	ld_readonly_equiv(255)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(2)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(4)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(8)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(16)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(32)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(64)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(128)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(256)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(512)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(1024)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(2048)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(4096)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(8192)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(16384)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(32768)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(65536)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(131072)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(262144)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(524288)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(1048576)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(2097152)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(4194304)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(8388608)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(16777216)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(33554432)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(67108864)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(134217728)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(268435456)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(536870912)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(1073741824)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(2147483648)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(WAVESIZE)_u64	$d0, [&ReadonlyVar];
	ld_readonly_width(all)_u64	$d0, [&ReadonlyVar];
	// 
	// Next sample
	// 
	ld_kernarg_u64	$d0, [$s0];
	// 
	ld_kernarg_const_u64	$d0, [$s0];
	ld_v2_kernarg_u64	($d0,$d1), [$s0];
	ld_v3_kernarg_u64	($d0,$d1,$d2), [$s0];
	ld_v4_kernarg_u64	($d0,$d1,$d2,$d3), [$s0];
	ld_kernarg_u64	$d0, [0];
	ld_kernarg_align(2)_u64	$d0, [$s0];
	ld_kernarg_align(4)_u64	$d0, [$s0];
	ld_kernarg_align(8)_u64	$d0, [$s0];
	ld_kernarg_align(16)_u64	$d0, [$s0];
	ld_kernarg_align(32)_u64	$d0, [$s0];
	ld_kernarg_align(64)_u64	$d0, [$s0];
	ld_kernarg_align(128)_u64	$d0, [$s0];
	ld_kernarg_equiv(1)_u64	$d0, [$s0];
	ld_kernarg_equiv(2)_u64	$d0, [$s0];
	ld_kernarg_equiv(255)_u64	$d0, [$s0];
	ld_kernarg_width(2)_u64	$d0, [$s0];
	ld_kernarg_width(4)_u64	$d0, [$s0];
	ld_kernarg_width(8)_u64	$d0, [$s0];
	ld_kernarg_width(16)_u64	$d0, [$s0];
	ld_kernarg_width(32)_u64	$d0, [$s0];
	ld_kernarg_width(64)_u64	$d0, [$s0];
	ld_kernarg_width(128)_u64	$d0, [$s0];
	ld_kernarg_width(256)_u64	$d0, [$s0];
	ld_kernarg_width(512)_u64	$d0, [$s0];
	ld_kernarg_width(1024)_u64	$d0, [$s0];
	ld_kernarg_width(2048)_u64	$d0, [$s0];
	ld_kernarg_width(4096)_u64	$d0, [$s0];
	ld_kernarg_width(8192)_u64	$d0, [$s0];
	ld_kernarg_width(16384)_u64	$d0, [$s0];
	ld_kernarg_width(32768)_u64	$d0, [$s0];
	ld_kernarg_width(65536)_u64	$d0, [$s0];
	ld_kernarg_width(131072)_u64	$d0, [$s0];
	ld_kernarg_width(262144)_u64	$d0, [$s0];
	ld_kernarg_width(524288)_u64	$d0, [$s0];
	ld_kernarg_width(1048576)_u64	$d0, [$s0];
	ld_kernarg_width(2097152)_u64	$d0, [$s0];
	ld_kernarg_width(4194304)_u64	$d0, [$s0];
	ld_kernarg_width(8388608)_u64	$d0, [$s0];
	ld_kernarg_width(16777216)_u64	$d0, [$s0];
	ld_kernarg_width(33554432)_u64	$d0, [$s0];
	ld_kernarg_width(67108864)_u64	$d0, [$s0];
	ld_kernarg_width(134217728)_u64	$d0, [$s0];
	ld_kernarg_width(268435456)_u64	$d0, [$s0];
	ld_kernarg_width(536870912)_u64	$d0, [$s0];
	ld_kernarg_width(1073741824)_u64	$d0, [$s0];
	ld_kernarg_width(2147483648)_u64	$d0, [$s0];
	ld_kernarg_width(WAVESIZE)_u64	$d0, [$s0];
	ld_kernarg_width(all)_u64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_group_u64	$d0, [&GroupVar];
	// 
	ld_v2_group_u64	($d0,$d1), [&GroupVar];
	ld_v3_group_u64	($d0,$d1,$d2), [&GroupVar];
	ld_v4_group_u64	($d0,$d1,$d2,$d3), [&GroupVar];
	ld_group_u64	$d0, [$s0];
	ld_group_u64	$d0, [0];
	ld_group_align(2)_u64	$d0, [&GroupVar];
	ld_group_align(4)_u64	$d0, [&GroupVar];
	ld_group_align(8)_u64	$d0, [&GroupVar];
	ld_group_align(16)_u64	$d0, [&GroupVar];
	ld_group_align(32)_u64	$d0, [&GroupVar];
	ld_group_align(64)_u64	$d0, [&GroupVar];
	ld_group_align(128)_u64	$d0, [&GroupVar];
	ld_group_equiv(1)_u64	$d0, [&GroupVar];
	ld_group_equiv(2)_u64	$d0, [&GroupVar];
	ld_group_equiv(255)_u64	$d0, [&GroupVar];
	ld_group_width(2)_u64	$d0, [&GroupVar];
	ld_group_width(4)_u64	$d0, [&GroupVar];
	ld_group_width(8)_u64	$d0, [&GroupVar];
	ld_group_width(16)_u64	$d0, [&GroupVar];
	ld_group_width(32)_u64	$d0, [&GroupVar];
	ld_group_width(64)_u64	$d0, [&GroupVar];
	ld_group_width(128)_u64	$d0, [&GroupVar];
	ld_group_width(256)_u64	$d0, [&GroupVar];
	ld_group_width(512)_u64	$d0, [&GroupVar];
	ld_group_width(1024)_u64	$d0, [&GroupVar];
	ld_group_width(2048)_u64	$d0, [&GroupVar];
	ld_group_width(4096)_u64	$d0, [&GroupVar];
	ld_group_width(8192)_u64	$d0, [&GroupVar];
	ld_group_width(16384)_u64	$d0, [&GroupVar];
	ld_group_width(32768)_u64	$d0, [&GroupVar];
	ld_group_width(65536)_u64	$d0, [&GroupVar];
	ld_group_width(131072)_u64	$d0, [&GroupVar];
	ld_group_width(262144)_u64	$d0, [&GroupVar];
	ld_group_width(524288)_u64	$d0, [&GroupVar];
	ld_group_width(1048576)_u64	$d0, [&GroupVar];
	ld_group_width(2097152)_u64	$d0, [&GroupVar];
	ld_group_width(4194304)_u64	$d0, [&GroupVar];
	ld_group_width(8388608)_u64	$d0, [&GroupVar];
	ld_group_width(16777216)_u64	$d0, [&GroupVar];
	ld_group_width(33554432)_u64	$d0, [&GroupVar];
	ld_group_width(67108864)_u64	$d0, [&GroupVar];
	ld_group_width(134217728)_u64	$d0, [&GroupVar];
	ld_group_width(268435456)_u64	$d0, [&GroupVar];
	ld_group_width(536870912)_u64	$d0, [&GroupVar];
	ld_group_width(1073741824)_u64	$d0, [&GroupVar];
	ld_group_width(2147483648)_u64	$d0, [&GroupVar];
	ld_group_width(WAVESIZE)_u64	$d0, [&GroupVar];
	ld_group_width(all)_u64	$d0, [&GroupVar];
	// 
	// Next sample
	// 
	ld_private_u64	$d0, [&PrivateVar];
	// 
	ld_v2_private_u64	($d0,$d1), [&PrivateVar];
	ld_v3_private_u64	($d0,$d1,$d2), [&PrivateVar];
	ld_v4_private_u64	($d0,$d1,$d2,$d3), [&PrivateVar];
	ld_private_u64	$d0, [$s0];
	ld_private_u64	$d0, [0];
	ld_private_align(2)_u64	$d0, [&PrivateVar];
	ld_private_align(4)_u64	$d0, [&PrivateVar];
	ld_private_align(8)_u64	$d0, [&PrivateVar];
	ld_private_align(16)_u64	$d0, [&PrivateVar];
	ld_private_align(32)_u64	$d0, [&PrivateVar];
	ld_private_align(64)_u64	$d0, [&PrivateVar];
	ld_private_align(128)_u64	$d0, [&PrivateVar];
	ld_private_equiv(1)_u64	$d0, [&PrivateVar];
	ld_private_equiv(2)_u64	$d0, [&PrivateVar];
	ld_private_equiv(255)_u64	$d0, [&PrivateVar];
	ld_private_width(2)_u64	$d0, [&PrivateVar];
	ld_private_width(4)_u64	$d0, [&PrivateVar];
	ld_private_width(8)_u64	$d0, [&PrivateVar];
	ld_private_width(16)_u64	$d0, [&PrivateVar];
	ld_private_width(32)_u64	$d0, [&PrivateVar];
	ld_private_width(64)_u64	$d0, [&PrivateVar];
	ld_private_width(128)_u64	$d0, [&PrivateVar];
	ld_private_width(256)_u64	$d0, [&PrivateVar];
	ld_private_width(512)_u64	$d0, [&PrivateVar];
	ld_private_width(1024)_u64	$d0, [&PrivateVar];
	ld_private_width(2048)_u64	$d0, [&PrivateVar];
	ld_private_width(4096)_u64	$d0, [&PrivateVar];
	ld_private_width(8192)_u64	$d0, [&PrivateVar];
	ld_private_width(16384)_u64	$d0, [&PrivateVar];
	ld_private_width(32768)_u64	$d0, [&PrivateVar];
	ld_private_width(65536)_u64	$d0, [&PrivateVar];
	ld_private_width(131072)_u64	$d0, [&PrivateVar];
	ld_private_width(262144)_u64	$d0, [&PrivateVar];
	ld_private_width(524288)_u64	$d0, [&PrivateVar];
	ld_private_width(1048576)_u64	$d0, [&PrivateVar];
	ld_private_width(2097152)_u64	$d0, [&PrivateVar];
	ld_private_width(4194304)_u64	$d0, [&PrivateVar];
	ld_private_width(8388608)_u64	$d0, [&PrivateVar];
	ld_private_width(16777216)_u64	$d0, [&PrivateVar];
	ld_private_width(33554432)_u64	$d0, [&PrivateVar];
	ld_private_width(67108864)_u64	$d0, [&PrivateVar];
	ld_private_width(134217728)_u64	$d0, [&PrivateVar];
	ld_private_width(268435456)_u64	$d0, [&PrivateVar];
	ld_private_width(536870912)_u64	$d0, [&PrivateVar];
	ld_private_width(1073741824)_u64	$d0, [&PrivateVar];
	ld_private_width(2147483648)_u64	$d0, [&PrivateVar];
	ld_private_width(WAVESIZE)_u64	$d0, [&PrivateVar];
	ld_private_width(all)_u64	$d0, [&PrivateVar];
	// 
	// Next sample
	// 
	ld_spill_u64	$d0, [$s0];
	// 
	ld_v2_spill_u64	($d0,$d1), [$s0];
	ld_v3_spill_u64	($d0,$d1,$d2), [$s0];
	ld_v4_spill_u64	($d0,$d1,$d2,$d3), [$s0];
	ld_spill_u64	$d0, [0];
	ld_spill_align(2)_u64	$d0, [$s0];
	ld_spill_align(4)_u64	$d0, [$s0];
	ld_spill_align(8)_u64	$d0, [$s0];
	ld_spill_align(16)_u64	$d0, [$s0];
	ld_spill_align(32)_u64	$d0, [$s0];
	ld_spill_align(64)_u64	$d0, [$s0];
	ld_spill_align(128)_u64	$d0, [$s0];
	ld_spill_equiv(1)_u64	$d0, [$s0];
	ld_spill_equiv(2)_u64	$d0, [$s0];
	ld_spill_equiv(255)_u64	$d0, [$s0];
	ld_spill_width(2)_u64	$d0, [$s0];
	ld_spill_width(4)_u64	$d0, [$s0];
	ld_spill_width(8)_u64	$d0, [$s0];
	ld_spill_width(16)_u64	$d0, [$s0];
	ld_spill_width(32)_u64	$d0, [$s0];
	ld_spill_width(64)_u64	$d0, [$s0];
	ld_spill_width(128)_u64	$d0, [$s0];
	ld_spill_width(256)_u64	$d0, [$s0];
	ld_spill_width(512)_u64	$d0, [$s0];
	ld_spill_width(1024)_u64	$d0, [$s0];
	ld_spill_width(2048)_u64	$d0, [$s0];
	ld_spill_width(4096)_u64	$d0, [$s0];
	ld_spill_width(8192)_u64	$d0, [$s0];
	ld_spill_width(16384)_u64	$d0, [$s0];
	ld_spill_width(32768)_u64	$d0, [$s0];
	ld_spill_width(65536)_u64	$d0, [$s0];
	ld_spill_width(131072)_u64	$d0, [$s0];
	ld_spill_width(262144)_u64	$d0, [$s0];
	ld_spill_width(524288)_u64	$d0, [$s0];
	ld_spill_width(1048576)_u64	$d0, [$s0];
	ld_spill_width(2097152)_u64	$d0, [$s0];
	ld_spill_width(4194304)_u64	$d0, [$s0];
	ld_spill_width(8388608)_u64	$d0, [$s0];
	ld_spill_width(16777216)_u64	$d0, [$s0];
	ld_spill_width(33554432)_u64	$d0, [$s0];
	ld_spill_width(67108864)_u64	$d0, [$s0];
	ld_spill_width(134217728)_u64	$d0, [$s0];
	ld_spill_width(268435456)_u64	$d0, [$s0];
	ld_spill_width(536870912)_u64	$d0, [$s0];
	ld_spill_width(1073741824)_u64	$d0, [$s0];
	ld_spill_width(2147483648)_u64	$d0, [$s0];
	ld_spill_width(WAVESIZE)_u64	$d0, [$s0];
	ld_spill_width(all)_u64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_u64	$d0, [$s0];
	// 
	ld_v2_arg_u64	($d0,$d1), [$s0];
	ld_v3_arg_u64	($d0,$d1,$d2), [$s0];
	ld_v4_arg_u64	($d0,$d1,$d2,$d3), [$s0];
	ld_arg_u64	$d0, [0];
	ld_arg_align(2)_u64	$d0, [$s0];
	ld_arg_align(4)_u64	$d0, [$s0];
	ld_arg_align(8)_u64	$d0, [$s0];
	ld_arg_align(16)_u64	$d0, [$s0];
	ld_arg_align(32)_u64	$d0, [$s0];
	ld_arg_align(64)_u64	$d0, [$s0];
	ld_arg_align(128)_u64	$d0, [$s0];
	ld_arg_equiv(1)_u64	$d0, [$s0];
	ld_arg_equiv(2)_u64	$d0, [$s0];
	ld_arg_equiv(255)_u64	$d0, [$s0];
	ld_arg_width(2)_u64	$d0, [$s0];
	ld_arg_width(4)_u64	$d0, [$s0];
	ld_arg_width(8)_u64	$d0, [$s0];
	ld_arg_width(16)_u64	$d0, [$s0];
	ld_arg_width(32)_u64	$d0, [$s0];
	ld_arg_width(64)_u64	$d0, [$s0];
	ld_arg_width(128)_u64	$d0, [$s0];
	ld_arg_width(256)_u64	$d0, [$s0];
	ld_arg_width(512)_u64	$d0, [$s0];
	ld_arg_width(1024)_u64	$d0, [$s0];
	ld_arg_width(2048)_u64	$d0, [$s0];
	ld_arg_width(4096)_u64	$d0, [$s0];
	ld_arg_width(8192)_u64	$d0, [$s0];
	ld_arg_width(16384)_u64	$d0, [$s0];
	ld_arg_width(32768)_u64	$d0, [$s0];
	ld_arg_width(65536)_u64	$d0, [$s0];
	ld_arg_width(131072)_u64	$d0, [$s0];
	ld_arg_width(262144)_u64	$d0, [$s0];
	ld_arg_width(524288)_u64	$d0, [$s0];
	ld_arg_width(1048576)_u64	$d0, [$s0];
	ld_arg_width(2097152)_u64	$d0, [$s0];
	ld_arg_width(4194304)_u64	$d0, [$s0];
	ld_arg_width(8388608)_u64	$d0, [$s0];
	ld_arg_width(16777216)_u64	$d0, [$s0];
	ld_arg_width(33554432)_u64	$d0, [$s0];
	ld_arg_width(67108864)_u64	$d0, [$s0];
	ld_arg_width(134217728)_u64	$d0, [$s0];
	ld_arg_width(268435456)_u64	$d0, [$s0];
	ld_arg_width(536870912)_u64	$d0, [$s0];
	ld_arg_width(1073741824)_u64	$d0, [$s0];
	ld_arg_width(2147483648)_u64	$d0, [$s0];
	ld_arg_width(WAVESIZE)_u64	$d0, [$s0];
	ld_arg_width(all)_u64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_s8	$s0, [$s0];
	// 
	ld_const_s8	$s0, [$s0];
	ld_v2_s8	($s0,$s1), [$s0];
	ld_v3_s8	($s0,$s1,$s2), [$s0];
	ld_v4_s8	($s0,$s1,$s2,$s3), [$s0];
	ld_s8	$s0, [0];
	ld_align(2)_s8	$s0, [$s0];
	ld_align(4)_s8	$s0, [$s0];
	ld_align(8)_s8	$s0, [$s0];
	ld_align(16)_s8	$s0, [$s0];
	ld_align(32)_s8	$s0, [$s0];
	ld_align(64)_s8	$s0, [$s0];
	ld_align(128)_s8	$s0, [$s0];
	ld_equiv(1)_s8	$s0, [$s0];
	ld_equiv(2)_s8	$s0, [$s0];
	ld_equiv(255)_s8	$s0, [$s0];
	ld_width(2)_s8	$s0, [$s0];
	ld_width(4)_s8	$s0, [$s0];
	ld_width(8)_s8	$s0, [$s0];
	ld_width(16)_s8	$s0, [$s0];
	ld_width(32)_s8	$s0, [$s0];
	ld_width(64)_s8	$s0, [$s0];
	ld_width(128)_s8	$s0, [$s0];
	ld_width(256)_s8	$s0, [$s0];
	ld_width(512)_s8	$s0, [$s0];
	ld_width(1024)_s8	$s0, [$s0];
	ld_width(2048)_s8	$s0, [$s0];
	ld_width(4096)_s8	$s0, [$s0];
	ld_width(8192)_s8	$s0, [$s0];
	ld_width(16384)_s8	$s0, [$s0];
	ld_width(32768)_s8	$s0, [$s0];
	ld_width(65536)_s8	$s0, [$s0];
	ld_width(131072)_s8	$s0, [$s0];
	ld_width(262144)_s8	$s0, [$s0];
	ld_width(524288)_s8	$s0, [$s0];
	ld_width(1048576)_s8	$s0, [$s0];
	ld_width(2097152)_s8	$s0, [$s0];
	ld_width(4194304)_s8	$s0, [$s0];
	ld_width(8388608)_s8	$s0, [$s0];
	ld_width(16777216)_s8	$s0, [$s0];
	ld_width(33554432)_s8	$s0, [$s0];
	ld_width(67108864)_s8	$s0, [$s0];
	ld_width(134217728)_s8	$s0, [$s0];
	ld_width(268435456)_s8	$s0, [$s0];
	ld_width(536870912)_s8	$s0, [$s0];
	ld_width(1073741824)_s8	$s0, [$s0];
	ld_width(2147483648)_s8	$s0, [$s0];
	ld_width(WAVESIZE)_s8	$s0, [$s0];
	ld_width(all)_s8	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_global_s8	$s0, [&GlobalVar];
	// 
	ld_global_const_s8	$s0, [&GlobalVar];
	ld_v2_global_s8	($s0,$s1), [&GlobalVar];
	ld_v3_global_s8	($s0,$s1,$s2), [&GlobalVar];
	ld_v4_global_s8	($s0,$s1,$s2,$s3), [&GlobalVar];
	ld_global_s8	$s0, [$s0];
	ld_global_s8	$s0, [0];
	ld_global_align(2)_s8	$s0, [&GlobalVar];
	ld_global_align(4)_s8	$s0, [&GlobalVar];
	ld_global_align(8)_s8	$s0, [&GlobalVar];
	ld_global_align(16)_s8	$s0, [&GlobalVar];
	ld_global_align(32)_s8	$s0, [&GlobalVar];
	ld_global_align(64)_s8	$s0, [&GlobalVar];
	ld_global_align(128)_s8	$s0, [&GlobalVar];
	ld_global_equiv(1)_s8	$s0, [&GlobalVar];
	ld_global_equiv(2)_s8	$s0, [&GlobalVar];
	ld_global_equiv(255)_s8	$s0, [&GlobalVar];
	ld_global_width(2)_s8	$s0, [&GlobalVar];
	ld_global_width(4)_s8	$s0, [&GlobalVar];
	ld_global_width(8)_s8	$s0, [&GlobalVar];
	ld_global_width(16)_s8	$s0, [&GlobalVar];
	ld_global_width(32)_s8	$s0, [&GlobalVar];
	ld_global_width(64)_s8	$s0, [&GlobalVar];
	ld_global_width(128)_s8	$s0, [&GlobalVar];
	ld_global_width(256)_s8	$s0, [&GlobalVar];
	ld_global_width(512)_s8	$s0, [&GlobalVar];
	ld_global_width(1024)_s8	$s0, [&GlobalVar];
	ld_global_width(2048)_s8	$s0, [&GlobalVar];
	ld_global_width(4096)_s8	$s0, [&GlobalVar];
	ld_global_width(8192)_s8	$s0, [&GlobalVar];
	ld_global_width(16384)_s8	$s0, [&GlobalVar];
	ld_global_width(32768)_s8	$s0, [&GlobalVar];
	ld_global_width(65536)_s8	$s0, [&GlobalVar];
	ld_global_width(131072)_s8	$s0, [&GlobalVar];
	ld_global_width(262144)_s8	$s0, [&GlobalVar];
	ld_global_width(524288)_s8	$s0, [&GlobalVar];
	ld_global_width(1048576)_s8	$s0, [&GlobalVar];
	ld_global_width(2097152)_s8	$s0, [&GlobalVar];
	ld_global_width(4194304)_s8	$s0, [&GlobalVar];
	ld_global_width(8388608)_s8	$s0, [&GlobalVar];
	ld_global_width(16777216)_s8	$s0, [&GlobalVar];
	ld_global_width(33554432)_s8	$s0, [&GlobalVar];
	ld_global_width(67108864)_s8	$s0, [&GlobalVar];
	ld_global_width(134217728)_s8	$s0, [&GlobalVar];
	ld_global_width(268435456)_s8	$s0, [&GlobalVar];
	ld_global_width(536870912)_s8	$s0, [&GlobalVar];
	ld_global_width(1073741824)_s8	$s0, [&GlobalVar];
	ld_global_width(2147483648)_s8	$s0, [&GlobalVar];
	ld_global_width(WAVESIZE)_s8	$s0, [&GlobalVar];
	ld_global_width(all)_s8	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	ld_readonly_s8	$s0, [&ReadonlyVar];
	// 
	ld_readonly_const_s8	$s0, [&ReadonlyVar];
	ld_v2_readonly_s8	($s0,$s1), [&ReadonlyVar];
	ld_v3_readonly_s8	($s0,$s1,$s2), [&ReadonlyVar];
	ld_v4_readonly_s8	($s0,$s1,$s2,$s3), [&ReadonlyVar];
	ld_readonly_s8	$s0, [$s0];
	ld_readonly_s8	$s0, [0];
	ld_readonly_align(2)_s8	$s0, [&ReadonlyVar];
	ld_readonly_align(4)_s8	$s0, [&ReadonlyVar];
	ld_readonly_align(8)_s8	$s0, [&ReadonlyVar];
	ld_readonly_align(16)_s8	$s0, [&ReadonlyVar];
	ld_readonly_align(32)_s8	$s0, [&ReadonlyVar];
	ld_readonly_align(64)_s8	$s0, [&ReadonlyVar];
	ld_readonly_align(128)_s8	$s0, [&ReadonlyVar];
	ld_readonly_equiv(1)_s8	$s0, [&ReadonlyVar];
	ld_readonly_equiv(2)_s8	$s0, [&ReadonlyVar];
	ld_readonly_equiv(255)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(2)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(4)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(8)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(16)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(32)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(64)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(128)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(256)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(512)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(1024)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(2048)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(4096)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(8192)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(16384)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(32768)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(65536)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(131072)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(262144)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(524288)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(1048576)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(2097152)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(4194304)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(8388608)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(16777216)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(33554432)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(67108864)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(134217728)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(268435456)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(536870912)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(1073741824)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(2147483648)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(WAVESIZE)_s8	$s0, [&ReadonlyVar];
	ld_readonly_width(all)_s8	$s0, [&ReadonlyVar];
	// 
	// Next sample
	// 
	ld_kernarg_s8	$s0, [$s0];
	// 
	ld_kernarg_const_s8	$s0, [$s0];
	ld_v2_kernarg_s8	($s0,$s1), [$s0];
	ld_v3_kernarg_s8	($s0,$s1,$s2), [$s0];
	ld_v4_kernarg_s8	($s0,$s1,$s2,$s3), [$s0];
	ld_kernarg_s8	$s0, [0];
	ld_kernarg_align(2)_s8	$s0, [$s0];
	ld_kernarg_align(4)_s8	$s0, [$s0];
	ld_kernarg_align(8)_s8	$s0, [$s0];
	ld_kernarg_align(16)_s8	$s0, [$s0];
	ld_kernarg_align(32)_s8	$s0, [$s0];
	ld_kernarg_align(64)_s8	$s0, [$s0];
	ld_kernarg_align(128)_s8	$s0, [$s0];
	ld_kernarg_equiv(1)_s8	$s0, [$s0];
	ld_kernarg_equiv(2)_s8	$s0, [$s0];
	ld_kernarg_equiv(255)_s8	$s0, [$s0];
	ld_kernarg_width(2)_s8	$s0, [$s0];
	ld_kernarg_width(4)_s8	$s0, [$s0];
	ld_kernarg_width(8)_s8	$s0, [$s0];
	ld_kernarg_width(16)_s8	$s0, [$s0];
	ld_kernarg_width(32)_s8	$s0, [$s0];
	ld_kernarg_width(64)_s8	$s0, [$s0];
	ld_kernarg_width(128)_s8	$s0, [$s0];
	ld_kernarg_width(256)_s8	$s0, [$s0];
	ld_kernarg_width(512)_s8	$s0, [$s0];
	ld_kernarg_width(1024)_s8	$s0, [$s0];
	ld_kernarg_width(2048)_s8	$s0, [$s0];
	ld_kernarg_width(4096)_s8	$s0, [$s0];
	ld_kernarg_width(8192)_s8	$s0, [$s0];
	ld_kernarg_width(16384)_s8	$s0, [$s0];
	ld_kernarg_width(32768)_s8	$s0, [$s0];
	ld_kernarg_width(65536)_s8	$s0, [$s0];
	ld_kernarg_width(131072)_s8	$s0, [$s0];
	ld_kernarg_width(262144)_s8	$s0, [$s0];
	ld_kernarg_width(524288)_s8	$s0, [$s0];
	ld_kernarg_width(1048576)_s8	$s0, [$s0];
	ld_kernarg_width(2097152)_s8	$s0, [$s0];
	ld_kernarg_width(4194304)_s8	$s0, [$s0];
	ld_kernarg_width(8388608)_s8	$s0, [$s0];
	ld_kernarg_width(16777216)_s8	$s0, [$s0];
	ld_kernarg_width(33554432)_s8	$s0, [$s0];
	ld_kernarg_width(67108864)_s8	$s0, [$s0];
	ld_kernarg_width(134217728)_s8	$s0, [$s0];
	ld_kernarg_width(268435456)_s8	$s0, [$s0];
	ld_kernarg_width(536870912)_s8	$s0, [$s0];
	ld_kernarg_width(1073741824)_s8	$s0, [$s0];
	ld_kernarg_width(2147483648)_s8	$s0, [$s0];
	ld_kernarg_width(WAVESIZE)_s8	$s0, [$s0];
	ld_kernarg_width(all)_s8	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_group_s8	$s0, [&GroupVar];
	// 
	ld_v2_group_s8	($s0,$s1), [&GroupVar];
	ld_v3_group_s8	($s0,$s1,$s2), [&GroupVar];
	ld_v4_group_s8	($s0,$s1,$s2,$s3), [&GroupVar];
	ld_group_s8	$s0, [$s0];
	ld_group_s8	$s0, [0];
	ld_group_align(2)_s8	$s0, [&GroupVar];
	ld_group_align(4)_s8	$s0, [&GroupVar];
	ld_group_align(8)_s8	$s0, [&GroupVar];
	ld_group_align(16)_s8	$s0, [&GroupVar];
	ld_group_align(32)_s8	$s0, [&GroupVar];
	ld_group_align(64)_s8	$s0, [&GroupVar];
	ld_group_align(128)_s8	$s0, [&GroupVar];
	ld_group_equiv(1)_s8	$s0, [&GroupVar];
	ld_group_equiv(2)_s8	$s0, [&GroupVar];
	ld_group_equiv(255)_s8	$s0, [&GroupVar];
	ld_group_width(2)_s8	$s0, [&GroupVar];
	ld_group_width(4)_s8	$s0, [&GroupVar];
	ld_group_width(8)_s8	$s0, [&GroupVar];
	ld_group_width(16)_s8	$s0, [&GroupVar];
	ld_group_width(32)_s8	$s0, [&GroupVar];
	ld_group_width(64)_s8	$s0, [&GroupVar];
	ld_group_width(128)_s8	$s0, [&GroupVar];
	ld_group_width(256)_s8	$s0, [&GroupVar];
	ld_group_width(512)_s8	$s0, [&GroupVar];
	ld_group_width(1024)_s8	$s0, [&GroupVar];
	ld_group_width(2048)_s8	$s0, [&GroupVar];
	ld_group_width(4096)_s8	$s0, [&GroupVar];
	ld_group_width(8192)_s8	$s0, [&GroupVar];
	ld_group_width(16384)_s8	$s0, [&GroupVar];
	ld_group_width(32768)_s8	$s0, [&GroupVar];
	ld_group_width(65536)_s8	$s0, [&GroupVar];
	ld_group_width(131072)_s8	$s0, [&GroupVar];
	ld_group_width(262144)_s8	$s0, [&GroupVar];
	ld_group_width(524288)_s8	$s0, [&GroupVar];
	ld_group_width(1048576)_s8	$s0, [&GroupVar];
	ld_group_width(2097152)_s8	$s0, [&GroupVar];
	ld_group_width(4194304)_s8	$s0, [&GroupVar];
	ld_group_width(8388608)_s8	$s0, [&GroupVar];
	ld_group_width(16777216)_s8	$s0, [&GroupVar];
	ld_group_width(33554432)_s8	$s0, [&GroupVar];
	ld_group_width(67108864)_s8	$s0, [&GroupVar];
	ld_group_width(134217728)_s8	$s0, [&GroupVar];
	ld_group_width(268435456)_s8	$s0, [&GroupVar];
	ld_group_width(536870912)_s8	$s0, [&GroupVar];
	ld_group_width(1073741824)_s8	$s0, [&GroupVar];
	ld_group_width(2147483648)_s8	$s0, [&GroupVar];
	ld_group_width(WAVESIZE)_s8	$s0, [&GroupVar];
	ld_group_width(all)_s8	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	ld_private_s8	$s0, [&PrivateVar];
	// 
	ld_v2_private_s8	($s0,$s1), [&PrivateVar];
	ld_v3_private_s8	($s0,$s1,$s2), [&PrivateVar];
	ld_v4_private_s8	($s0,$s1,$s2,$s3), [&PrivateVar];
	ld_private_s8	$s0, [$s0];
	ld_private_s8	$s0, [0];
	ld_private_align(2)_s8	$s0, [&PrivateVar];
	ld_private_align(4)_s8	$s0, [&PrivateVar];
	ld_private_align(8)_s8	$s0, [&PrivateVar];
	ld_private_align(16)_s8	$s0, [&PrivateVar];
	ld_private_align(32)_s8	$s0, [&PrivateVar];
	ld_private_align(64)_s8	$s0, [&PrivateVar];
	ld_private_align(128)_s8	$s0, [&PrivateVar];
	ld_private_equiv(1)_s8	$s0, [&PrivateVar];
	ld_private_equiv(2)_s8	$s0, [&PrivateVar];
	ld_private_equiv(255)_s8	$s0, [&PrivateVar];
	ld_private_width(2)_s8	$s0, [&PrivateVar];
	ld_private_width(4)_s8	$s0, [&PrivateVar];
	ld_private_width(8)_s8	$s0, [&PrivateVar];
	ld_private_width(16)_s8	$s0, [&PrivateVar];
	ld_private_width(32)_s8	$s0, [&PrivateVar];
	ld_private_width(64)_s8	$s0, [&PrivateVar];
	ld_private_width(128)_s8	$s0, [&PrivateVar];
	ld_private_width(256)_s8	$s0, [&PrivateVar];
	ld_private_width(512)_s8	$s0, [&PrivateVar];
	ld_private_width(1024)_s8	$s0, [&PrivateVar];
	ld_private_width(2048)_s8	$s0, [&PrivateVar];
	ld_private_width(4096)_s8	$s0, [&PrivateVar];
	ld_private_width(8192)_s8	$s0, [&PrivateVar];
	ld_private_width(16384)_s8	$s0, [&PrivateVar];
	ld_private_width(32768)_s8	$s0, [&PrivateVar];
	ld_private_width(65536)_s8	$s0, [&PrivateVar];
	ld_private_width(131072)_s8	$s0, [&PrivateVar];
	ld_private_width(262144)_s8	$s0, [&PrivateVar];
	ld_private_width(524288)_s8	$s0, [&PrivateVar];
	ld_private_width(1048576)_s8	$s0, [&PrivateVar];
	ld_private_width(2097152)_s8	$s0, [&PrivateVar];
	ld_private_width(4194304)_s8	$s0, [&PrivateVar];
	ld_private_width(8388608)_s8	$s0, [&PrivateVar];
	ld_private_width(16777216)_s8	$s0, [&PrivateVar];
	ld_private_width(33554432)_s8	$s0, [&PrivateVar];
	ld_private_width(67108864)_s8	$s0, [&PrivateVar];
	ld_private_width(134217728)_s8	$s0, [&PrivateVar];
	ld_private_width(268435456)_s8	$s0, [&PrivateVar];
	ld_private_width(536870912)_s8	$s0, [&PrivateVar];
	ld_private_width(1073741824)_s8	$s0, [&PrivateVar];
	ld_private_width(2147483648)_s8	$s0, [&PrivateVar];
	ld_private_width(WAVESIZE)_s8	$s0, [&PrivateVar];
	ld_private_width(all)_s8	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	ld_spill_s8	$s0, [$s0];
	// 
	ld_v2_spill_s8	($s0,$s1), [$s0];
	ld_v3_spill_s8	($s0,$s1,$s2), [$s0];
	ld_v4_spill_s8	($s0,$s1,$s2,$s3), [$s0];
	ld_spill_s8	$s0, [0];
	ld_spill_align(2)_s8	$s0, [$s0];
	ld_spill_align(4)_s8	$s0, [$s0];
	ld_spill_align(8)_s8	$s0, [$s0];
	ld_spill_align(16)_s8	$s0, [$s0];
	ld_spill_align(32)_s8	$s0, [$s0];
	ld_spill_align(64)_s8	$s0, [$s0];
	ld_spill_align(128)_s8	$s0, [$s0];
	ld_spill_equiv(1)_s8	$s0, [$s0];
	ld_spill_equiv(2)_s8	$s0, [$s0];
	ld_spill_equiv(255)_s8	$s0, [$s0];
	ld_spill_width(2)_s8	$s0, [$s0];
	ld_spill_width(4)_s8	$s0, [$s0];
	ld_spill_width(8)_s8	$s0, [$s0];
	ld_spill_width(16)_s8	$s0, [$s0];
	ld_spill_width(32)_s8	$s0, [$s0];
	ld_spill_width(64)_s8	$s0, [$s0];
	ld_spill_width(128)_s8	$s0, [$s0];
	ld_spill_width(256)_s8	$s0, [$s0];
	ld_spill_width(512)_s8	$s0, [$s0];
	ld_spill_width(1024)_s8	$s0, [$s0];
	ld_spill_width(2048)_s8	$s0, [$s0];
	ld_spill_width(4096)_s8	$s0, [$s0];
	ld_spill_width(8192)_s8	$s0, [$s0];
	ld_spill_width(16384)_s8	$s0, [$s0];
	ld_spill_width(32768)_s8	$s0, [$s0];
	ld_spill_width(65536)_s8	$s0, [$s0];
	ld_spill_width(131072)_s8	$s0, [$s0];
	ld_spill_width(262144)_s8	$s0, [$s0];
	ld_spill_width(524288)_s8	$s0, [$s0];
	ld_spill_width(1048576)_s8	$s0, [$s0];
	ld_spill_width(2097152)_s8	$s0, [$s0];
	ld_spill_width(4194304)_s8	$s0, [$s0];
	ld_spill_width(8388608)_s8	$s0, [$s0];
	ld_spill_width(16777216)_s8	$s0, [$s0];
	ld_spill_width(33554432)_s8	$s0, [$s0];
	ld_spill_width(67108864)_s8	$s0, [$s0];
	ld_spill_width(134217728)_s8	$s0, [$s0];
	ld_spill_width(268435456)_s8	$s0, [$s0];
	ld_spill_width(536870912)_s8	$s0, [$s0];
	ld_spill_width(1073741824)_s8	$s0, [$s0];
	ld_spill_width(2147483648)_s8	$s0, [$s0];
	ld_spill_width(WAVESIZE)_s8	$s0, [$s0];
	ld_spill_width(all)_s8	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_s8	$s0, [$s0];
	// 
	ld_v2_arg_s8	($s0,$s1), [$s0];
	ld_v3_arg_s8	($s0,$s1,$s2), [$s0];
	ld_v4_arg_s8	($s0,$s1,$s2,$s3), [$s0];
	ld_arg_s8	$s0, [0];
	ld_arg_align(2)_s8	$s0, [$s0];
	ld_arg_align(4)_s8	$s0, [$s0];
	ld_arg_align(8)_s8	$s0, [$s0];
	ld_arg_align(16)_s8	$s0, [$s0];
	ld_arg_align(32)_s8	$s0, [$s0];
	ld_arg_align(64)_s8	$s0, [$s0];
	ld_arg_align(128)_s8	$s0, [$s0];
	ld_arg_equiv(1)_s8	$s0, [$s0];
	ld_arg_equiv(2)_s8	$s0, [$s0];
	ld_arg_equiv(255)_s8	$s0, [$s0];
	ld_arg_width(2)_s8	$s0, [$s0];
	ld_arg_width(4)_s8	$s0, [$s0];
	ld_arg_width(8)_s8	$s0, [$s0];
	ld_arg_width(16)_s8	$s0, [$s0];
	ld_arg_width(32)_s8	$s0, [$s0];
	ld_arg_width(64)_s8	$s0, [$s0];
	ld_arg_width(128)_s8	$s0, [$s0];
	ld_arg_width(256)_s8	$s0, [$s0];
	ld_arg_width(512)_s8	$s0, [$s0];
	ld_arg_width(1024)_s8	$s0, [$s0];
	ld_arg_width(2048)_s8	$s0, [$s0];
	ld_arg_width(4096)_s8	$s0, [$s0];
	ld_arg_width(8192)_s8	$s0, [$s0];
	ld_arg_width(16384)_s8	$s0, [$s0];
	ld_arg_width(32768)_s8	$s0, [$s0];
	ld_arg_width(65536)_s8	$s0, [$s0];
	ld_arg_width(131072)_s8	$s0, [$s0];
	ld_arg_width(262144)_s8	$s0, [$s0];
	ld_arg_width(524288)_s8	$s0, [$s0];
	ld_arg_width(1048576)_s8	$s0, [$s0];
	ld_arg_width(2097152)_s8	$s0, [$s0];
	ld_arg_width(4194304)_s8	$s0, [$s0];
	ld_arg_width(8388608)_s8	$s0, [$s0];
	ld_arg_width(16777216)_s8	$s0, [$s0];
	ld_arg_width(33554432)_s8	$s0, [$s0];
	ld_arg_width(67108864)_s8	$s0, [$s0];
	ld_arg_width(134217728)_s8	$s0, [$s0];
	ld_arg_width(268435456)_s8	$s0, [$s0];
	ld_arg_width(536870912)_s8	$s0, [$s0];
	ld_arg_width(1073741824)_s8	$s0, [$s0];
	ld_arg_width(2147483648)_s8	$s0, [$s0];
	ld_arg_width(WAVESIZE)_s8	$s0, [$s0];
	ld_arg_width(all)_s8	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_s16	$s0, [$s0];
	// 
	ld_const_s16	$s0, [$s0];
	ld_v2_s16	($s0,$s1), [$s0];
	ld_v3_s16	($s0,$s1,$s2), [$s0];
	ld_v4_s16	($s0,$s1,$s2,$s3), [$s0];
	ld_s16	$s0, [0];
	ld_align(2)_s16	$s0, [$s0];
	ld_align(4)_s16	$s0, [$s0];
	ld_align(8)_s16	$s0, [$s0];
	ld_align(16)_s16	$s0, [$s0];
	ld_align(32)_s16	$s0, [$s0];
	ld_align(64)_s16	$s0, [$s0];
	ld_align(128)_s16	$s0, [$s0];
	ld_equiv(1)_s16	$s0, [$s0];
	ld_equiv(2)_s16	$s0, [$s0];
	ld_equiv(255)_s16	$s0, [$s0];
	ld_width(2)_s16	$s0, [$s0];
	ld_width(4)_s16	$s0, [$s0];
	ld_width(8)_s16	$s0, [$s0];
	ld_width(16)_s16	$s0, [$s0];
	ld_width(32)_s16	$s0, [$s0];
	ld_width(64)_s16	$s0, [$s0];
	ld_width(128)_s16	$s0, [$s0];
	ld_width(256)_s16	$s0, [$s0];
	ld_width(512)_s16	$s0, [$s0];
	ld_width(1024)_s16	$s0, [$s0];
	ld_width(2048)_s16	$s0, [$s0];
	ld_width(4096)_s16	$s0, [$s0];
	ld_width(8192)_s16	$s0, [$s0];
	ld_width(16384)_s16	$s0, [$s0];
	ld_width(32768)_s16	$s0, [$s0];
	ld_width(65536)_s16	$s0, [$s0];
	ld_width(131072)_s16	$s0, [$s0];
	ld_width(262144)_s16	$s0, [$s0];
	ld_width(524288)_s16	$s0, [$s0];
	ld_width(1048576)_s16	$s0, [$s0];
	ld_width(2097152)_s16	$s0, [$s0];
	ld_width(4194304)_s16	$s0, [$s0];
	ld_width(8388608)_s16	$s0, [$s0];
	ld_width(16777216)_s16	$s0, [$s0];
	ld_width(33554432)_s16	$s0, [$s0];
	ld_width(67108864)_s16	$s0, [$s0];
	ld_width(134217728)_s16	$s0, [$s0];
	ld_width(268435456)_s16	$s0, [$s0];
	ld_width(536870912)_s16	$s0, [$s0];
	ld_width(1073741824)_s16	$s0, [$s0];
	ld_width(2147483648)_s16	$s0, [$s0];
	ld_width(WAVESIZE)_s16	$s0, [$s0];
	ld_width(all)_s16	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_global_s16	$s0, [&GlobalVar];
	// 
	ld_global_const_s16	$s0, [&GlobalVar];
	ld_v2_global_s16	($s0,$s1), [&GlobalVar];
	ld_v3_global_s16	($s0,$s1,$s2), [&GlobalVar];
	ld_v4_global_s16	($s0,$s1,$s2,$s3), [&GlobalVar];
	ld_global_s16	$s0, [$s0];
	ld_global_s16	$s0, [0];
	ld_global_align(2)_s16	$s0, [&GlobalVar];
	ld_global_align(4)_s16	$s0, [&GlobalVar];
	ld_global_align(8)_s16	$s0, [&GlobalVar];
	ld_global_align(16)_s16	$s0, [&GlobalVar];
	ld_global_align(32)_s16	$s0, [&GlobalVar];
	ld_global_align(64)_s16	$s0, [&GlobalVar];
	ld_global_align(128)_s16	$s0, [&GlobalVar];
	ld_global_equiv(1)_s16	$s0, [&GlobalVar];
	ld_global_equiv(2)_s16	$s0, [&GlobalVar];
	ld_global_equiv(255)_s16	$s0, [&GlobalVar];
	ld_global_width(2)_s16	$s0, [&GlobalVar];
	ld_global_width(4)_s16	$s0, [&GlobalVar];
	ld_global_width(8)_s16	$s0, [&GlobalVar];
	ld_global_width(16)_s16	$s0, [&GlobalVar];
	ld_global_width(32)_s16	$s0, [&GlobalVar];
	ld_global_width(64)_s16	$s0, [&GlobalVar];
	ld_global_width(128)_s16	$s0, [&GlobalVar];
	ld_global_width(256)_s16	$s0, [&GlobalVar];
	ld_global_width(512)_s16	$s0, [&GlobalVar];
	ld_global_width(1024)_s16	$s0, [&GlobalVar];
	ld_global_width(2048)_s16	$s0, [&GlobalVar];
	ld_global_width(4096)_s16	$s0, [&GlobalVar];
	ld_global_width(8192)_s16	$s0, [&GlobalVar];
	ld_global_width(16384)_s16	$s0, [&GlobalVar];
	ld_global_width(32768)_s16	$s0, [&GlobalVar];
	ld_global_width(65536)_s16	$s0, [&GlobalVar];
	ld_global_width(131072)_s16	$s0, [&GlobalVar];
	ld_global_width(262144)_s16	$s0, [&GlobalVar];
	ld_global_width(524288)_s16	$s0, [&GlobalVar];
	ld_global_width(1048576)_s16	$s0, [&GlobalVar];
	ld_global_width(2097152)_s16	$s0, [&GlobalVar];
	ld_global_width(4194304)_s16	$s0, [&GlobalVar];
	ld_global_width(8388608)_s16	$s0, [&GlobalVar];
	ld_global_width(16777216)_s16	$s0, [&GlobalVar];
	ld_global_width(33554432)_s16	$s0, [&GlobalVar];
	ld_global_width(67108864)_s16	$s0, [&GlobalVar];
	ld_global_width(134217728)_s16	$s0, [&GlobalVar];
	ld_global_width(268435456)_s16	$s0, [&GlobalVar];
	ld_global_width(536870912)_s16	$s0, [&GlobalVar];
	ld_global_width(1073741824)_s16	$s0, [&GlobalVar];
	ld_global_width(2147483648)_s16	$s0, [&GlobalVar];
	ld_global_width(WAVESIZE)_s16	$s0, [&GlobalVar];
	ld_global_width(all)_s16	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	ld_readonly_s16	$s0, [&ReadonlyVar];
	// 
	ld_readonly_const_s16	$s0, [&ReadonlyVar];
	ld_v2_readonly_s16	($s0,$s1), [&ReadonlyVar];
	ld_v3_readonly_s16	($s0,$s1,$s2), [&ReadonlyVar];
	ld_v4_readonly_s16	($s0,$s1,$s2,$s3), [&ReadonlyVar];
	ld_readonly_s16	$s0, [$s0];
	ld_readonly_s16	$s0, [0];
	ld_readonly_align(2)_s16	$s0, [&ReadonlyVar];
	ld_readonly_align(4)_s16	$s0, [&ReadonlyVar];
	ld_readonly_align(8)_s16	$s0, [&ReadonlyVar];
	ld_readonly_align(16)_s16	$s0, [&ReadonlyVar];
	ld_readonly_align(32)_s16	$s0, [&ReadonlyVar];
	ld_readonly_align(64)_s16	$s0, [&ReadonlyVar];
	ld_readonly_align(128)_s16	$s0, [&ReadonlyVar];
	ld_readonly_equiv(1)_s16	$s0, [&ReadonlyVar];
	ld_readonly_equiv(2)_s16	$s0, [&ReadonlyVar];
	ld_readonly_equiv(255)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(2)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(4)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(8)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(16)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(32)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(64)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(128)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(256)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(512)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(1024)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(2048)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(4096)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(8192)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(16384)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(32768)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(65536)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(131072)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(262144)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(524288)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(1048576)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(2097152)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(4194304)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(8388608)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(16777216)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(33554432)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(67108864)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(134217728)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(268435456)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(536870912)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(1073741824)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(2147483648)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(WAVESIZE)_s16	$s0, [&ReadonlyVar];
	ld_readonly_width(all)_s16	$s0, [&ReadonlyVar];
	// 
	// Next sample
	// 
	ld_kernarg_s16	$s0, [$s0];
	// 
	ld_kernarg_const_s16	$s0, [$s0];
	ld_v2_kernarg_s16	($s0,$s1), [$s0];
	ld_v3_kernarg_s16	($s0,$s1,$s2), [$s0];
	ld_v4_kernarg_s16	($s0,$s1,$s2,$s3), [$s0];
	ld_kernarg_s16	$s0, [0];
	ld_kernarg_align(2)_s16	$s0, [$s0];
	ld_kernarg_align(4)_s16	$s0, [$s0];
	ld_kernarg_align(8)_s16	$s0, [$s0];
	ld_kernarg_align(16)_s16	$s0, [$s0];
	ld_kernarg_align(32)_s16	$s0, [$s0];
	ld_kernarg_align(64)_s16	$s0, [$s0];
	ld_kernarg_align(128)_s16	$s0, [$s0];
	ld_kernarg_equiv(1)_s16	$s0, [$s0];
	ld_kernarg_equiv(2)_s16	$s0, [$s0];
	ld_kernarg_equiv(255)_s16	$s0, [$s0];
	ld_kernarg_width(2)_s16	$s0, [$s0];
	ld_kernarg_width(4)_s16	$s0, [$s0];
	ld_kernarg_width(8)_s16	$s0, [$s0];
	ld_kernarg_width(16)_s16	$s0, [$s0];
	ld_kernarg_width(32)_s16	$s0, [$s0];
	ld_kernarg_width(64)_s16	$s0, [$s0];
	ld_kernarg_width(128)_s16	$s0, [$s0];
	ld_kernarg_width(256)_s16	$s0, [$s0];
	ld_kernarg_width(512)_s16	$s0, [$s0];
	ld_kernarg_width(1024)_s16	$s0, [$s0];
	ld_kernarg_width(2048)_s16	$s0, [$s0];
	ld_kernarg_width(4096)_s16	$s0, [$s0];
	ld_kernarg_width(8192)_s16	$s0, [$s0];
	ld_kernarg_width(16384)_s16	$s0, [$s0];
	ld_kernarg_width(32768)_s16	$s0, [$s0];
	ld_kernarg_width(65536)_s16	$s0, [$s0];
	ld_kernarg_width(131072)_s16	$s0, [$s0];
	ld_kernarg_width(262144)_s16	$s0, [$s0];
	ld_kernarg_width(524288)_s16	$s0, [$s0];
	ld_kernarg_width(1048576)_s16	$s0, [$s0];
	ld_kernarg_width(2097152)_s16	$s0, [$s0];
	ld_kernarg_width(4194304)_s16	$s0, [$s0];
	ld_kernarg_width(8388608)_s16	$s0, [$s0];
	ld_kernarg_width(16777216)_s16	$s0, [$s0];
	ld_kernarg_width(33554432)_s16	$s0, [$s0];
	ld_kernarg_width(67108864)_s16	$s0, [$s0];
	ld_kernarg_width(134217728)_s16	$s0, [$s0];
	ld_kernarg_width(268435456)_s16	$s0, [$s0];
	ld_kernarg_width(536870912)_s16	$s0, [$s0];
	ld_kernarg_width(1073741824)_s16	$s0, [$s0];
	ld_kernarg_width(2147483648)_s16	$s0, [$s0];
	ld_kernarg_width(WAVESIZE)_s16	$s0, [$s0];
	ld_kernarg_width(all)_s16	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_group_s16	$s0, [&GroupVar];
	// 
	ld_v2_group_s16	($s0,$s1), [&GroupVar];
	ld_v3_group_s16	($s0,$s1,$s2), [&GroupVar];
	ld_v4_group_s16	($s0,$s1,$s2,$s3), [&GroupVar];
	ld_group_s16	$s0, [$s0];
	ld_group_s16	$s0, [0];
	ld_group_align(2)_s16	$s0, [&GroupVar];
	ld_group_align(4)_s16	$s0, [&GroupVar];
	ld_group_align(8)_s16	$s0, [&GroupVar];
	ld_group_align(16)_s16	$s0, [&GroupVar];
	ld_group_align(32)_s16	$s0, [&GroupVar];
	ld_group_align(64)_s16	$s0, [&GroupVar];
	ld_group_align(128)_s16	$s0, [&GroupVar];
	ld_group_equiv(1)_s16	$s0, [&GroupVar];
	ld_group_equiv(2)_s16	$s0, [&GroupVar];
	ld_group_equiv(255)_s16	$s0, [&GroupVar];
	ld_group_width(2)_s16	$s0, [&GroupVar];
	ld_group_width(4)_s16	$s0, [&GroupVar];
	ld_group_width(8)_s16	$s0, [&GroupVar];
	ld_group_width(16)_s16	$s0, [&GroupVar];
	ld_group_width(32)_s16	$s0, [&GroupVar];
	ld_group_width(64)_s16	$s0, [&GroupVar];
	ld_group_width(128)_s16	$s0, [&GroupVar];
	ld_group_width(256)_s16	$s0, [&GroupVar];
	ld_group_width(512)_s16	$s0, [&GroupVar];
	ld_group_width(1024)_s16	$s0, [&GroupVar];
	ld_group_width(2048)_s16	$s0, [&GroupVar];
	ld_group_width(4096)_s16	$s0, [&GroupVar];
	ld_group_width(8192)_s16	$s0, [&GroupVar];
	ld_group_width(16384)_s16	$s0, [&GroupVar];
	ld_group_width(32768)_s16	$s0, [&GroupVar];
	ld_group_width(65536)_s16	$s0, [&GroupVar];
	ld_group_width(131072)_s16	$s0, [&GroupVar];
	ld_group_width(262144)_s16	$s0, [&GroupVar];
	ld_group_width(524288)_s16	$s0, [&GroupVar];
	ld_group_width(1048576)_s16	$s0, [&GroupVar];
	ld_group_width(2097152)_s16	$s0, [&GroupVar];
	ld_group_width(4194304)_s16	$s0, [&GroupVar];
	ld_group_width(8388608)_s16	$s0, [&GroupVar];
	ld_group_width(16777216)_s16	$s0, [&GroupVar];
	ld_group_width(33554432)_s16	$s0, [&GroupVar];
	ld_group_width(67108864)_s16	$s0, [&GroupVar];
	ld_group_width(134217728)_s16	$s0, [&GroupVar];
	ld_group_width(268435456)_s16	$s0, [&GroupVar];
	ld_group_width(536870912)_s16	$s0, [&GroupVar];
	ld_group_width(1073741824)_s16	$s0, [&GroupVar];
	ld_group_width(2147483648)_s16	$s0, [&GroupVar];
	ld_group_width(WAVESIZE)_s16	$s0, [&GroupVar];
	ld_group_width(all)_s16	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	ld_private_s16	$s0, [&PrivateVar];
	// 
	ld_v2_private_s16	($s0,$s1), [&PrivateVar];
	ld_v3_private_s16	($s0,$s1,$s2), [&PrivateVar];
	ld_v4_private_s16	($s0,$s1,$s2,$s3), [&PrivateVar];
	ld_private_s16	$s0, [$s0];
	ld_private_s16	$s0, [0];
	ld_private_align(2)_s16	$s0, [&PrivateVar];
	ld_private_align(4)_s16	$s0, [&PrivateVar];
	ld_private_align(8)_s16	$s0, [&PrivateVar];
	ld_private_align(16)_s16	$s0, [&PrivateVar];
	ld_private_align(32)_s16	$s0, [&PrivateVar];
	ld_private_align(64)_s16	$s0, [&PrivateVar];
	ld_private_align(128)_s16	$s0, [&PrivateVar];
	ld_private_equiv(1)_s16	$s0, [&PrivateVar];
	ld_private_equiv(2)_s16	$s0, [&PrivateVar];
	ld_private_equiv(255)_s16	$s0, [&PrivateVar];
	ld_private_width(2)_s16	$s0, [&PrivateVar];
	ld_private_width(4)_s16	$s0, [&PrivateVar];
	ld_private_width(8)_s16	$s0, [&PrivateVar];
	ld_private_width(16)_s16	$s0, [&PrivateVar];
	ld_private_width(32)_s16	$s0, [&PrivateVar];
	ld_private_width(64)_s16	$s0, [&PrivateVar];
	ld_private_width(128)_s16	$s0, [&PrivateVar];
	ld_private_width(256)_s16	$s0, [&PrivateVar];
	ld_private_width(512)_s16	$s0, [&PrivateVar];
	ld_private_width(1024)_s16	$s0, [&PrivateVar];
	ld_private_width(2048)_s16	$s0, [&PrivateVar];
	ld_private_width(4096)_s16	$s0, [&PrivateVar];
	ld_private_width(8192)_s16	$s0, [&PrivateVar];
	ld_private_width(16384)_s16	$s0, [&PrivateVar];
	ld_private_width(32768)_s16	$s0, [&PrivateVar];
	ld_private_width(65536)_s16	$s0, [&PrivateVar];
	ld_private_width(131072)_s16	$s0, [&PrivateVar];
	ld_private_width(262144)_s16	$s0, [&PrivateVar];
	ld_private_width(524288)_s16	$s0, [&PrivateVar];
	ld_private_width(1048576)_s16	$s0, [&PrivateVar];
	ld_private_width(2097152)_s16	$s0, [&PrivateVar];
	ld_private_width(4194304)_s16	$s0, [&PrivateVar];
	ld_private_width(8388608)_s16	$s0, [&PrivateVar];
	ld_private_width(16777216)_s16	$s0, [&PrivateVar];
	ld_private_width(33554432)_s16	$s0, [&PrivateVar];
	ld_private_width(67108864)_s16	$s0, [&PrivateVar];
	ld_private_width(134217728)_s16	$s0, [&PrivateVar];
	ld_private_width(268435456)_s16	$s0, [&PrivateVar];
	ld_private_width(536870912)_s16	$s0, [&PrivateVar];
	ld_private_width(1073741824)_s16	$s0, [&PrivateVar];
	ld_private_width(2147483648)_s16	$s0, [&PrivateVar];
	ld_private_width(WAVESIZE)_s16	$s0, [&PrivateVar];
	ld_private_width(all)_s16	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	ld_spill_s16	$s0, [$s0];
	// 
	ld_v2_spill_s16	($s0,$s1), [$s0];
	ld_v3_spill_s16	($s0,$s1,$s2), [$s0];
	ld_v4_spill_s16	($s0,$s1,$s2,$s3), [$s0];
	ld_spill_s16	$s0, [0];
	ld_spill_align(2)_s16	$s0, [$s0];
	ld_spill_align(4)_s16	$s0, [$s0];
	ld_spill_align(8)_s16	$s0, [$s0];
	ld_spill_align(16)_s16	$s0, [$s0];
	ld_spill_align(32)_s16	$s0, [$s0];
	ld_spill_align(64)_s16	$s0, [$s0];
	ld_spill_align(128)_s16	$s0, [$s0];
	ld_spill_equiv(1)_s16	$s0, [$s0];
	ld_spill_equiv(2)_s16	$s0, [$s0];
	ld_spill_equiv(255)_s16	$s0, [$s0];
	ld_spill_width(2)_s16	$s0, [$s0];
	ld_spill_width(4)_s16	$s0, [$s0];
	ld_spill_width(8)_s16	$s0, [$s0];
	ld_spill_width(16)_s16	$s0, [$s0];
	ld_spill_width(32)_s16	$s0, [$s0];
	ld_spill_width(64)_s16	$s0, [$s0];
	ld_spill_width(128)_s16	$s0, [$s0];
	ld_spill_width(256)_s16	$s0, [$s0];
	ld_spill_width(512)_s16	$s0, [$s0];
	ld_spill_width(1024)_s16	$s0, [$s0];
	ld_spill_width(2048)_s16	$s0, [$s0];
	ld_spill_width(4096)_s16	$s0, [$s0];
	ld_spill_width(8192)_s16	$s0, [$s0];
	ld_spill_width(16384)_s16	$s0, [$s0];
	ld_spill_width(32768)_s16	$s0, [$s0];
	ld_spill_width(65536)_s16	$s0, [$s0];
	ld_spill_width(131072)_s16	$s0, [$s0];
	ld_spill_width(262144)_s16	$s0, [$s0];
	ld_spill_width(524288)_s16	$s0, [$s0];
	ld_spill_width(1048576)_s16	$s0, [$s0];
	ld_spill_width(2097152)_s16	$s0, [$s0];
	ld_spill_width(4194304)_s16	$s0, [$s0];
	ld_spill_width(8388608)_s16	$s0, [$s0];
	ld_spill_width(16777216)_s16	$s0, [$s0];
	ld_spill_width(33554432)_s16	$s0, [$s0];
	ld_spill_width(67108864)_s16	$s0, [$s0];
	ld_spill_width(134217728)_s16	$s0, [$s0];
	ld_spill_width(268435456)_s16	$s0, [$s0];
	ld_spill_width(536870912)_s16	$s0, [$s0];
	ld_spill_width(1073741824)_s16	$s0, [$s0];
	ld_spill_width(2147483648)_s16	$s0, [$s0];
	ld_spill_width(WAVESIZE)_s16	$s0, [$s0];
	ld_spill_width(all)_s16	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_s16	$s0, [$s0];
	// 
	ld_v2_arg_s16	($s0,$s1), [$s0];
	ld_v3_arg_s16	($s0,$s1,$s2), [$s0];
	ld_v4_arg_s16	($s0,$s1,$s2,$s3), [$s0];
	ld_arg_s16	$s0, [0];
	ld_arg_align(2)_s16	$s0, [$s0];
	ld_arg_align(4)_s16	$s0, [$s0];
	ld_arg_align(8)_s16	$s0, [$s0];
	ld_arg_align(16)_s16	$s0, [$s0];
	ld_arg_align(32)_s16	$s0, [$s0];
	ld_arg_align(64)_s16	$s0, [$s0];
	ld_arg_align(128)_s16	$s0, [$s0];
	ld_arg_equiv(1)_s16	$s0, [$s0];
	ld_arg_equiv(2)_s16	$s0, [$s0];
	ld_arg_equiv(255)_s16	$s0, [$s0];
	ld_arg_width(2)_s16	$s0, [$s0];
	ld_arg_width(4)_s16	$s0, [$s0];
	ld_arg_width(8)_s16	$s0, [$s0];
	ld_arg_width(16)_s16	$s0, [$s0];
	ld_arg_width(32)_s16	$s0, [$s0];
	ld_arg_width(64)_s16	$s0, [$s0];
	ld_arg_width(128)_s16	$s0, [$s0];
	ld_arg_width(256)_s16	$s0, [$s0];
	ld_arg_width(512)_s16	$s0, [$s0];
	ld_arg_width(1024)_s16	$s0, [$s0];
	ld_arg_width(2048)_s16	$s0, [$s0];
	ld_arg_width(4096)_s16	$s0, [$s0];
	ld_arg_width(8192)_s16	$s0, [$s0];
	ld_arg_width(16384)_s16	$s0, [$s0];
	ld_arg_width(32768)_s16	$s0, [$s0];
	ld_arg_width(65536)_s16	$s0, [$s0];
	ld_arg_width(131072)_s16	$s0, [$s0];
	ld_arg_width(262144)_s16	$s0, [$s0];
	ld_arg_width(524288)_s16	$s0, [$s0];
	ld_arg_width(1048576)_s16	$s0, [$s0];
	ld_arg_width(2097152)_s16	$s0, [$s0];
	ld_arg_width(4194304)_s16	$s0, [$s0];
	ld_arg_width(8388608)_s16	$s0, [$s0];
	ld_arg_width(16777216)_s16	$s0, [$s0];
	ld_arg_width(33554432)_s16	$s0, [$s0];
	ld_arg_width(67108864)_s16	$s0, [$s0];
	ld_arg_width(134217728)_s16	$s0, [$s0];
	ld_arg_width(268435456)_s16	$s0, [$s0];
	ld_arg_width(536870912)_s16	$s0, [$s0];
	ld_arg_width(1073741824)_s16	$s0, [$s0];
	ld_arg_width(2147483648)_s16	$s0, [$s0];
	ld_arg_width(WAVESIZE)_s16	$s0, [$s0];
	ld_arg_width(all)_s16	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_s32	$s0, [$s0];
	// 
	ld_const_s32	$s0, [$s0];
	ld_v2_s32	($s0,$s1), [$s0];
	ld_v3_s32	($s0,$s1,$s2), [$s0];
	ld_v4_s32	($s0,$s1,$s2,$s3), [$s0];
	ld_s32	$s0, [0];
	ld_align(2)_s32	$s0, [$s0];
	ld_align(4)_s32	$s0, [$s0];
	ld_align(8)_s32	$s0, [$s0];
	ld_align(16)_s32	$s0, [$s0];
	ld_align(32)_s32	$s0, [$s0];
	ld_align(64)_s32	$s0, [$s0];
	ld_align(128)_s32	$s0, [$s0];
	ld_equiv(1)_s32	$s0, [$s0];
	ld_equiv(2)_s32	$s0, [$s0];
	ld_equiv(255)_s32	$s0, [$s0];
	ld_width(2)_s32	$s0, [$s0];
	ld_width(4)_s32	$s0, [$s0];
	ld_width(8)_s32	$s0, [$s0];
	ld_width(16)_s32	$s0, [$s0];
	ld_width(32)_s32	$s0, [$s0];
	ld_width(64)_s32	$s0, [$s0];
	ld_width(128)_s32	$s0, [$s0];
	ld_width(256)_s32	$s0, [$s0];
	ld_width(512)_s32	$s0, [$s0];
	ld_width(1024)_s32	$s0, [$s0];
	ld_width(2048)_s32	$s0, [$s0];
	ld_width(4096)_s32	$s0, [$s0];
	ld_width(8192)_s32	$s0, [$s0];
	ld_width(16384)_s32	$s0, [$s0];
	ld_width(32768)_s32	$s0, [$s0];
	ld_width(65536)_s32	$s0, [$s0];
	ld_width(131072)_s32	$s0, [$s0];
	ld_width(262144)_s32	$s0, [$s0];
	ld_width(524288)_s32	$s0, [$s0];
	ld_width(1048576)_s32	$s0, [$s0];
	ld_width(2097152)_s32	$s0, [$s0];
	ld_width(4194304)_s32	$s0, [$s0];
	ld_width(8388608)_s32	$s0, [$s0];
	ld_width(16777216)_s32	$s0, [$s0];
	ld_width(33554432)_s32	$s0, [$s0];
	ld_width(67108864)_s32	$s0, [$s0];
	ld_width(134217728)_s32	$s0, [$s0];
	ld_width(268435456)_s32	$s0, [$s0];
	ld_width(536870912)_s32	$s0, [$s0];
	ld_width(1073741824)_s32	$s0, [$s0];
	ld_width(2147483648)_s32	$s0, [$s0];
	ld_width(WAVESIZE)_s32	$s0, [$s0];
	ld_width(all)_s32	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_global_s32	$s0, [&GlobalVar];
	// 
	ld_global_const_s32	$s0, [&GlobalVar];
	ld_v2_global_s32	($s0,$s1), [&GlobalVar];
	ld_v3_global_s32	($s0,$s1,$s2), [&GlobalVar];
	ld_v4_global_s32	($s0,$s1,$s2,$s3), [&GlobalVar];
	ld_global_s32	$s0, [$s0];
	ld_global_s32	$s0, [0];
	ld_global_align(2)_s32	$s0, [&GlobalVar];
	ld_global_align(4)_s32	$s0, [&GlobalVar];
	ld_global_align(8)_s32	$s0, [&GlobalVar];
	ld_global_align(16)_s32	$s0, [&GlobalVar];
	ld_global_align(32)_s32	$s0, [&GlobalVar];
	ld_global_align(64)_s32	$s0, [&GlobalVar];
	ld_global_align(128)_s32	$s0, [&GlobalVar];
	ld_global_equiv(1)_s32	$s0, [&GlobalVar];
	ld_global_equiv(2)_s32	$s0, [&GlobalVar];
	ld_global_equiv(255)_s32	$s0, [&GlobalVar];
	ld_global_width(2)_s32	$s0, [&GlobalVar];
	ld_global_width(4)_s32	$s0, [&GlobalVar];
	ld_global_width(8)_s32	$s0, [&GlobalVar];
	ld_global_width(16)_s32	$s0, [&GlobalVar];
	ld_global_width(32)_s32	$s0, [&GlobalVar];
	ld_global_width(64)_s32	$s0, [&GlobalVar];
	ld_global_width(128)_s32	$s0, [&GlobalVar];
	ld_global_width(256)_s32	$s0, [&GlobalVar];
	ld_global_width(512)_s32	$s0, [&GlobalVar];
	ld_global_width(1024)_s32	$s0, [&GlobalVar];
	ld_global_width(2048)_s32	$s0, [&GlobalVar];
	ld_global_width(4096)_s32	$s0, [&GlobalVar];
	ld_global_width(8192)_s32	$s0, [&GlobalVar];
	ld_global_width(16384)_s32	$s0, [&GlobalVar];
	ld_global_width(32768)_s32	$s0, [&GlobalVar];
	ld_global_width(65536)_s32	$s0, [&GlobalVar];
	ld_global_width(131072)_s32	$s0, [&GlobalVar];
	ld_global_width(262144)_s32	$s0, [&GlobalVar];
	ld_global_width(524288)_s32	$s0, [&GlobalVar];
	ld_global_width(1048576)_s32	$s0, [&GlobalVar];
	ld_global_width(2097152)_s32	$s0, [&GlobalVar];
	ld_global_width(4194304)_s32	$s0, [&GlobalVar];
	ld_global_width(8388608)_s32	$s0, [&GlobalVar];
	ld_global_width(16777216)_s32	$s0, [&GlobalVar];
	ld_global_width(33554432)_s32	$s0, [&GlobalVar];
	ld_global_width(67108864)_s32	$s0, [&GlobalVar];
	ld_global_width(134217728)_s32	$s0, [&GlobalVar];
	ld_global_width(268435456)_s32	$s0, [&GlobalVar];
	ld_global_width(536870912)_s32	$s0, [&GlobalVar];
	ld_global_width(1073741824)_s32	$s0, [&GlobalVar];
	ld_global_width(2147483648)_s32	$s0, [&GlobalVar];
	ld_global_width(WAVESIZE)_s32	$s0, [&GlobalVar];
	ld_global_width(all)_s32	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	ld_readonly_s32	$s0, [&ReadonlyVar];
	// 
	ld_readonly_const_s32	$s0, [&ReadonlyVar];
	ld_v2_readonly_s32	($s0,$s1), [&ReadonlyVar];
	ld_v3_readonly_s32	($s0,$s1,$s2), [&ReadonlyVar];
	ld_v4_readonly_s32	($s0,$s1,$s2,$s3), [&ReadonlyVar];
	ld_readonly_s32	$s0, [$s0];
	ld_readonly_s32	$s0, [0];
	ld_readonly_align(2)_s32	$s0, [&ReadonlyVar];
	ld_readonly_align(4)_s32	$s0, [&ReadonlyVar];
	ld_readonly_align(8)_s32	$s0, [&ReadonlyVar];
	ld_readonly_align(16)_s32	$s0, [&ReadonlyVar];
	ld_readonly_align(32)_s32	$s0, [&ReadonlyVar];
	ld_readonly_align(64)_s32	$s0, [&ReadonlyVar];
	ld_readonly_align(128)_s32	$s0, [&ReadonlyVar];
	ld_readonly_equiv(1)_s32	$s0, [&ReadonlyVar];
	ld_readonly_equiv(2)_s32	$s0, [&ReadonlyVar];
	ld_readonly_equiv(255)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(2)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(4)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(8)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(16)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(32)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(64)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(128)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(256)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(512)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(1024)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(2048)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(4096)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(8192)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(16384)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(32768)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(65536)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(131072)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(262144)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(524288)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(1048576)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(2097152)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(4194304)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(8388608)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(16777216)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(33554432)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(67108864)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(134217728)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(268435456)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(536870912)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(1073741824)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(2147483648)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(WAVESIZE)_s32	$s0, [&ReadonlyVar];
	ld_readonly_width(all)_s32	$s0, [&ReadonlyVar];
	// 
	// Next sample
	// 
	ld_kernarg_s32	$s0, [$s0];
	// 
	ld_kernarg_const_s32	$s0, [$s0];
	ld_v2_kernarg_s32	($s0,$s1), [$s0];
	ld_v3_kernarg_s32	($s0,$s1,$s2), [$s0];
	ld_v4_kernarg_s32	($s0,$s1,$s2,$s3), [$s0];
	ld_kernarg_s32	$s0, [0];
	ld_kernarg_align(2)_s32	$s0, [$s0];
	ld_kernarg_align(4)_s32	$s0, [$s0];
	ld_kernarg_align(8)_s32	$s0, [$s0];
	ld_kernarg_align(16)_s32	$s0, [$s0];
	ld_kernarg_align(32)_s32	$s0, [$s0];
	ld_kernarg_align(64)_s32	$s0, [$s0];
	ld_kernarg_align(128)_s32	$s0, [$s0];
	ld_kernarg_equiv(1)_s32	$s0, [$s0];
	ld_kernarg_equiv(2)_s32	$s0, [$s0];
	ld_kernarg_equiv(255)_s32	$s0, [$s0];
	ld_kernarg_width(2)_s32	$s0, [$s0];
	ld_kernarg_width(4)_s32	$s0, [$s0];
	ld_kernarg_width(8)_s32	$s0, [$s0];
	ld_kernarg_width(16)_s32	$s0, [$s0];
	ld_kernarg_width(32)_s32	$s0, [$s0];
	ld_kernarg_width(64)_s32	$s0, [$s0];
	ld_kernarg_width(128)_s32	$s0, [$s0];
	ld_kernarg_width(256)_s32	$s0, [$s0];
	ld_kernarg_width(512)_s32	$s0, [$s0];
	ld_kernarg_width(1024)_s32	$s0, [$s0];
	ld_kernarg_width(2048)_s32	$s0, [$s0];
	ld_kernarg_width(4096)_s32	$s0, [$s0];
	ld_kernarg_width(8192)_s32	$s0, [$s0];
	ld_kernarg_width(16384)_s32	$s0, [$s0];
	ld_kernarg_width(32768)_s32	$s0, [$s0];
	ld_kernarg_width(65536)_s32	$s0, [$s0];
	ld_kernarg_width(131072)_s32	$s0, [$s0];
	ld_kernarg_width(262144)_s32	$s0, [$s0];
	ld_kernarg_width(524288)_s32	$s0, [$s0];
	ld_kernarg_width(1048576)_s32	$s0, [$s0];
	ld_kernarg_width(2097152)_s32	$s0, [$s0];
	ld_kernarg_width(4194304)_s32	$s0, [$s0];
	ld_kernarg_width(8388608)_s32	$s0, [$s0];
	ld_kernarg_width(16777216)_s32	$s0, [$s0];
	ld_kernarg_width(33554432)_s32	$s0, [$s0];
	ld_kernarg_width(67108864)_s32	$s0, [$s0];
	ld_kernarg_width(134217728)_s32	$s0, [$s0];
	ld_kernarg_width(268435456)_s32	$s0, [$s0];
	ld_kernarg_width(536870912)_s32	$s0, [$s0];
	ld_kernarg_width(1073741824)_s32	$s0, [$s0];
	ld_kernarg_width(2147483648)_s32	$s0, [$s0];
	ld_kernarg_width(WAVESIZE)_s32	$s0, [$s0];
	ld_kernarg_width(all)_s32	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_group_s32	$s0, [&GroupVar];
	// 
	ld_v2_group_s32	($s0,$s1), [&GroupVar];
	ld_v3_group_s32	($s0,$s1,$s2), [&GroupVar];
	ld_v4_group_s32	($s0,$s1,$s2,$s3), [&GroupVar];
	ld_group_s32	$s0, [$s0];
	ld_group_s32	$s0, [0];
	ld_group_align(2)_s32	$s0, [&GroupVar];
	ld_group_align(4)_s32	$s0, [&GroupVar];
	ld_group_align(8)_s32	$s0, [&GroupVar];
	ld_group_align(16)_s32	$s0, [&GroupVar];
	ld_group_align(32)_s32	$s0, [&GroupVar];
	ld_group_align(64)_s32	$s0, [&GroupVar];
	ld_group_align(128)_s32	$s0, [&GroupVar];
	ld_group_equiv(1)_s32	$s0, [&GroupVar];
	ld_group_equiv(2)_s32	$s0, [&GroupVar];
	ld_group_equiv(255)_s32	$s0, [&GroupVar];
	ld_group_width(2)_s32	$s0, [&GroupVar];
	ld_group_width(4)_s32	$s0, [&GroupVar];
	ld_group_width(8)_s32	$s0, [&GroupVar];
	ld_group_width(16)_s32	$s0, [&GroupVar];
	ld_group_width(32)_s32	$s0, [&GroupVar];
	ld_group_width(64)_s32	$s0, [&GroupVar];
	ld_group_width(128)_s32	$s0, [&GroupVar];
	ld_group_width(256)_s32	$s0, [&GroupVar];
	ld_group_width(512)_s32	$s0, [&GroupVar];
	ld_group_width(1024)_s32	$s0, [&GroupVar];
	ld_group_width(2048)_s32	$s0, [&GroupVar];
	ld_group_width(4096)_s32	$s0, [&GroupVar];
	ld_group_width(8192)_s32	$s0, [&GroupVar];
	ld_group_width(16384)_s32	$s0, [&GroupVar];
	ld_group_width(32768)_s32	$s0, [&GroupVar];
	ld_group_width(65536)_s32	$s0, [&GroupVar];
	ld_group_width(131072)_s32	$s0, [&GroupVar];
	ld_group_width(262144)_s32	$s0, [&GroupVar];
	ld_group_width(524288)_s32	$s0, [&GroupVar];
	ld_group_width(1048576)_s32	$s0, [&GroupVar];
	ld_group_width(2097152)_s32	$s0, [&GroupVar];
	ld_group_width(4194304)_s32	$s0, [&GroupVar];
	ld_group_width(8388608)_s32	$s0, [&GroupVar];
	ld_group_width(16777216)_s32	$s0, [&GroupVar];
	ld_group_width(33554432)_s32	$s0, [&GroupVar];
	ld_group_width(67108864)_s32	$s0, [&GroupVar];
	ld_group_width(134217728)_s32	$s0, [&GroupVar];
	ld_group_width(268435456)_s32	$s0, [&GroupVar];
	ld_group_width(536870912)_s32	$s0, [&GroupVar];
	ld_group_width(1073741824)_s32	$s0, [&GroupVar];
	ld_group_width(2147483648)_s32	$s0, [&GroupVar];
	ld_group_width(WAVESIZE)_s32	$s0, [&GroupVar];
	ld_group_width(all)_s32	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	ld_private_s32	$s0, [&PrivateVar];
	// 
	ld_v2_private_s32	($s0,$s1), [&PrivateVar];
	ld_v3_private_s32	($s0,$s1,$s2), [&PrivateVar];
	ld_v4_private_s32	($s0,$s1,$s2,$s3), [&PrivateVar];
	ld_private_s32	$s0, [$s0];
	ld_private_s32	$s0, [0];
	ld_private_align(2)_s32	$s0, [&PrivateVar];
	ld_private_align(4)_s32	$s0, [&PrivateVar];
	ld_private_align(8)_s32	$s0, [&PrivateVar];
	ld_private_align(16)_s32	$s0, [&PrivateVar];
	ld_private_align(32)_s32	$s0, [&PrivateVar];
	ld_private_align(64)_s32	$s0, [&PrivateVar];
	ld_private_align(128)_s32	$s0, [&PrivateVar];
	ld_private_equiv(1)_s32	$s0, [&PrivateVar];
	ld_private_equiv(2)_s32	$s0, [&PrivateVar];
	ld_private_equiv(255)_s32	$s0, [&PrivateVar];
	ld_private_width(2)_s32	$s0, [&PrivateVar];
	ld_private_width(4)_s32	$s0, [&PrivateVar];
	ld_private_width(8)_s32	$s0, [&PrivateVar];
	ld_private_width(16)_s32	$s0, [&PrivateVar];
	ld_private_width(32)_s32	$s0, [&PrivateVar];
	ld_private_width(64)_s32	$s0, [&PrivateVar];
	ld_private_width(128)_s32	$s0, [&PrivateVar];
	ld_private_width(256)_s32	$s0, [&PrivateVar];
	ld_private_width(512)_s32	$s0, [&PrivateVar];
	ld_private_width(1024)_s32	$s0, [&PrivateVar];
	ld_private_width(2048)_s32	$s0, [&PrivateVar];
	ld_private_width(4096)_s32	$s0, [&PrivateVar];
	ld_private_width(8192)_s32	$s0, [&PrivateVar];
	ld_private_width(16384)_s32	$s0, [&PrivateVar];
	ld_private_width(32768)_s32	$s0, [&PrivateVar];
	ld_private_width(65536)_s32	$s0, [&PrivateVar];
	ld_private_width(131072)_s32	$s0, [&PrivateVar];
	ld_private_width(262144)_s32	$s0, [&PrivateVar];
	ld_private_width(524288)_s32	$s0, [&PrivateVar];
	ld_private_width(1048576)_s32	$s0, [&PrivateVar];
	ld_private_width(2097152)_s32	$s0, [&PrivateVar];
	ld_private_width(4194304)_s32	$s0, [&PrivateVar];
	ld_private_width(8388608)_s32	$s0, [&PrivateVar];
	ld_private_width(16777216)_s32	$s0, [&PrivateVar];
	ld_private_width(33554432)_s32	$s0, [&PrivateVar];
	ld_private_width(67108864)_s32	$s0, [&PrivateVar];
	ld_private_width(134217728)_s32	$s0, [&PrivateVar];
	ld_private_width(268435456)_s32	$s0, [&PrivateVar];
	ld_private_width(536870912)_s32	$s0, [&PrivateVar];
	ld_private_width(1073741824)_s32	$s0, [&PrivateVar];
	ld_private_width(2147483648)_s32	$s0, [&PrivateVar];
	ld_private_width(WAVESIZE)_s32	$s0, [&PrivateVar];
	ld_private_width(all)_s32	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	ld_spill_s32	$s0, [$s0];
	// 
	ld_v2_spill_s32	($s0,$s1), [$s0];
	ld_v3_spill_s32	($s0,$s1,$s2), [$s0];
	ld_v4_spill_s32	($s0,$s1,$s2,$s3), [$s0];
	ld_spill_s32	$s0, [0];
	ld_spill_align(2)_s32	$s0, [$s0];
	ld_spill_align(4)_s32	$s0, [$s0];
	ld_spill_align(8)_s32	$s0, [$s0];
	ld_spill_align(16)_s32	$s0, [$s0];
	ld_spill_align(32)_s32	$s0, [$s0];
	ld_spill_align(64)_s32	$s0, [$s0];
	ld_spill_align(128)_s32	$s0, [$s0];
	ld_spill_equiv(1)_s32	$s0, [$s0];
	ld_spill_equiv(2)_s32	$s0, [$s0];
	ld_spill_equiv(255)_s32	$s0, [$s0];
	ld_spill_width(2)_s32	$s0, [$s0];
	ld_spill_width(4)_s32	$s0, [$s0];
	ld_spill_width(8)_s32	$s0, [$s0];
	ld_spill_width(16)_s32	$s0, [$s0];
	ld_spill_width(32)_s32	$s0, [$s0];
	ld_spill_width(64)_s32	$s0, [$s0];
	ld_spill_width(128)_s32	$s0, [$s0];
	ld_spill_width(256)_s32	$s0, [$s0];
	ld_spill_width(512)_s32	$s0, [$s0];
	ld_spill_width(1024)_s32	$s0, [$s0];
	ld_spill_width(2048)_s32	$s0, [$s0];
	ld_spill_width(4096)_s32	$s0, [$s0];
	ld_spill_width(8192)_s32	$s0, [$s0];
	ld_spill_width(16384)_s32	$s0, [$s0];
	ld_spill_width(32768)_s32	$s0, [$s0];
	ld_spill_width(65536)_s32	$s0, [$s0];
	ld_spill_width(131072)_s32	$s0, [$s0];
	ld_spill_width(262144)_s32	$s0, [$s0];
	ld_spill_width(524288)_s32	$s0, [$s0];
	ld_spill_width(1048576)_s32	$s0, [$s0];
	ld_spill_width(2097152)_s32	$s0, [$s0];
	ld_spill_width(4194304)_s32	$s0, [$s0];
	ld_spill_width(8388608)_s32	$s0, [$s0];
	ld_spill_width(16777216)_s32	$s0, [$s0];
	ld_spill_width(33554432)_s32	$s0, [$s0];
	ld_spill_width(67108864)_s32	$s0, [$s0];
	ld_spill_width(134217728)_s32	$s0, [$s0];
	ld_spill_width(268435456)_s32	$s0, [$s0];
	ld_spill_width(536870912)_s32	$s0, [$s0];
	ld_spill_width(1073741824)_s32	$s0, [$s0];
	ld_spill_width(2147483648)_s32	$s0, [$s0];
	ld_spill_width(WAVESIZE)_s32	$s0, [$s0];
	ld_spill_width(all)_s32	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_s32	$s0, [$s0];
	// 
	ld_v2_arg_s32	($s0,$s1), [$s0];
	ld_v3_arg_s32	($s0,$s1,$s2), [$s0];
	ld_v4_arg_s32	($s0,$s1,$s2,$s3), [$s0];
	ld_arg_s32	$s0, [0];
	ld_arg_align(2)_s32	$s0, [$s0];
	ld_arg_align(4)_s32	$s0, [$s0];
	ld_arg_align(8)_s32	$s0, [$s0];
	ld_arg_align(16)_s32	$s0, [$s0];
	ld_arg_align(32)_s32	$s0, [$s0];
	ld_arg_align(64)_s32	$s0, [$s0];
	ld_arg_align(128)_s32	$s0, [$s0];
	ld_arg_equiv(1)_s32	$s0, [$s0];
	ld_arg_equiv(2)_s32	$s0, [$s0];
	ld_arg_equiv(255)_s32	$s0, [$s0];
	ld_arg_width(2)_s32	$s0, [$s0];
	ld_arg_width(4)_s32	$s0, [$s0];
	ld_arg_width(8)_s32	$s0, [$s0];
	ld_arg_width(16)_s32	$s0, [$s0];
	ld_arg_width(32)_s32	$s0, [$s0];
	ld_arg_width(64)_s32	$s0, [$s0];
	ld_arg_width(128)_s32	$s0, [$s0];
	ld_arg_width(256)_s32	$s0, [$s0];
	ld_arg_width(512)_s32	$s0, [$s0];
	ld_arg_width(1024)_s32	$s0, [$s0];
	ld_arg_width(2048)_s32	$s0, [$s0];
	ld_arg_width(4096)_s32	$s0, [$s0];
	ld_arg_width(8192)_s32	$s0, [$s0];
	ld_arg_width(16384)_s32	$s0, [$s0];
	ld_arg_width(32768)_s32	$s0, [$s0];
	ld_arg_width(65536)_s32	$s0, [$s0];
	ld_arg_width(131072)_s32	$s0, [$s0];
	ld_arg_width(262144)_s32	$s0, [$s0];
	ld_arg_width(524288)_s32	$s0, [$s0];
	ld_arg_width(1048576)_s32	$s0, [$s0];
	ld_arg_width(2097152)_s32	$s0, [$s0];
	ld_arg_width(4194304)_s32	$s0, [$s0];
	ld_arg_width(8388608)_s32	$s0, [$s0];
	ld_arg_width(16777216)_s32	$s0, [$s0];
	ld_arg_width(33554432)_s32	$s0, [$s0];
	ld_arg_width(67108864)_s32	$s0, [$s0];
	ld_arg_width(134217728)_s32	$s0, [$s0];
	ld_arg_width(268435456)_s32	$s0, [$s0];
	ld_arg_width(536870912)_s32	$s0, [$s0];
	ld_arg_width(1073741824)_s32	$s0, [$s0];
	ld_arg_width(2147483648)_s32	$s0, [$s0];
	ld_arg_width(WAVESIZE)_s32	$s0, [$s0];
	ld_arg_width(all)_s32	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_s64	$d0, [$s0];
	// 
	ld_const_s64	$d0, [$s0];
	ld_v2_s64	($d0,$d1), [$s0];
	ld_v3_s64	($d0,$d1,$d2), [$s0];
	ld_v4_s64	($d0,$d1,$d2,$d3), [$s0];
	ld_s64	$d0, [0];
	ld_align(2)_s64	$d0, [$s0];
	ld_align(4)_s64	$d0, [$s0];
	ld_align(8)_s64	$d0, [$s0];
	ld_align(16)_s64	$d0, [$s0];
	ld_align(32)_s64	$d0, [$s0];
	ld_align(64)_s64	$d0, [$s0];
	ld_align(128)_s64	$d0, [$s0];
	ld_equiv(1)_s64	$d0, [$s0];
	ld_equiv(2)_s64	$d0, [$s0];
	ld_equiv(255)_s64	$d0, [$s0];
	ld_width(2)_s64	$d0, [$s0];
	ld_width(4)_s64	$d0, [$s0];
	ld_width(8)_s64	$d0, [$s0];
	ld_width(16)_s64	$d0, [$s0];
	ld_width(32)_s64	$d0, [$s0];
	ld_width(64)_s64	$d0, [$s0];
	ld_width(128)_s64	$d0, [$s0];
	ld_width(256)_s64	$d0, [$s0];
	ld_width(512)_s64	$d0, [$s0];
	ld_width(1024)_s64	$d0, [$s0];
	ld_width(2048)_s64	$d0, [$s0];
	ld_width(4096)_s64	$d0, [$s0];
	ld_width(8192)_s64	$d0, [$s0];
	ld_width(16384)_s64	$d0, [$s0];
	ld_width(32768)_s64	$d0, [$s0];
	ld_width(65536)_s64	$d0, [$s0];
	ld_width(131072)_s64	$d0, [$s0];
	ld_width(262144)_s64	$d0, [$s0];
	ld_width(524288)_s64	$d0, [$s0];
	ld_width(1048576)_s64	$d0, [$s0];
	ld_width(2097152)_s64	$d0, [$s0];
	ld_width(4194304)_s64	$d0, [$s0];
	ld_width(8388608)_s64	$d0, [$s0];
	ld_width(16777216)_s64	$d0, [$s0];
	ld_width(33554432)_s64	$d0, [$s0];
	ld_width(67108864)_s64	$d0, [$s0];
	ld_width(134217728)_s64	$d0, [$s0];
	ld_width(268435456)_s64	$d0, [$s0];
	ld_width(536870912)_s64	$d0, [$s0];
	ld_width(1073741824)_s64	$d0, [$s0];
	ld_width(2147483648)_s64	$d0, [$s0];
	ld_width(WAVESIZE)_s64	$d0, [$s0];
	ld_width(all)_s64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_global_s64	$d0, [&GlobalVar];
	// 
	ld_global_const_s64	$d0, [&GlobalVar];
	ld_v2_global_s64	($d0,$d1), [&GlobalVar];
	ld_v3_global_s64	($d0,$d1,$d2), [&GlobalVar];
	ld_v4_global_s64	($d0,$d1,$d2,$d3), [&GlobalVar];
	ld_global_s64	$d0, [$s0];
	ld_global_s64	$d0, [0];
	ld_global_align(2)_s64	$d0, [&GlobalVar];
	ld_global_align(4)_s64	$d0, [&GlobalVar];
	ld_global_align(8)_s64	$d0, [&GlobalVar];
	ld_global_align(16)_s64	$d0, [&GlobalVar];
	ld_global_align(32)_s64	$d0, [&GlobalVar];
	ld_global_align(64)_s64	$d0, [&GlobalVar];
	ld_global_align(128)_s64	$d0, [&GlobalVar];
	ld_global_equiv(1)_s64	$d0, [&GlobalVar];
	ld_global_equiv(2)_s64	$d0, [&GlobalVar];
	ld_global_equiv(255)_s64	$d0, [&GlobalVar];
	ld_global_width(2)_s64	$d0, [&GlobalVar];
	ld_global_width(4)_s64	$d0, [&GlobalVar];
	ld_global_width(8)_s64	$d0, [&GlobalVar];
	ld_global_width(16)_s64	$d0, [&GlobalVar];
	ld_global_width(32)_s64	$d0, [&GlobalVar];
	ld_global_width(64)_s64	$d0, [&GlobalVar];
	ld_global_width(128)_s64	$d0, [&GlobalVar];
	ld_global_width(256)_s64	$d0, [&GlobalVar];
	ld_global_width(512)_s64	$d0, [&GlobalVar];
	ld_global_width(1024)_s64	$d0, [&GlobalVar];
	ld_global_width(2048)_s64	$d0, [&GlobalVar];
	ld_global_width(4096)_s64	$d0, [&GlobalVar];
	ld_global_width(8192)_s64	$d0, [&GlobalVar];
	ld_global_width(16384)_s64	$d0, [&GlobalVar];
	ld_global_width(32768)_s64	$d0, [&GlobalVar];
	ld_global_width(65536)_s64	$d0, [&GlobalVar];
	ld_global_width(131072)_s64	$d0, [&GlobalVar];
	ld_global_width(262144)_s64	$d0, [&GlobalVar];
	ld_global_width(524288)_s64	$d0, [&GlobalVar];
	ld_global_width(1048576)_s64	$d0, [&GlobalVar];
	ld_global_width(2097152)_s64	$d0, [&GlobalVar];
	ld_global_width(4194304)_s64	$d0, [&GlobalVar];
	ld_global_width(8388608)_s64	$d0, [&GlobalVar];
	ld_global_width(16777216)_s64	$d0, [&GlobalVar];
	ld_global_width(33554432)_s64	$d0, [&GlobalVar];
	ld_global_width(67108864)_s64	$d0, [&GlobalVar];
	ld_global_width(134217728)_s64	$d0, [&GlobalVar];
	ld_global_width(268435456)_s64	$d0, [&GlobalVar];
	ld_global_width(536870912)_s64	$d0, [&GlobalVar];
	ld_global_width(1073741824)_s64	$d0, [&GlobalVar];
	ld_global_width(2147483648)_s64	$d0, [&GlobalVar];
	ld_global_width(WAVESIZE)_s64	$d0, [&GlobalVar];
	ld_global_width(all)_s64	$d0, [&GlobalVar];
	// 
	// Next sample
	// 
	ld_readonly_s64	$d0, [&ReadonlyVar];
	// 
	ld_readonly_const_s64	$d0, [&ReadonlyVar];
	ld_v2_readonly_s64	($d0,$d1), [&ReadonlyVar];
	ld_v3_readonly_s64	($d0,$d1,$d2), [&ReadonlyVar];
	ld_v4_readonly_s64	($d0,$d1,$d2,$d3), [&ReadonlyVar];
	ld_readonly_s64	$d0, [$s0];
	ld_readonly_s64	$d0, [0];
	ld_readonly_align(2)_s64	$d0, [&ReadonlyVar];
	ld_readonly_align(4)_s64	$d0, [&ReadonlyVar];
	ld_readonly_align(8)_s64	$d0, [&ReadonlyVar];
	ld_readonly_align(16)_s64	$d0, [&ReadonlyVar];
	ld_readonly_align(32)_s64	$d0, [&ReadonlyVar];
	ld_readonly_align(64)_s64	$d0, [&ReadonlyVar];
	ld_readonly_align(128)_s64	$d0, [&ReadonlyVar];
	ld_readonly_equiv(1)_s64	$d0, [&ReadonlyVar];
	ld_readonly_equiv(2)_s64	$d0, [&ReadonlyVar];
	ld_readonly_equiv(255)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(2)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(4)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(8)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(16)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(32)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(64)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(128)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(256)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(512)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(1024)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(2048)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(4096)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(8192)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(16384)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(32768)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(65536)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(131072)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(262144)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(524288)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(1048576)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(2097152)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(4194304)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(8388608)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(16777216)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(33554432)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(67108864)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(134217728)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(268435456)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(536870912)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(1073741824)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(2147483648)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(WAVESIZE)_s64	$d0, [&ReadonlyVar];
	ld_readonly_width(all)_s64	$d0, [&ReadonlyVar];
	// 
	// Next sample
	// 
	ld_kernarg_s64	$d0, [$s0];
	// 
	ld_kernarg_const_s64	$d0, [$s0];
	ld_v2_kernarg_s64	($d0,$d1), [$s0];
	ld_v3_kernarg_s64	($d0,$d1,$d2), [$s0];
	ld_v4_kernarg_s64	($d0,$d1,$d2,$d3), [$s0];
	ld_kernarg_s64	$d0, [0];
	ld_kernarg_align(2)_s64	$d0, [$s0];
	ld_kernarg_align(4)_s64	$d0, [$s0];
	ld_kernarg_align(8)_s64	$d0, [$s0];
	ld_kernarg_align(16)_s64	$d0, [$s0];
	ld_kernarg_align(32)_s64	$d0, [$s0];
	ld_kernarg_align(64)_s64	$d0, [$s0];
	ld_kernarg_align(128)_s64	$d0, [$s0];
	ld_kernarg_equiv(1)_s64	$d0, [$s0];
	ld_kernarg_equiv(2)_s64	$d0, [$s0];
	ld_kernarg_equiv(255)_s64	$d0, [$s0];
	ld_kernarg_width(2)_s64	$d0, [$s0];
	ld_kernarg_width(4)_s64	$d0, [$s0];
	ld_kernarg_width(8)_s64	$d0, [$s0];
	ld_kernarg_width(16)_s64	$d0, [$s0];
	ld_kernarg_width(32)_s64	$d0, [$s0];
	ld_kernarg_width(64)_s64	$d0, [$s0];
	ld_kernarg_width(128)_s64	$d0, [$s0];
	ld_kernarg_width(256)_s64	$d0, [$s0];
	ld_kernarg_width(512)_s64	$d0, [$s0];
	ld_kernarg_width(1024)_s64	$d0, [$s0];
	ld_kernarg_width(2048)_s64	$d0, [$s0];
	ld_kernarg_width(4096)_s64	$d0, [$s0];
	ld_kernarg_width(8192)_s64	$d0, [$s0];
	ld_kernarg_width(16384)_s64	$d0, [$s0];
	ld_kernarg_width(32768)_s64	$d0, [$s0];
	ld_kernarg_width(65536)_s64	$d0, [$s0];
	ld_kernarg_width(131072)_s64	$d0, [$s0];
	ld_kernarg_width(262144)_s64	$d0, [$s0];
	ld_kernarg_width(524288)_s64	$d0, [$s0];
	ld_kernarg_width(1048576)_s64	$d0, [$s0];
	ld_kernarg_width(2097152)_s64	$d0, [$s0];
	ld_kernarg_width(4194304)_s64	$d0, [$s0];
	ld_kernarg_width(8388608)_s64	$d0, [$s0];
	ld_kernarg_width(16777216)_s64	$d0, [$s0];
	ld_kernarg_width(33554432)_s64	$d0, [$s0];
	ld_kernarg_width(67108864)_s64	$d0, [$s0];
	ld_kernarg_width(134217728)_s64	$d0, [$s0];
	ld_kernarg_width(268435456)_s64	$d0, [$s0];
	ld_kernarg_width(536870912)_s64	$d0, [$s0];
	ld_kernarg_width(1073741824)_s64	$d0, [$s0];
	ld_kernarg_width(2147483648)_s64	$d0, [$s0];
	ld_kernarg_width(WAVESIZE)_s64	$d0, [$s0];
	ld_kernarg_width(all)_s64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_group_s64	$d0, [&GroupVar];
	// 
	ld_v2_group_s64	($d0,$d1), [&GroupVar];
	ld_v3_group_s64	($d0,$d1,$d2), [&GroupVar];
	ld_v4_group_s64	($d0,$d1,$d2,$d3), [&GroupVar];
	ld_group_s64	$d0, [$s0];
	ld_group_s64	$d0, [0];
	ld_group_align(2)_s64	$d0, [&GroupVar];
	ld_group_align(4)_s64	$d0, [&GroupVar];
	ld_group_align(8)_s64	$d0, [&GroupVar];
	ld_group_align(16)_s64	$d0, [&GroupVar];
	ld_group_align(32)_s64	$d0, [&GroupVar];
	ld_group_align(64)_s64	$d0, [&GroupVar];
	ld_group_align(128)_s64	$d0, [&GroupVar];
	ld_group_equiv(1)_s64	$d0, [&GroupVar];
	ld_group_equiv(2)_s64	$d0, [&GroupVar];
	ld_group_equiv(255)_s64	$d0, [&GroupVar];
	ld_group_width(2)_s64	$d0, [&GroupVar];
	ld_group_width(4)_s64	$d0, [&GroupVar];
	ld_group_width(8)_s64	$d0, [&GroupVar];
	ld_group_width(16)_s64	$d0, [&GroupVar];
	ld_group_width(32)_s64	$d0, [&GroupVar];
	ld_group_width(64)_s64	$d0, [&GroupVar];
	ld_group_width(128)_s64	$d0, [&GroupVar];
	ld_group_width(256)_s64	$d0, [&GroupVar];
	ld_group_width(512)_s64	$d0, [&GroupVar];
	ld_group_width(1024)_s64	$d0, [&GroupVar];
	ld_group_width(2048)_s64	$d0, [&GroupVar];
	ld_group_width(4096)_s64	$d0, [&GroupVar];
	ld_group_width(8192)_s64	$d0, [&GroupVar];
	ld_group_width(16384)_s64	$d0, [&GroupVar];
	ld_group_width(32768)_s64	$d0, [&GroupVar];
	ld_group_width(65536)_s64	$d0, [&GroupVar];
	ld_group_width(131072)_s64	$d0, [&GroupVar];
	ld_group_width(262144)_s64	$d0, [&GroupVar];
	ld_group_width(524288)_s64	$d0, [&GroupVar];
	ld_group_width(1048576)_s64	$d0, [&GroupVar];
	ld_group_width(2097152)_s64	$d0, [&GroupVar];
	ld_group_width(4194304)_s64	$d0, [&GroupVar];
	ld_group_width(8388608)_s64	$d0, [&GroupVar];
	ld_group_width(16777216)_s64	$d0, [&GroupVar];
	ld_group_width(33554432)_s64	$d0, [&GroupVar];
	ld_group_width(67108864)_s64	$d0, [&GroupVar];
	ld_group_width(134217728)_s64	$d0, [&GroupVar];
	ld_group_width(268435456)_s64	$d0, [&GroupVar];
	ld_group_width(536870912)_s64	$d0, [&GroupVar];
	ld_group_width(1073741824)_s64	$d0, [&GroupVar];
	ld_group_width(2147483648)_s64	$d0, [&GroupVar];
	ld_group_width(WAVESIZE)_s64	$d0, [&GroupVar];
	ld_group_width(all)_s64	$d0, [&GroupVar];
	// 
	// Next sample
	// 
	ld_private_s64	$d0, [&PrivateVar];
	// 
	ld_v2_private_s64	($d0,$d1), [&PrivateVar];
	ld_v3_private_s64	($d0,$d1,$d2), [&PrivateVar];
	ld_v4_private_s64	($d0,$d1,$d2,$d3), [&PrivateVar];
	ld_private_s64	$d0, [$s0];
	ld_private_s64	$d0, [0];
	ld_private_align(2)_s64	$d0, [&PrivateVar];
	ld_private_align(4)_s64	$d0, [&PrivateVar];
	ld_private_align(8)_s64	$d0, [&PrivateVar];
	ld_private_align(16)_s64	$d0, [&PrivateVar];
	ld_private_align(32)_s64	$d0, [&PrivateVar];
	ld_private_align(64)_s64	$d0, [&PrivateVar];
	ld_private_align(128)_s64	$d0, [&PrivateVar];
	ld_private_equiv(1)_s64	$d0, [&PrivateVar];
	ld_private_equiv(2)_s64	$d0, [&PrivateVar];
	ld_private_equiv(255)_s64	$d0, [&PrivateVar];
	ld_private_width(2)_s64	$d0, [&PrivateVar];
	ld_private_width(4)_s64	$d0, [&PrivateVar];
	ld_private_width(8)_s64	$d0, [&PrivateVar];
	ld_private_width(16)_s64	$d0, [&PrivateVar];
	ld_private_width(32)_s64	$d0, [&PrivateVar];
	ld_private_width(64)_s64	$d0, [&PrivateVar];
	ld_private_width(128)_s64	$d0, [&PrivateVar];
	ld_private_width(256)_s64	$d0, [&PrivateVar];
	ld_private_width(512)_s64	$d0, [&PrivateVar];
	ld_private_width(1024)_s64	$d0, [&PrivateVar];
	ld_private_width(2048)_s64	$d0, [&PrivateVar];
	ld_private_width(4096)_s64	$d0, [&PrivateVar];
	ld_private_width(8192)_s64	$d0, [&PrivateVar];
	ld_private_width(16384)_s64	$d0, [&PrivateVar];
	ld_private_width(32768)_s64	$d0, [&PrivateVar];
	ld_private_width(65536)_s64	$d0, [&PrivateVar];
	ld_private_width(131072)_s64	$d0, [&PrivateVar];
	ld_private_width(262144)_s64	$d0, [&PrivateVar];
	ld_private_width(524288)_s64	$d0, [&PrivateVar];
	ld_private_width(1048576)_s64	$d0, [&PrivateVar];
	ld_private_width(2097152)_s64	$d0, [&PrivateVar];
	ld_private_width(4194304)_s64	$d0, [&PrivateVar];
	ld_private_width(8388608)_s64	$d0, [&PrivateVar];
	ld_private_width(16777216)_s64	$d0, [&PrivateVar];
	ld_private_width(33554432)_s64	$d0, [&PrivateVar];
	ld_private_width(67108864)_s64	$d0, [&PrivateVar];
	ld_private_width(134217728)_s64	$d0, [&PrivateVar];
	ld_private_width(268435456)_s64	$d0, [&PrivateVar];
	ld_private_width(536870912)_s64	$d0, [&PrivateVar];
	ld_private_width(1073741824)_s64	$d0, [&PrivateVar];
	ld_private_width(2147483648)_s64	$d0, [&PrivateVar];
	ld_private_width(WAVESIZE)_s64	$d0, [&PrivateVar];
	ld_private_width(all)_s64	$d0, [&PrivateVar];
	// 
	// Next sample
	// 
	ld_spill_s64	$d0, [$s0];
	// 
	ld_v2_spill_s64	($d0,$d1), [$s0];
	ld_v3_spill_s64	($d0,$d1,$d2), [$s0];
	ld_v4_spill_s64	($d0,$d1,$d2,$d3), [$s0];
	ld_spill_s64	$d0, [0];
	ld_spill_align(2)_s64	$d0, [$s0];
	ld_spill_align(4)_s64	$d0, [$s0];
	ld_spill_align(8)_s64	$d0, [$s0];
	ld_spill_align(16)_s64	$d0, [$s0];
	ld_spill_align(32)_s64	$d0, [$s0];
	ld_spill_align(64)_s64	$d0, [$s0];
	ld_spill_align(128)_s64	$d0, [$s0];
	ld_spill_equiv(1)_s64	$d0, [$s0];
	ld_spill_equiv(2)_s64	$d0, [$s0];
	ld_spill_equiv(255)_s64	$d0, [$s0];
	ld_spill_width(2)_s64	$d0, [$s0];
	ld_spill_width(4)_s64	$d0, [$s0];
	ld_spill_width(8)_s64	$d0, [$s0];
	ld_spill_width(16)_s64	$d0, [$s0];
	ld_spill_width(32)_s64	$d0, [$s0];
	ld_spill_width(64)_s64	$d0, [$s0];
	ld_spill_width(128)_s64	$d0, [$s0];
	ld_spill_width(256)_s64	$d0, [$s0];
	ld_spill_width(512)_s64	$d0, [$s0];
	ld_spill_width(1024)_s64	$d0, [$s0];
	ld_spill_width(2048)_s64	$d0, [$s0];
	ld_spill_width(4096)_s64	$d0, [$s0];
	ld_spill_width(8192)_s64	$d0, [$s0];
	ld_spill_width(16384)_s64	$d0, [$s0];
	ld_spill_width(32768)_s64	$d0, [$s0];
	ld_spill_width(65536)_s64	$d0, [$s0];
	ld_spill_width(131072)_s64	$d0, [$s0];
	ld_spill_width(262144)_s64	$d0, [$s0];
	ld_spill_width(524288)_s64	$d0, [$s0];
	ld_spill_width(1048576)_s64	$d0, [$s0];
	ld_spill_width(2097152)_s64	$d0, [$s0];
	ld_spill_width(4194304)_s64	$d0, [$s0];
	ld_spill_width(8388608)_s64	$d0, [$s0];
	ld_spill_width(16777216)_s64	$d0, [$s0];
	ld_spill_width(33554432)_s64	$d0, [$s0];
	ld_spill_width(67108864)_s64	$d0, [$s0];
	ld_spill_width(134217728)_s64	$d0, [$s0];
	ld_spill_width(268435456)_s64	$d0, [$s0];
	ld_spill_width(536870912)_s64	$d0, [$s0];
	ld_spill_width(1073741824)_s64	$d0, [$s0];
	ld_spill_width(2147483648)_s64	$d0, [$s0];
	ld_spill_width(WAVESIZE)_s64	$d0, [$s0];
	ld_spill_width(all)_s64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_s64	$d0, [$s0];
	// 
	ld_v2_arg_s64	($d0,$d1), [$s0];
	ld_v3_arg_s64	($d0,$d1,$d2), [$s0];
	ld_v4_arg_s64	($d0,$d1,$d2,$d3), [$s0];
	ld_arg_s64	$d0, [0];
	ld_arg_align(2)_s64	$d0, [$s0];
	ld_arg_align(4)_s64	$d0, [$s0];
	ld_arg_align(8)_s64	$d0, [$s0];
	ld_arg_align(16)_s64	$d0, [$s0];
	ld_arg_align(32)_s64	$d0, [$s0];
	ld_arg_align(64)_s64	$d0, [$s0];
	ld_arg_align(128)_s64	$d0, [$s0];
	ld_arg_equiv(1)_s64	$d0, [$s0];
	ld_arg_equiv(2)_s64	$d0, [$s0];
	ld_arg_equiv(255)_s64	$d0, [$s0];
	ld_arg_width(2)_s64	$d0, [$s0];
	ld_arg_width(4)_s64	$d0, [$s0];
	ld_arg_width(8)_s64	$d0, [$s0];
	ld_arg_width(16)_s64	$d0, [$s0];
	ld_arg_width(32)_s64	$d0, [$s0];
	ld_arg_width(64)_s64	$d0, [$s0];
	ld_arg_width(128)_s64	$d0, [$s0];
	ld_arg_width(256)_s64	$d0, [$s0];
	ld_arg_width(512)_s64	$d0, [$s0];
	ld_arg_width(1024)_s64	$d0, [$s0];
	ld_arg_width(2048)_s64	$d0, [$s0];
	ld_arg_width(4096)_s64	$d0, [$s0];
	ld_arg_width(8192)_s64	$d0, [$s0];
	ld_arg_width(16384)_s64	$d0, [$s0];
	ld_arg_width(32768)_s64	$d0, [$s0];
	ld_arg_width(65536)_s64	$d0, [$s0];
	ld_arg_width(131072)_s64	$d0, [$s0];
	ld_arg_width(262144)_s64	$d0, [$s0];
	ld_arg_width(524288)_s64	$d0, [$s0];
	ld_arg_width(1048576)_s64	$d0, [$s0];
	ld_arg_width(2097152)_s64	$d0, [$s0];
	ld_arg_width(4194304)_s64	$d0, [$s0];
	ld_arg_width(8388608)_s64	$d0, [$s0];
	ld_arg_width(16777216)_s64	$d0, [$s0];
	ld_arg_width(33554432)_s64	$d0, [$s0];
	ld_arg_width(67108864)_s64	$d0, [$s0];
	ld_arg_width(134217728)_s64	$d0, [$s0];
	ld_arg_width(268435456)_s64	$d0, [$s0];
	ld_arg_width(536870912)_s64	$d0, [$s0];
	ld_arg_width(1073741824)_s64	$d0, [$s0];
	ld_arg_width(2147483648)_s64	$d0, [$s0];
	ld_arg_width(WAVESIZE)_s64	$d0, [$s0];
	ld_arg_width(all)_s64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_f16	$s0, [$s0];
	// 
	ld_const_f16	$s0, [$s0];
	ld_v2_f16	($s0,$s1), [$s0];
	ld_v3_f16	($s0,$s1,$s2), [$s0];
	ld_v4_f16	($s0,$s1,$s2,$s3), [$s0];
	ld_f16	$s0, [0];
	ld_align(2)_f16	$s0, [$s0];
	ld_align(4)_f16	$s0, [$s0];
	ld_align(8)_f16	$s0, [$s0];
	ld_align(16)_f16	$s0, [$s0];
	ld_align(32)_f16	$s0, [$s0];
	ld_align(64)_f16	$s0, [$s0];
	ld_align(128)_f16	$s0, [$s0];
	ld_equiv(1)_f16	$s0, [$s0];
	ld_equiv(2)_f16	$s0, [$s0];
	ld_equiv(255)_f16	$s0, [$s0];
	ld_width(2)_f16	$s0, [$s0];
	ld_width(4)_f16	$s0, [$s0];
	ld_width(8)_f16	$s0, [$s0];
	ld_width(16)_f16	$s0, [$s0];
	ld_width(32)_f16	$s0, [$s0];
	ld_width(64)_f16	$s0, [$s0];
	ld_width(128)_f16	$s0, [$s0];
	ld_width(256)_f16	$s0, [$s0];
	ld_width(512)_f16	$s0, [$s0];
	ld_width(1024)_f16	$s0, [$s0];
	ld_width(2048)_f16	$s0, [$s0];
	ld_width(4096)_f16	$s0, [$s0];
	ld_width(8192)_f16	$s0, [$s0];
	ld_width(16384)_f16	$s0, [$s0];
	ld_width(32768)_f16	$s0, [$s0];
	ld_width(65536)_f16	$s0, [$s0];
	ld_width(131072)_f16	$s0, [$s0];
	ld_width(262144)_f16	$s0, [$s0];
	ld_width(524288)_f16	$s0, [$s0];
	ld_width(1048576)_f16	$s0, [$s0];
	ld_width(2097152)_f16	$s0, [$s0];
	ld_width(4194304)_f16	$s0, [$s0];
	ld_width(8388608)_f16	$s0, [$s0];
	ld_width(16777216)_f16	$s0, [$s0];
	ld_width(33554432)_f16	$s0, [$s0];
	ld_width(67108864)_f16	$s0, [$s0];
	ld_width(134217728)_f16	$s0, [$s0];
	ld_width(268435456)_f16	$s0, [$s0];
	ld_width(536870912)_f16	$s0, [$s0];
	ld_width(1073741824)_f16	$s0, [$s0];
	ld_width(2147483648)_f16	$s0, [$s0];
	ld_width(WAVESIZE)_f16	$s0, [$s0];
	ld_width(all)_f16	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_global_f16	$s0, [&GlobalVar];
	// 
	ld_global_const_f16	$s0, [&GlobalVar];
	ld_v2_global_f16	($s0,$s1), [&GlobalVar];
	ld_v3_global_f16	($s0,$s1,$s2), [&GlobalVar];
	ld_v4_global_f16	($s0,$s1,$s2,$s3), [&GlobalVar];
	ld_global_f16	$s0, [$s0];
	ld_global_f16	$s0, [0];
	ld_global_align(2)_f16	$s0, [&GlobalVar];
	ld_global_align(4)_f16	$s0, [&GlobalVar];
	ld_global_align(8)_f16	$s0, [&GlobalVar];
	ld_global_align(16)_f16	$s0, [&GlobalVar];
	ld_global_align(32)_f16	$s0, [&GlobalVar];
	ld_global_align(64)_f16	$s0, [&GlobalVar];
	ld_global_align(128)_f16	$s0, [&GlobalVar];
	ld_global_equiv(1)_f16	$s0, [&GlobalVar];
	ld_global_equiv(2)_f16	$s0, [&GlobalVar];
	ld_global_equiv(255)_f16	$s0, [&GlobalVar];
	ld_global_width(2)_f16	$s0, [&GlobalVar];
	ld_global_width(4)_f16	$s0, [&GlobalVar];
	ld_global_width(8)_f16	$s0, [&GlobalVar];
	ld_global_width(16)_f16	$s0, [&GlobalVar];
	ld_global_width(32)_f16	$s0, [&GlobalVar];
	ld_global_width(64)_f16	$s0, [&GlobalVar];
	ld_global_width(128)_f16	$s0, [&GlobalVar];
	ld_global_width(256)_f16	$s0, [&GlobalVar];
	ld_global_width(512)_f16	$s0, [&GlobalVar];
	ld_global_width(1024)_f16	$s0, [&GlobalVar];
	ld_global_width(2048)_f16	$s0, [&GlobalVar];
	ld_global_width(4096)_f16	$s0, [&GlobalVar];
	ld_global_width(8192)_f16	$s0, [&GlobalVar];
	ld_global_width(16384)_f16	$s0, [&GlobalVar];
	ld_global_width(32768)_f16	$s0, [&GlobalVar];
	ld_global_width(65536)_f16	$s0, [&GlobalVar];
	ld_global_width(131072)_f16	$s0, [&GlobalVar];
	ld_global_width(262144)_f16	$s0, [&GlobalVar];
	ld_global_width(524288)_f16	$s0, [&GlobalVar];
	ld_global_width(1048576)_f16	$s0, [&GlobalVar];
	ld_global_width(2097152)_f16	$s0, [&GlobalVar];
	ld_global_width(4194304)_f16	$s0, [&GlobalVar];
	ld_global_width(8388608)_f16	$s0, [&GlobalVar];
	ld_global_width(16777216)_f16	$s0, [&GlobalVar];
	ld_global_width(33554432)_f16	$s0, [&GlobalVar];
	ld_global_width(67108864)_f16	$s0, [&GlobalVar];
	ld_global_width(134217728)_f16	$s0, [&GlobalVar];
	ld_global_width(268435456)_f16	$s0, [&GlobalVar];
	ld_global_width(536870912)_f16	$s0, [&GlobalVar];
	ld_global_width(1073741824)_f16	$s0, [&GlobalVar];
	ld_global_width(2147483648)_f16	$s0, [&GlobalVar];
	ld_global_width(WAVESIZE)_f16	$s0, [&GlobalVar];
	ld_global_width(all)_f16	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	ld_readonly_f16	$s0, [&ReadonlyVar];
	// 
	ld_readonly_const_f16	$s0, [&ReadonlyVar];
	ld_v2_readonly_f16	($s0,$s1), [&ReadonlyVar];
	ld_v3_readonly_f16	($s0,$s1,$s2), [&ReadonlyVar];
	ld_v4_readonly_f16	($s0,$s1,$s2,$s3), [&ReadonlyVar];
	ld_readonly_f16	$s0, [$s0];
	ld_readonly_f16	$s0, [0];
	ld_readonly_align(2)_f16	$s0, [&ReadonlyVar];
	ld_readonly_align(4)_f16	$s0, [&ReadonlyVar];
	ld_readonly_align(8)_f16	$s0, [&ReadonlyVar];
	ld_readonly_align(16)_f16	$s0, [&ReadonlyVar];
	ld_readonly_align(32)_f16	$s0, [&ReadonlyVar];
	ld_readonly_align(64)_f16	$s0, [&ReadonlyVar];
	ld_readonly_align(128)_f16	$s0, [&ReadonlyVar];
	ld_readonly_equiv(1)_f16	$s0, [&ReadonlyVar];
	ld_readonly_equiv(2)_f16	$s0, [&ReadonlyVar];
	ld_readonly_equiv(255)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(2)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(4)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(8)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(16)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(32)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(64)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(128)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(256)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(512)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(1024)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(2048)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(4096)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(8192)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(16384)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(32768)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(65536)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(131072)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(262144)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(524288)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(1048576)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(2097152)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(4194304)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(8388608)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(16777216)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(33554432)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(67108864)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(134217728)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(268435456)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(536870912)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(1073741824)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(2147483648)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(WAVESIZE)_f16	$s0, [&ReadonlyVar];
	ld_readonly_width(all)_f16	$s0, [&ReadonlyVar];
	// 
	// Next sample
	// 
	ld_kernarg_f16	$s0, [$s0];
	// 
	ld_kernarg_const_f16	$s0, [$s0];
	ld_v2_kernarg_f16	($s0,$s1), [$s0];
	ld_v3_kernarg_f16	($s0,$s1,$s2), [$s0];
	ld_v4_kernarg_f16	($s0,$s1,$s2,$s3), [$s0];
	ld_kernarg_f16	$s0, [0];
	ld_kernarg_align(2)_f16	$s0, [$s0];
	ld_kernarg_align(4)_f16	$s0, [$s0];
	ld_kernarg_align(8)_f16	$s0, [$s0];
	ld_kernarg_align(16)_f16	$s0, [$s0];
	ld_kernarg_align(32)_f16	$s0, [$s0];
	ld_kernarg_align(64)_f16	$s0, [$s0];
	ld_kernarg_align(128)_f16	$s0, [$s0];
	ld_kernarg_equiv(1)_f16	$s0, [$s0];
	ld_kernarg_equiv(2)_f16	$s0, [$s0];
	ld_kernarg_equiv(255)_f16	$s0, [$s0];
	ld_kernarg_width(2)_f16	$s0, [$s0];
	ld_kernarg_width(4)_f16	$s0, [$s0];
	ld_kernarg_width(8)_f16	$s0, [$s0];
	ld_kernarg_width(16)_f16	$s0, [$s0];
	ld_kernarg_width(32)_f16	$s0, [$s0];
	ld_kernarg_width(64)_f16	$s0, [$s0];
	ld_kernarg_width(128)_f16	$s0, [$s0];
	ld_kernarg_width(256)_f16	$s0, [$s0];
	ld_kernarg_width(512)_f16	$s0, [$s0];
	ld_kernarg_width(1024)_f16	$s0, [$s0];
	ld_kernarg_width(2048)_f16	$s0, [$s0];
	ld_kernarg_width(4096)_f16	$s0, [$s0];
	ld_kernarg_width(8192)_f16	$s0, [$s0];
	ld_kernarg_width(16384)_f16	$s0, [$s0];
	ld_kernarg_width(32768)_f16	$s0, [$s0];
	ld_kernarg_width(65536)_f16	$s0, [$s0];
	ld_kernarg_width(131072)_f16	$s0, [$s0];
	ld_kernarg_width(262144)_f16	$s0, [$s0];
	ld_kernarg_width(524288)_f16	$s0, [$s0];
	ld_kernarg_width(1048576)_f16	$s0, [$s0];
	ld_kernarg_width(2097152)_f16	$s0, [$s0];
	ld_kernarg_width(4194304)_f16	$s0, [$s0];
	ld_kernarg_width(8388608)_f16	$s0, [$s0];
	ld_kernarg_width(16777216)_f16	$s0, [$s0];
	ld_kernarg_width(33554432)_f16	$s0, [$s0];
	ld_kernarg_width(67108864)_f16	$s0, [$s0];
	ld_kernarg_width(134217728)_f16	$s0, [$s0];
	ld_kernarg_width(268435456)_f16	$s0, [$s0];
	ld_kernarg_width(536870912)_f16	$s0, [$s0];
	ld_kernarg_width(1073741824)_f16	$s0, [$s0];
	ld_kernarg_width(2147483648)_f16	$s0, [$s0];
	ld_kernarg_width(WAVESIZE)_f16	$s0, [$s0];
	ld_kernarg_width(all)_f16	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_group_f16	$s0, [&GroupVar];
	// 
	ld_v2_group_f16	($s0,$s1), [&GroupVar];
	ld_v3_group_f16	($s0,$s1,$s2), [&GroupVar];
	ld_v4_group_f16	($s0,$s1,$s2,$s3), [&GroupVar];
	ld_group_f16	$s0, [$s0];
	ld_group_f16	$s0, [0];
	ld_group_align(2)_f16	$s0, [&GroupVar];
	ld_group_align(4)_f16	$s0, [&GroupVar];
	ld_group_align(8)_f16	$s0, [&GroupVar];
	ld_group_align(16)_f16	$s0, [&GroupVar];
	ld_group_align(32)_f16	$s0, [&GroupVar];
	ld_group_align(64)_f16	$s0, [&GroupVar];
	ld_group_align(128)_f16	$s0, [&GroupVar];
	ld_group_equiv(1)_f16	$s0, [&GroupVar];
	ld_group_equiv(2)_f16	$s0, [&GroupVar];
	ld_group_equiv(255)_f16	$s0, [&GroupVar];
	ld_group_width(2)_f16	$s0, [&GroupVar];
	ld_group_width(4)_f16	$s0, [&GroupVar];
	ld_group_width(8)_f16	$s0, [&GroupVar];
	ld_group_width(16)_f16	$s0, [&GroupVar];
	ld_group_width(32)_f16	$s0, [&GroupVar];
	ld_group_width(64)_f16	$s0, [&GroupVar];
	ld_group_width(128)_f16	$s0, [&GroupVar];
	ld_group_width(256)_f16	$s0, [&GroupVar];
	ld_group_width(512)_f16	$s0, [&GroupVar];
	ld_group_width(1024)_f16	$s0, [&GroupVar];
	ld_group_width(2048)_f16	$s0, [&GroupVar];
	ld_group_width(4096)_f16	$s0, [&GroupVar];
	ld_group_width(8192)_f16	$s0, [&GroupVar];
	ld_group_width(16384)_f16	$s0, [&GroupVar];
	ld_group_width(32768)_f16	$s0, [&GroupVar];
	ld_group_width(65536)_f16	$s0, [&GroupVar];
	ld_group_width(131072)_f16	$s0, [&GroupVar];
	ld_group_width(262144)_f16	$s0, [&GroupVar];
	ld_group_width(524288)_f16	$s0, [&GroupVar];
	ld_group_width(1048576)_f16	$s0, [&GroupVar];
	ld_group_width(2097152)_f16	$s0, [&GroupVar];
	ld_group_width(4194304)_f16	$s0, [&GroupVar];
	ld_group_width(8388608)_f16	$s0, [&GroupVar];
	ld_group_width(16777216)_f16	$s0, [&GroupVar];
	ld_group_width(33554432)_f16	$s0, [&GroupVar];
	ld_group_width(67108864)_f16	$s0, [&GroupVar];
	ld_group_width(134217728)_f16	$s0, [&GroupVar];
	ld_group_width(268435456)_f16	$s0, [&GroupVar];
	ld_group_width(536870912)_f16	$s0, [&GroupVar];
	ld_group_width(1073741824)_f16	$s0, [&GroupVar];
	ld_group_width(2147483648)_f16	$s0, [&GroupVar];
	ld_group_width(WAVESIZE)_f16	$s0, [&GroupVar];
	ld_group_width(all)_f16	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	ld_private_f16	$s0, [&PrivateVar];
	// 
	ld_v2_private_f16	($s0,$s1), [&PrivateVar];
	ld_v3_private_f16	($s0,$s1,$s2), [&PrivateVar];
	ld_v4_private_f16	($s0,$s1,$s2,$s3), [&PrivateVar];
	ld_private_f16	$s0, [$s0];
	ld_private_f16	$s0, [0];
	ld_private_align(2)_f16	$s0, [&PrivateVar];
	ld_private_align(4)_f16	$s0, [&PrivateVar];
	ld_private_align(8)_f16	$s0, [&PrivateVar];
	ld_private_align(16)_f16	$s0, [&PrivateVar];
	ld_private_align(32)_f16	$s0, [&PrivateVar];
	ld_private_align(64)_f16	$s0, [&PrivateVar];
	ld_private_align(128)_f16	$s0, [&PrivateVar];
	ld_private_equiv(1)_f16	$s0, [&PrivateVar];
	ld_private_equiv(2)_f16	$s0, [&PrivateVar];
	ld_private_equiv(255)_f16	$s0, [&PrivateVar];
	ld_private_width(2)_f16	$s0, [&PrivateVar];
	ld_private_width(4)_f16	$s0, [&PrivateVar];
	ld_private_width(8)_f16	$s0, [&PrivateVar];
	ld_private_width(16)_f16	$s0, [&PrivateVar];
	ld_private_width(32)_f16	$s0, [&PrivateVar];
	ld_private_width(64)_f16	$s0, [&PrivateVar];
	ld_private_width(128)_f16	$s0, [&PrivateVar];
	ld_private_width(256)_f16	$s0, [&PrivateVar];
	ld_private_width(512)_f16	$s0, [&PrivateVar];
	ld_private_width(1024)_f16	$s0, [&PrivateVar];
	ld_private_width(2048)_f16	$s0, [&PrivateVar];
	ld_private_width(4096)_f16	$s0, [&PrivateVar];
	ld_private_width(8192)_f16	$s0, [&PrivateVar];
	ld_private_width(16384)_f16	$s0, [&PrivateVar];
	ld_private_width(32768)_f16	$s0, [&PrivateVar];
	ld_private_width(65536)_f16	$s0, [&PrivateVar];
	ld_private_width(131072)_f16	$s0, [&PrivateVar];
	ld_private_width(262144)_f16	$s0, [&PrivateVar];
	ld_private_width(524288)_f16	$s0, [&PrivateVar];
	ld_private_width(1048576)_f16	$s0, [&PrivateVar];
	ld_private_width(2097152)_f16	$s0, [&PrivateVar];
	ld_private_width(4194304)_f16	$s0, [&PrivateVar];
	ld_private_width(8388608)_f16	$s0, [&PrivateVar];
	ld_private_width(16777216)_f16	$s0, [&PrivateVar];
	ld_private_width(33554432)_f16	$s0, [&PrivateVar];
	ld_private_width(67108864)_f16	$s0, [&PrivateVar];
	ld_private_width(134217728)_f16	$s0, [&PrivateVar];
	ld_private_width(268435456)_f16	$s0, [&PrivateVar];
	ld_private_width(536870912)_f16	$s0, [&PrivateVar];
	ld_private_width(1073741824)_f16	$s0, [&PrivateVar];
	ld_private_width(2147483648)_f16	$s0, [&PrivateVar];
	ld_private_width(WAVESIZE)_f16	$s0, [&PrivateVar];
	ld_private_width(all)_f16	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	ld_spill_f16	$s0, [$s0];
	// 
	ld_v2_spill_f16	($s0,$s1), [$s0];
	ld_v3_spill_f16	($s0,$s1,$s2), [$s0];
	ld_v4_spill_f16	($s0,$s1,$s2,$s3), [$s0];
	ld_spill_f16	$s0, [0];
	ld_spill_align(2)_f16	$s0, [$s0];
	ld_spill_align(4)_f16	$s0, [$s0];
	ld_spill_align(8)_f16	$s0, [$s0];
	ld_spill_align(16)_f16	$s0, [$s0];
	ld_spill_align(32)_f16	$s0, [$s0];
	ld_spill_align(64)_f16	$s0, [$s0];
	ld_spill_align(128)_f16	$s0, [$s0];
	ld_spill_equiv(1)_f16	$s0, [$s0];
	ld_spill_equiv(2)_f16	$s0, [$s0];
	ld_spill_equiv(255)_f16	$s0, [$s0];
	ld_spill_width(2)_f16	$s0, [$s0];
	ld_spill_width(4)_f16	$s0, [$s0];
	ld_spill_width(8)_f16	$s0, [$s0];
	ld_spill_width(16)_f16	$s0, [$s0];
	ld_spill_width(32)_f16	$s0, [$s0];
	ld_spill_width(64)_f16	$s0, [$s0];
	ld_spill_width(128)_f16	$s0, [$s0];
	ld_spill_width(256)_f16	$s0, [$s0];
	ld_spill_width(512)_f16	$s0, [$s0];
	ld_spill_width(1024)_f16	$s0, [$s0];
	ld_spill_width(2048)_f16	$s0, [$s0];
	ld_spill_width(4096)_f16	$s0, [$s0];
	ld_spill_width(8192)_f16	$s0, [$s0];
	ld_spill_width(16384)_f16	$s0, [$s0];
	ld_spill_width(32768)_f16	$s0, [$s0];
	ld_spill_width(65536)_f16	$s0, [$s0];
	ld_spill_width(131072)_f16	$s0, [$s0];
	ld_spill_width(262144)_f16	$s0, [$s0];
	ld_spill_width(524288)_f16	$s0, [$s0];
	ld_spill_width(1048576)_f16	$s0, [$s0];
	ld_spill_width(2097152)_f16	$s0, [$s0];
	ld_spill_width(4194304)_f16	$s0, [$s0];
	ld_spill_width(8388608)_f16	$s0, [$s0];
	ld_spill_width(16777216)_f16	$s0, [$s0];
	ld_spill_width(33554432)_f16	$s0, [$s0];
	ld_spill_width(67108864)_f16	$s0, [$s0];
	ld_spill_width(134217728)_f16	$s0, [$s0];
	ld_spill_width(268435456)_f16	$s0, [$s0];
	ld_spill_width(536870912)_f16	$s0, [$s0];
	ld_spill_width(1073741824)_f16	$s0, [$s0];
	ld_spill_width(2147483648)_f16	$s0, [$s0];
	ld_spill_width(WAVESIZE)_f16	$s0, [$s0];
	ld_spill_width(all)_f16	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_f16	$s0, [$s0];
	// 
	ld_v2_arg_f16	($s0,$s1), [$s0];
	ld_v3_arg_f16	($s0,$s1,$s2), [$s0];
	ld_v4_arg_f16	($s0,$s1,$s2,$s3), [$s0];
	ld_arg_f16	$s0, [0];
	ld_arg_align(2)_f16	$s0, [$s0];
	ld_arg_align(4)_f16	$s0, [$s0];
	ld_arg_align(8)_f16	$s0, [$s0];
	ld_arg_align(16)_f16	$s0, [$s0];
	ld_arg_align(32)_f16	$s0, [$s0];
	ld_arg_align(64)_f16	$s0, [$s0];
	ld_arg_align(128)_f16	$s0, [$s0];
	ld_arg_equiv(1)_f16	$s0, [$s0];
	ld_arg_equiv(2)_f16	$s0, [$s0];
	ld_arg_equiv(255)_f16	$s0, [$s0];
	ld_arg_width(2)_f16	$s0, [$s0];
	ld_arg_width(4)_f16	$s0, [$s0];
	ld_arg_width(8)_f16	$s0, [$s0];
	ld_arg_width(16)_f16	$s0, [$s0];
	ld_arg_width(32)_f16	$s0, [$s0];
	ld_arg_width(64)_f16	$s0, [$s0];
	ld_arg_width(128)_f16	$s0, [$s0];
	ld_arg_width(256)_f16	$s0, [$s0];
	ld_arg_width(512)_f16	$s0, [$s0];
	ld_arg_width(1024)_f16	$s0, [$s0];
	ld_arg_width(2048)_f16	$s0, [$s0];
	ld_arg_width(4096)_f16	$s0, [$s0];
	ld_arg_width(8192)_f16	$s0, [$s0];
	ld_arg_width(16384)_f16	$s0, [$s0];
	ld_arg_width(32768)_f16	$s0, [$s0];
	ld_arg_width(65536)_f16	$s0, [$s0];
	ld_arg_width(131072)_f16	$s0, [$s0];
	ld_arg_width(262144)_f16	$s0, [$s0];
	ld_arg_width(524288)_f16	$s0, [$s0];
	ld_arg_width(1048576)_f16	$s0, [$s0];
	ld_arg_width(2097152)_f16	$s0, [$s0];
	ld_arg_width(4194304)_f16	$s0, [$s0];
	ld_arg_width(8388608)_f16	$s0, [$s0];
	ld_arg_width(16777216)_f16	$s0, [$s0];
	ld_arg_width(33554432)_f16	$s0, [$s0];
	ld_arg_width(67108864)_f16	$s0, [$s0];
	ld_arg_width(134217728)_f16	$s0, [$s0];
	ld_arg_width(268435456)_f16	$s0, [$s0];
	ld_arg_width(536870912)_f16	$s0, [$s0];
	ld_arg_width(1073741824)_f16	$s0, [$s0];
	ld_arg_width(2147483648)_f16	$s0, [$s0];
	ld_arg_width(WAVESIZE)_f16	$s0, [$s0];
	ld_arg_width(all)_f16	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_f32	$s0, [$s0];
	// 
	ld_const_f32	$s0, [$s0];
	ld_v2_f32	($s0,$s1), [$s0];
	ld_v3_f32	($s0,$s1,$s2), [$s0];
	ld_v4_f32	($s0,$s1,$s2,$s3), [$s0];
	ld_f32	$s0, [0];
	ld_align(2)_f32	$s0, [$s0];
	ld_align(4)_f32	$s0, [$s0];
	ld_align(8)_f32	$s0, [$s0];
	ld_align(16)_f32	$s0, [$s0];
	ld_align(32)_f32	$s0, [$s0];
	ld_align(64)_f32	$s0, [$s0];
	ld_align(128)_f32	$s0, [$s0];
	ld_equiv(1)_f32	$s0, [$s0];
	ld_equiv(2)_f32	$s0, [$s0];
	ld_equiv(255)_f32	$s0, [$s0];
	ld_width(2)_f32	$s0, [$s0];
	ld_width(4)_f32	$s0, [$s0];
	ld_width(8)_f32	$s0, [$s0];
	ld_width(16)_f32	$s0, [$s0];
	ld_width(32)_f32	$s0, [$s0];
	ld_width(64)_f32	$s0, [$s0];
	ld_width(128)_f32	$s0, [$s0];
	ld_width(256)_f32	$s0, [$s0];
	ld_width(512)_f32	$s0, [$s0];
	ld_width(1024)_f32	$s0, [$s0];
	ld_width(2048)_f32	$s0, [$s0];
	ld_width(4096)_f32	$s0, [$s0];
	ld_width(8192)_f32	$s0, [$s0];
	ld_width(16384)_f32	$s0, [$s0];
	ld_width(32768)_f32	$s0, [$s0];
	ld_width(65536)_f32	$s0, [$s0];
	ld_width(131072)_f32	$s0, [$s0];
	ld_width(262144)_f32	$s0, [$s0];
	ld_width(524288)_f32	$s0, [$s0];
	ld_width(1048576)_f32	$s0, [$s0];
	ld_width(2097152)_f32	$s0, [$s0];
	ld_width(4194304)_f32	$s0, [$s0];
	ld_width(8388608)_f32	$s0, [$s0];
	ld_width(16777216)_f32	$s0, [$s0];
	ld_width(33554432)_f32	$s0, [$s0];
	ld_width(67108864)_f32	$s0, [$s0];
	ld_width(134217728)_f32	$s0, [$s0];
	ld_width(268435456)_f32	$s0, [$s0];
	ld_width(536870912)_f32	$s0, [$s0];
	ld_width(1073741824)_f32	$s0, [$s0];
	ld_width(2147483648)_f32	$s0, [$s0];
	ld_width(WAVESIZE)_f32	$s0, [$s0];
	ld_width(all)_f32	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_global_f32	$s0, [&GlobalVar];
	// 
	ld_global_const_f32	$s0, [&GlobalVar];
	ld_v2_global_f32	($s0,$s1), [&GlobalVar];
	ld_v3_global_f32	($s0,$s1,$s2), [&GlobalVar];
	ld_v4_global_f32	($s0,$s1,$s2,$s3), [&GlobalVar];
	ld_global_f32	$s0, [$s0];
	ld_global_f32	$s0, [0];
	ld_global_align(2)_f32	$s0, [&GlobalVar];
	ld_global_align(4)_f32	$s0, [&GlobalVar];
	ld_global_align(8)_f32	$s0, [&GlobalVar];
	ld_global_align(16)_f32	$s0, [&GlobalVar];
	ld_global_align(32)_f32	$s0, [&GlobalVar];
	ld_global_align(64)_f32	$s0, [&GlobalVar];
	ld_global_align(128)_f32	$s0, [&GlobalVar];
	ld_global_equiv(1)_f32	$s0, [&GlobalVar];
	ld_global_equiv(2)_f32	$s0, [&GlobalVar];
	ld_global_equiv(255)_f32	$s0, [&GlobalVar];
	ld_global_width(2)_f32	$s0, [&GlobalVar];
	ld_global_width(4)_f32	$s0, [&GlobalVar];
	ld_global_width(8)_f32	$s0, [&GlobalVar];
	ld_global_width(16)_f32	$s0, [&GlobalVar];
	ld_global_width(32)_f32	$s0, [&GlobalVar];
	ld_global_width(64)_f32	$s0, [&GlobalVar];
	ld_global_width(128)_f32	$s0, [&GlobalVar];
	ld_global_width(256)_f32	$s0, [&GlobalVar];
	ld_global_width(512)_f32	$s0, [&GlobalVar];
	ld_global_width(1024)_f32	$s0, [&GlobalVar];
	ld_global_width(2048)_f32	$s0, [&GlobalVar];
	ld_global_width(4096)_f32	$s0, [&GlobalVar];
	ld_global_width(8192)_f32	$s0, [&GlobalVar];
	ld_global_width(16384)_f32	$s0, [&GlobalVar];
	ld_global_width(32768)_f32	$s0, [&GlobalVar];
	ld_global_width(65536)_f32	$s0, [&GlobalVar];
	ld_global_width(131072)_f32	$s0, [&GlobalVar];
	ld_global_width(262144)_f32	$s0, [&GlobalVar];
	ld_global_width(524288)_f32	$s0, [&GlobalVar];
	ld_global_width(1048576)_f32	$s0, [&GlobalVar];
	ld_global_width(2097152)_f32	$s0, [&GlobalVar];
	ld_global_width(4194304)_f32	$s0, [&GlobalVar];
	ld_global_width(8388608)_f32	$s0, [&GlobalVar];
	ld_global_width(16777216)_f32	$s0, [&GlobalVar];
	ld_global_width(33554432)_f32	$s0, [&GlobalVar];
	ld_global_width(67108864)_f32	$s0, [&GlobalVar];
	ld_global_width(134217728)_f32	$s0, [&GlobalVar];
	ld_global_width(268435456)_f32	$s0, [&GlobalVar];
	ld_global_width(536870912)_f32	$s0, [&GlobalVar];
	ld_global_width(1073741824)_f32	$s0, [&GlobalVar];
	ld_global_width(2147483648)_f32	$s0, [&GlobalVar];
	ld_global_width(WAVESIZE)_f32	$s0, [&GlobalVar];
	ld_global_width(all)_f32	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	ld_readonly_f32	$s0, [&ReadonlyVar];
	// 
	ld_readonly_const_f32	$s0, [&ReadonlyVar];
	ld_v2_readonly_f32	($s0,$s1), [&ReadonlyVar];
	ld_v3_readonly_f32	($s0,$s1,$s2), [&ReadonlyVar];
	ld_v4_readonly_f32	($s0,$s1,$s2,$s3), [&ReadonlyVar];
	ld_readonly_f32	$s0, [$s0];
	ld_readonly_f32	$s0, [0];
	ld_readonly_align(2)_f32	$s0, [&ReadonlyVar];
	ld_readonly_align(4)_f32	$s0, [&ReadonlyVar];
	ld_readonly_align(8)_f32	$s0, [&ReadonlyVar];
	ld_readonly_align(16)_f32	$s0, [&ReadonlyVar];
	ld_readonly_align(32)_f32	$s0, [&ReadonlyVar];
	ld_readonly_align(64)_f32	$s0, [&ReadonlyVar];
	ld_readonly_align(128)_f32	$s0, [&ReadonlyVar];
	ld_readonly_equiv(1)_f32	$s0, [&ReadonlyVar];
	ld_readonly_equiv(2)_f32	$s0, [&ReadonlyVar];
	ld_readonly_equiv(255)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(2)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(4)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(8)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(16)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(32)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(64)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(128)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(256)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(512)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(1024)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(2048)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(4096)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(8192)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(16384)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(32768)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(65536)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(131072)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(262144)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(524288)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(1048576)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(2097152)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(4194304)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(8388608)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(16777216)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(33554432)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(67108864)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(134217728)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(268435456)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(536870912)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(1073741824)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(2147483648)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(WAVESIZE)_f32	$s0, [&ReadonlyVar];
	ld_readonly_width(all)_f32	$s0, [&ReadonlyVar];
	// 
	// Next sample
	// 
	ld_kernarg_f32	$s0, [$s0];
	// 
	ld_kernarg_const_f32	$s0, [$s0];
	ld_v2_kernarg_f32	($s0,$s1), [$s0];
	ld_v3_kernarg_f32	($s0,$s1,$s2), [$s0];
	ld_v4_kernarg_f32	($s0,$s1,$s2,$s3), [$s0];
	ld_kernarg_f32	$s0, [0];
	ld_kernarg_align(2)_f32	$s0, [$s0];
	ld_kernarg_align(4)_f32	$s0, [$s0];
	ld_kernarg_align(8)_f32	$s0, [$s0];
	ld_kernarg_align(16)_f32	$s0, [$s0];
	ld_kernarg_align(32)_f32	$s0, [$s0];
	ld_kernarg_align(64)_f32	$s0, [$s0];
	ld_kernarg_align(128)_f32	$s0, [$s0];
	ld_kernarg_equiv(1)_f32	$s0, [$s0];
	ld_kernarg_equiv(2)_f32	$s0, [$s0];
	ld_kernarg_equiv(255)_f32	$s0, [$s0];
	ld_kernarg_width(2)_f32	$s0, [$s0];
	ld_kernarg_width(4)_f32	$s0, [$s0];
	ld_kernarg_width(8)_f32	$s0, [$s0];
	ld_kernarg_width(16)_f32	$s0, [$s0];
	ld_kernarg_width(32)_f32	$s0, [$s0];
	ld_kernarg_width(64)_f32	$s0, [$s0];
	ld_kernarg_width(128)_f32	$s0, [$s0];
	ld_kernarg_width(256)_f32	$s0, [$s0];
	ld_kernarg_width(512)_f32	$s0, [$s0];
	ld_kernarg_width(1024)_f32	$s0, [$s0];
	ld_kernarg_width(2048)_f32	$s0, [$s0];
	ld_kernarg_width(4096)_f32	$s0, [$s0];
	ld_kernarg_width(8192)_f32	$s0, [$s0];
	ld_kernarg_width(16384)_f32	$s0, [$s0];
	ld_kernarg_width(32768)_f32	$s0, [$s0];
	ld_kernarg_width(65536)_f32	$s0, [$s0];
	ld_kernarg_width(131072)_f32	$s0, [$s0];
	ld_kernarg_width(262144)_f32	$s0, [$s0];
	ld_kernarg_width(524288)_f32	$s0, [$s0];
	ld_kernarg_width(1048576)_f32	$s0, [$s0];
	ld_kernarg_width(2097152)_f32	$s0, [$s0];
	ld_kernarg_width(4194304)_f32	$s0, [$s0];
	ld_kernarg_width(8388608)_f32	$s0, [$s0];
	ld_kernarg_width(16777216)_f32	$s0, [$s0];
	ld_kernarg_width(33554432)_f32	$s0, [$s0];
	ld_kernarg_width(67108864)_f32	$s0, [$s0];
	ld_kernarg_width(134217728)_f32	$s0, [$s0];
	ld_kernarg_width(268435456)_f32	$s0, [$s0];
	ld_kernarg_width(536870912)_f32	$s0, [$s0];
	ld_kernarg_width(1073741824)_f32	$s0, [$s0];
	ld_kernarg_width(2147483648)_f32	$s0, [$s0];
	ld_kernarg_width(WAVESIZE)_f32	$s0, [$s0];
	ld_kernarg_width(all)_f32	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_group_f32	$s0, [&GroupVar];
	// 
	ld_v2_group_f32	($s0,$s1), [&GroupVar];
	ld_v3_group_f32	($s0,$s1,$s2), [&GroupVar];
	ld_v4_group_f32	($s0,$s1,$s2,$s3), [&GroupVar];
	ld_group_f32	$s0, [$s0];
	ld_group_f32	$s0, [0];
	ld_group_align(2)_f32	$s0, [&GroupVar];
	ld_group_align(4)_f32	$s0, [&GroupVar];
	ld_group_align(8)_f32	$s0, [&GroupVar];
	ld_group_align(16)_f32	$s0, [&GroupVar];
	ld_group_align(32)_f32	$s0, [&GroupVar];
	ld_group_align(64)_f32	$s0, [&GroupVar];
	ld_group_align(128)_f32	$s0, [&GroupVar];
	ld_group_equiv(1)_f32	$s0, [&GroupVar];
	ld_group_equiv(2)_f32	$s0, [&GroupVar];
	ld_group_equiv(255)_f32	$s0, [&GroupVar];
	ld_group_width(2)_f32	$s0, [&GroupVar];
	ld_group_width(4)_f32	$s0, [&GroupVar];
	ld_group_width(8)_f32	$s0, [&GroupVar];
	ld_group_width(16)_f32	$s0, [&GroupVar];
	ld_group_width(32)_f32	$s0, [&GroupVar];
	ld_group_width(64)_f32	$s0, [&GroupVar];
	ld_group_width(128)_f32	$s0, [&GroupVar];
	ld_group_width(256)_f32	$s0, [&GroupVar];
	ld_group_width(512)_f32	$s0, [&GroupVar];
	ld_group_width(1024)_f32	$s0, [&GroupVar];
	ld_group_width(2048)_f32	$s0, [&GroupVar];
	ld_group_width(4096)_f32	$s0, [&GroupVar];
	ld_group_width(8192)_f32	$s0, [&GroupVar];
	ld_group_width(16384)_f32	$s0, [&GroupVar];
	ld_group_width(32768)_f32	$s0, [&GroupVar];
	ld_group_width(65536)_f32	$s0, [&GroupVar];
	ld_group_width(131072)_f32	$s0, [&GroupVar];
	ld_group_width(262144)_f32	$s0, [&GroupVar];
	ld_group_width(524288)_f32	$s0, [&GroupVar];
	ld_group_width(1048576)_f32	$s0, [&GroupVar];
	ld_group_width(2097152)_f32	$s0, [&GroupVar];
	ld_group_width(4194304)_f32	$s0, [&GroupVar];
	ld_group_width(8388608)_f32	$s0, [&GroupVar];
	ld_group_width(16777216)_f32	$s0, [&GroupVar];
	ld_group_width(33554432)_f32	$s0, [&GroupVar];
	ld_group_width(67108864)_f32	$s0, [&GroupVar];
	ld_group_width(134217728)_f32	$s0, [&GroupVar];
	ld_group_width(268435456)_f32	$s0, [&GroupVar];
	ld_group_width(536870912)_f32	$s0, [&GroupVar];
	ld_group_width(1073741824)_f32	$s0, [&GroupVar];
	ld_group_width(2147483648)_f32	$s0, [&GroupVar];
	ld_group_width(WAVESIZE)_f32	$s0, [&GroupVar];
	ld_group_width(all)_f32	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	ld_private_f32	$s0, [&PrivateVar];
	// 
	ld_v2_private_f32	($s0,$s1), [&PrivateVar];
	ld_v3_private_f32	($s0,$s1,$s2), [&PrivateVar];
	ld_v4_private_f32	($s0,$s1,$s2,$s3), [&PrivateVar];
	ld_private_f32	$s0, [$s0];
	ld_private_f32	$s0, [0];
	ld_private_align(2)_f32	$s0, [&PrivateVar];
	ld_private_align(4)_f32	$s0, [&PrivateVar];
	ld_private_align(8)_f32	$s0, [&PrivateVar];
	ld_private_align(16)_f32	$s0, [&PrivateVar];
	ld_private_align(32)_f32	$s0, [&PrivateVar];
	ld_private_align(64)_f32	$s0, [&PrivateVar];
	ld_private_align(128)_f32	$s0, [&PrivateVar];
	ld_private_equiv(1)_f32	$s0, [&PrivateVar];
	ld_private_equiv(2)_f32	$s0, [&PrivateVar];
	ld_private_equiv(255)_f32	$s0, [&PrivateVar];
	ld_private_width(2)_f32	$s0, [&PrivateVar];
	ld_private_width(4)_f32	$s0, [&PrivateVar];
	ld_private_width(8)_f32	$s0, [&PrivateVar];
	ld_private_width(16)_f32	$s0, [&PrivateVar];
	ld_private_width(32)_f32	$s0, [&PrivateVar];
	ld_private_width(64)_f32	$s0, [&PrivateVar];
	ld_private_width(128)_f32	$s0, [&PrivateVar];
	ld_private_width(256)_f32	$s0, [&PrivateVar];
	ld_private_width(512)_f32	$s0, [&PrivateVar];
	ld_private_width(1024)_f32	$s0, [&PrivateVar];
	ld_private_width(2048)_f32	$s0, [&PrivateVar];
	ld_private_width(4096)_f32	$s0, [&PrivateVar];
	ld_private_width(8192)_f32	$s0, [&PrivateVar];
	ld_private_width(16384)_f32	$s0, [&PrivateVar];
	ld_private_width(32768)_f32	$s0, [&PrivateVar];
	ld_private_width(65536)_f32	$s0, [&PrivateVar];
	ld_private_width(131072)_f32	$s0, [&PrivateVar];
	ld_private_width(262144)_f32	$s0, [&PrivateVar];
	ld_private_width(524288)_f32	$s0, [&PrivateVar];
	ld_private_width(1048576)_f32	$s0, [&PrivateVar];
	ld_private_width(2097152)_f32	$s0, [&PrivateVar];
	ld_private_width(4194304)_f32	$s0, [&PrivateVar];
	ld_private_width(8388608)_f32	$s0, [&PrivateVar];
	ld_private_width(16777216)_f32	$s0, [&PrivateVar];
	ld_private_width(33554432)_f32	$s0, [&PrivateVar];
	ld_private_width(67108864)_f32	$s0, [&PrivateVar];
	ld_private_width(134217728)_f32	$s0, [&PrivateVar];
	ld_private_width(268435456)_f32	$s0, [&PrivateVar];
	ld_private_width(536870912)_f32	$s0, [&PrivateVar];
	ld_private_width(1073741824)_f32	$s0, [&PrivateVar];
	ld_private_width(2147483648)_f32	$s0, [&PrivateVar];
	ld_private_width(WAVESIZE)_f32	$s0, [&PrivateVar];
	ld_private_width(all)_f32	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	ld_spill_f32	$s0, [$s0];
	// 
	ld_v2_spill_f32	($s0,$s1), [$s0];
	ld_v3_spill_f32	($s0,$s1,$s2), [$s0];
	ld_v4_spill_f32	($s0,$s1,$s2,$s3), [$s0];
	ld_spill_f32	$s0, [0];
	ld_spill_align(2)_f32	$s0, [$s0];
	ld_spill_align(4)_f32	$s0, [$s0];
	ld_spill_align(8)_f32	$s0, [$s0];
	ld_spill_align(16)_f32	$s0, [$s0];
	ld_spill_align(32)_f32	$s0, [$s0];
	ld_spill_align(64)_f32	$s0, [$s0];
	ld_spill_align(128)_f32	$s0, [$s0];
	ld_spill_equiv(1)_f32	$s0, [$s0];
	ld_spill_equiv(2)_f32	$s0, [$s0];
	ld_spill_equiv(255)_f32	$s0, [$s0];
	ld_spill_width(2)_f32	$s0, [$s0];
	ld_spill_width(4)_f32	$s0, [$s0];
	ld_spill_width(8)_f32	$s0, [$s0];
	ld_spill_width(16)_f32	$s0, [$s0];
	ld_spill_width(32)_f32	$s0, [$s0];
	ld_spill_width(64)_f32	$s0, [$s0];
	ld_spill_width(128)_f32	$s0, [$s0];
	ld_spill_width(256)_f32	$s0, [$s0];
	ld_spill_width(512)_f32	$s0, [$s0];
	ld_spill_width(1024)_f32	$s0, [$s0];
	ld_spill_width(2048)_f32	$s0, [$s0];
	ld_spill_width(4096)_f32	$s0, [$s0];
	ld_spill_width(8192)_f32	$s0, [$s0];
	ld_spill_width(16384)_f32	$s0, [$s0];
	ld_spill_width(32768)_f32	$s0, [$s0];
	ld_spill_width(65536)_f32	$s0, [$s0];
	ld_spill_width(131072)_f32	$s0, [$s0];
	ld_spill_width(262144)_f32	$s0, [$s0];
	ld_spill_width(524288)_f32	$s0, [$s0];
	ld_spill_width(1048576)_f32	$s0, [$s0];
	ld_spill_width(2097152)_f32	$s0, [$s0];
	ld_spill_width(4194304)_f32	$s0, [$s0];
	ld_spill_width(8388608)_f32	$s0, [$s0];
	ld_spill_width(16777216)_f32	$s0, [$s0];
	ld_spill_width(33554432)_f32	$s0, [$s0];
	ld_spill_width(67108864)_f32	$s0, [$s0];
	ld_spill_width(134217728)_f32	$s0, [$s0];
	ld_spill_width(268435456)_f32	$s0, [$s0];
	ld_spill_width(536870912)_f32	$s0, [$s0];
	ld_spill_width(1073741824)_f32	$s0, [$s0];
	ld_spill_width(2147483648)_f32	$s0, [$s0];
	ld_spill_width(WAVESIZE)_f32	$s0, [$s0];
	ld_spill_width(all)_f32	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_f32	$s0, [$s0];
	// 
	ld_v2_arg_f32	($s0,$s1), [$s0];
	ld_v3_arg_f32	($s0,$s1,$s2), [$s0];
	ld_v4_arg_f32	($s0,$s1,$s2,$s3), [$s0];
	ld_arg_f32	$s0, [0];
	ld_arg_align(2)_f32	$s0, [$s0];
	ld_arg_align(4)_f32	$s0, [$s0];
	ld_arg_align(8)_f32	$s0, [$s0];
	ld_arg_align(16)_f32	$s0, [$s0];
	ld_arg_align(32)_f32	$s0, [$s0];
	ld_arg_align(64)_f32	$s0, [$s0];
	ld_arg_align(128)_f32	$s0, [$s0];
	ld_arg_equiv(1)_f32	$s0, [$s0];
	ld_arg_equiv(2)_f32	$s0, [$s0];
	ld_arg_equiv(255)_f32	$s0, [$s0];
	ld_arg_width(2)_f32	$s0, [$s0];
	ld_arg_width(4)_f32	$s0, [$s0];
	ld_arg_width(8)_f32	$s0, [$s0];
	ld_arg_width(16)_f32	$s0, [$s0];
	ld_arg_width(32)_f32	$s0, [$s0];
	ld_arg_width(64)_f32	$s0, [$s0];
	ld_arg_width(128)_f32	$s0, [$s0];
	ld_arg_width(256)_f32	$s0, [$s0];
	ld_arg_width(512)_f32	$s0, [$s0];
	ld_arg_width(1024)_f32	$s0, [$s0];
	ld_arg_width(2048)_f32	$s0, [$s0];
	ld_arg_width(4096)_f32	$s0, [$s0];
	ld_arg_width(8192)_f32	$s0, [$s0];
	ld_arg_width(16384)_f32	$s0, [$s0];
	ld_arg_width(32768)_f32	$s0, [$s0];
	ld_arg_width(65536)_f32	$s0, [$s0];
	ld_arg_width(131072)_f32	$s0, [$s0];
	ld_arg_width(262144)_f32	$s0, [$s0];
	ld_arg_width(524288)_f32	$s0, [$s0];
	ld_arg_width(1048576)_f32	$s0, [$s0];
	ld_arg_width(2097152)_f32	$s0, [$s0];
	ld_arg_width(4194304)_f32	$s0, [$s0];
	ld_arg_width(8388608)_f32	$s0, [$s0];
	ld_arg_width(16777216)_f32	$s0, [$s0];
	ld_arg_width(33554432)_f32	$s0, [$s0];
	ld_arg_width(67108864)_f32	$s0, [$s0];
	ld_arg_width(134217728)_f32	$s0, [$s0];
	ld_arg_width(268435456)_f32	$s0, [$s0];
	ld_arg_width(536870912)_f32	$s0, [$s0];
	ld_arg_width(1073741824)_f32	$s0, [$s0];
	ld_arg_width(2147483648)_f32	$s0, [$s0];
	ld_arg_width(WAVESIZE)_f32	$s0, [$s0];
	ld_arg_width(all)_f32	$s0, [$s0];
	// 
	// Next sample
	// 
	ld_f64	$d0, [$s0];
	// 
	ld_const_f64	$d0, [$s0];
	ld_v2_f64	($d0,$d1), [$s0];
	ld_v3_f64	($d0,$d1,$d2), [$s0];
	ld_v4_f64	($d0,$d1,$d2,$d3), [$s0];
	ld_f64	$d0, [0];
	ld_align(2)_f64	$d0, [$s0];
	ld_align(4)_f64	$d0, [$s0];
	ld_align(8)_f64	$d0, [$s0];
	ld_align(16)_f64	$d0, [$s0];
	ld_align(32)_f64	$d0, [$s0];
	ld_align(64)_f64	$d0, [$s0];
	ld_align(128)_f64	$d0, [$s0];
	ld_equiv(1)_f64	$d0, [$s0];
	ld_equiv(2)_f64	$d0, [$s0];
	ld_equiv(255)_f64	$d0, [$s0];
	ld_width(2)_f64	$d0, [$s0];
	ld_width(4)_f64	$d0, [$s0];
	ld_width(8)_f64	$d0, [$s0];
	ld_width(16)_f64	$d0, [$s0];
	ld_width(32)_f64	$d0, [$s0];
	ld_width(64)_f64	$d0, [$s0];
	ld_width(128)_f64	$d0, [$s0];
	ld_width(256)_f64	$d0, [$s0];
	ld_width(512)_f64	$d0, [$s0];
	ld_width(1024)_f64	$d0, [$s0];
	ld_width(2048)_f64	$d0, [$s0];
	ld_width(4096)_f64	$d0, [$s0];
	ld_width(8192)_f64	$d0, [$s0];
	ld_width(16384)_f64	$d0, [$s0];
	ld_width(32768)_f64	$d0, [$s0];
	ld_width(65536)_f64	$d0, [$s0];
	ld_width(131072)_f64	$d0, [$s0];
	ld_width(262144)_f64	$d0, [$s0];
	ld_width(524288)_f64	$d0, [$s0];
	ld_width(1048576)_f64	$d0, [$s0];
	ld_width(2097152)_f64	$d0, [$s0];
	ld_width(4194304)_f64	$d0, [$s0];
	ld_width(8388608)_f64	$d0, [$s0];
	ld_width(16777216)_f64	$d0, [$s0];
	ld_width(33554432)_f64	$d0, [$s0];
	ld_width(67108864)_f64	$d0, [$s0];
	ld_width(134217728)_f64	$d0, [$s0];
	ld_width(268435456)_f64	$d0, [$s0];
	ld_width(536870912)_f64	$d0, [$s0];
	ld_width(1073741824)_f64	$d0, [$s0];
	ld_width(2147483648)_f64	$d0, [$s0];
	ld_width(WAVESIZE)_f64	$d0, [$s0];
	ld_width(all)_f64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_global_f64	$d0, [&GlobalVar];
	// 
	ld_global_const_f64	$d0, [&GlobalVar];
	ld_v2_global_f64	($d0,$d1), [&GlobalVar];
	ld_v3_global_f64	($d0,$d1,$d2), [&GlobalVar];
	ld_v4_global_f64	($d0,$d1,$d2,$d3), [&GlobalVar];
	ld_global_f64	$d0, [$s0];
	ld_global_f64	$d0, [0];
	ld_global_align(2)_f64	$d0, [&GlobalVar];
	ld_global_align(4)_f64	$d0, [&GlobalVar];
	ld_global_align(8)_f64	$d0, [&GlobalVar];
	ld_global_align(16)_f64	$d0, [&GlobalVar];
	ld_global_align(32)_f64	$d0, [&GlobalVar];
	ld_global_align(64)_f64	$d0, [&GlobalVar];
	ld_global_align(128)_f64	$d0, [&GlobalVar];
	ld_global_equiv(1)_f64	$d0, [&GlobalVar];
	ld_global_equiv(2)_f64	$d0, [&GlobalVar];
	ld_global_equiv(255)_f64	$d0, [&GlobalVar];
	ld_global_width(2)_f64	$d0, [&GlobalVar];
	ld_global_width(4)_f64	$d0, [&GlobalVar];
	ld_global_width(8)_f64	$d0, [&GlobalVar];
	ld_global_width(16)_f64	$d0, [&GlobalVar];
	ld_global_width(32)_f64	$d0, [&GlobalVar];
	ld_global_width(64)_f64	$d0, [&GlobalVar];
	ld_global_width(128)_f64	$d0, [&GlobalVar];
	ld_global_width(256)_f64	$d0, [&GlobalVar];
	ld_global_width(512)_f64	$d0, [&GlobalVar];
	ld_global_width(1024)_f64	$d0, [&GlobalVar];
	ld_global_width(2048)_f64	$d0, [&GlobalVar];
	ld_global_width(4096)_f64	$d0, [&GlobalVar];
	ld_global_width(8192)_f64	$d0, [&GlobalVar];
	ld_global_width(16384)_f64	$d0, [&GlobalVar];
	ld_global_width(32768)_f64	$d0, [&GlobalVar];
	ld_global_width(65536)_f64	$d0, [&GlobalVar];
	ld_global_width(131072)_f64	$d0, [&GlobalVar];
	ld_global_width(262144)_f64	$d0, [&GlobalVar];
	ld_global_width(524288)_f64	$d0, [&GlobalVar];
	ld_global_width(1048576)_f64	$d0, [&GlobalVar];
	ld_global_width(2097152)_f64	$d0, [&GlobalVar];
	ld_global_width(4194304)_f64	$d0, [&GlobalVar];
	ld_global_width(8388608)_f64	$d0, [&GlobalVar];
	ld_global_width(16777216)_f64	$d0, [&GlobalVar];
	ld_global_width(33554432)_f64	$d0, [&GlobalVar];
	ld_global_width(67108864)_f64	$d0, [&GlobalVar];
	ld_global_width(134217728)_f64	$d0, [&GlobalVar];
	ld_global_width(268435456)_f64	$d0, [&GlobalVar];
	ld_global_width(536870912)_f64	$d0, [&GlobalVar];
	ld_global_width(1073741824)_f64	$d0, [&GlobalVar];
	ld_global_width(2147483648)_f64	$d0, [&GlobalVar];
	ld_global_width(WAVESIZE)_f64	$d0, [&GlobalVar];
	ld_global_width(all)_f64	$d0, [&GlobalVar];
	// 
	// Next sample
	// 
	ld_readonly_f64	$d0, [&ReadonlyVar];
	// 
	ld_readonly_const_f64	$d0, [&ReadonlyVar];
	ld_v2_readonly_f64	($d0,$d1), [&ReadonlyVar];
	ld_v3_readonly_f64	($d0,$d1,$d2), [&ReadonlyVar];
	ld_v4_readonly_f64	($d0,$d1,$d2,$d3), [&ReadonlyVar];
	ld_readonly_f64	$d0, [$s0];
	ld_readonly_f64	$d0, [0];
	ld_readonly_align(2)_f64	$d0, [&ReadonlyVar];
	ld_readonly_align(4)_f64	$d0, [&ReadonlyVar];
	ld_readonly_align(8)_f64	$d0, [&ReadonlyVar];
	ld_readonly_align(16)_f64	$d0, [&ReadonlyVar];
	ld_readonly_align(32)_f64	$d0, [&ReadonlyVar];
	ld_readonly_align(64)_f64	$d0, [&ReadonlyVar];
	ld_readonly_align(128)_f64	$d0, [&ReadonlyVar];
	ld_readonly_equiv(1)_f64	$d0, [&ReadonlyVar];
	ld_readonly_equiv(2)_f64	$d0, [&ReadonlyVar];
	ld_readonly_equiv(255)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(2)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(4)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(8)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(16)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(32)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(64)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(128)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(256)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(512)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(1024)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(2048)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(4096)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(8192)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(16384)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(32768)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(65536)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(131072)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(262144)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(524288)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(1048576)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(2097152)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(4194304)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(8388608)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(16777216)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(33554432)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(67108864)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(134217728)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(268435456)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(536870912)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(1073741824)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(2147483648)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(WAVESIZE)_f64	$d0, [&ReadonlyVar];
	ld_readonly_width(all)_f64	$d0, [&ReadonlyVar];
	// 
	// Next sample
	// 
	ld_kernarg_f64	$d0, [$s0];
	// 
	ld_kernarg_const_f64	$d0, [$s0];
	ld_v2_kernarg_f64	($d0,$d1), [$s0];
	ld_v3_kernarg_f64	($d0,$d1,$d2), [$s0];
	ld_v4_kernarg_f64	($d0,$d1,$d2,$d3), [$s0];
	ld_kernarg_f64	$d0, [0];
	ld_kernarg_align(2)_f64	$d0, [$s0];
	ld_kernarg_align(4)_f64	$d0, [$s0];
	ld_kernarg_align(8)_f64	$d0, [$s0];
	ld_kernarg_align(16)_f64	$d0, [$s0];
	ld_kernarg_align(32)_f64	$d0, [$s0];
	ld_kernarg_align(64)_f64	$d0, [$s0];
	ld_kernarg_align(128)_f64	$d0, [$s0];
	ld_kernarg_equiv(1)_f64	$d0, [$s0];
	ld_kernarg_equiv(2)_f64	$d0, [$s0];
	ld_kernarg_equiv(255)_f64	$d0, [$s0];
	ld_kernarg_width(2)_f64	$d0, [$s0];
	ld_kernarg_width(4)_f64	$d0, [$s0];
	ld_kernarg_width(8)_f64	$d0, [$s0];
	ld_kernarg_width(16)_f64	$d0, [$s0];
	ld_kernarg_width(32)_f64	$d0, [$s0];
	ld_kernarg_width(64)_f64	$d0, [$s0];
	ld_kernarg_width(128)_f64	$d0, [$s0];
	ld_kernarg_width(256)_f64	$d0, [$s0];
	ld_kernarg_width(512)_f64	$d0, [$s0];
	ld_kernarg_width(1024)_f64	$d0, [$s0];
	ld_kernarg_width(2048)_f64	$d0, [$s0];
	ld_kernarg_width(4096)_f64	$d0, [$s0];
	ld_kernarg_width(8192)_f64	$d0, [$s0];
	ld_kernarg_width(16384)_f64	$d0, [$s0];
	ld_kernarg_width(32768)_f64	$d0, [$s0];
	ld_kernarg_width(65536)_f64	$d0, [$s0];
	ld_kernarg_width(131072)_f64	$d0, [$s0];
	ld_kernarg_width(262144)_f64	$d0, [$s0];
	ld_kernarg_width(524288)_f64	$d0, [$s0];
	ld_kernarg_width(1048576)_f64	$d0, [$s0];
	ld_kernarg_width(2097152)_f64	$d0, [$s0];
	ld_kernarg_width(4194304)_f64	$d0, [$s0];
	ld_kernarg_width(8388608)_f64	$d0, [$s0];
	ld_kernarg_width(16777216)_f64	$d0, [$s0];
	ld_kernarg_width(33554432)_f64	$d0, [$s0];
	ld_kernarg_width(67108864)_f64	$d0, [$s0];
	ld_kernarg_width(134217728)_f64	$d0, [$s0];
	ld_kernarg_width(268435456)_f64	$d0, [$s0];
	ld_kernarg_width(536870912)_f64	$d0, [$s0];
	ld_kernarg_width(1073741824)_f64	$d0, [$s0];
	ld_kernarg_width(2147483648)_f64	$d0, [$s0];
	ld_kernarg_width(WAVESIZE)_f64	$d0, [$s0];
	ld_kernarg_width(all)_f64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_group_f64	$d0, [&GroupVar];
	// 
	ld_v2_group_f64	($d0,$d1), [&GroupVar];
	ld_v3_group_f64	($d0,$d1,$d2), [&GroupVar];
	ld_v4_group_f64	($d0,$d1,$d2,$d3), [&GroupVar];
	ld_group_f64	$d0, [$s0];
	ld_group_f64	$d0, [0];
	ld_group_align(2)_f64	$d0, [&GroupVar];
	ld_group_align(4)_f64	$d0, [&GroupVar];
	ld_group_align(8)_f64	$d0, [&GroupVar];
	ld_group_align(16)_f64	$d0, [&GroupVar];
	ld_group_align(32)_f64	$d0, [&GroupVar];
	ld_group_align(64)_f64	$d0, [&GroupVar];
	ld_group_align(128)_f64	$d0, [&GroupVar];
	ld_group_equiv(1)_f64	$d0, [&GroupVar];
	ld_group_equiv(2)_f64	$d0, [&GroupVar];
	ld_group_equiv(255)_f64	$d0, [&GroupVar];
	ld_group_width(2)_f64	$d0, [&GroupVar];
	ld_group_width(4)_f64	$d0, [&GroupVar];
	ld_group_width(8)_f64	$d0, [&GroupVar];
	ld_group_width(16)_f64	$d0, [&GroupVar];
	ld_group_width(32)_f64	$d0, [&GroupVar];
	ld_group_width(64)_f64	$d0, [&GroupVar];
	ld_group_width(128)_f64	$d0, [&GroupVar];
	ld_group_width(256)_f64	$d0, [&GroupVar];
	ld_group_width(512)_f64	$d0, [&GroupVar];
	ld_group_width(1024)_f64	$d0, [&GroupVar];
	ld_group_width(2048)_f64	$d0, [&GroupVar];
	ld_group_width(4096)_f64	$d0, [&GroupVar];
	ld_group_width(8192)_f64	$d0, [&GroupVar];
	ld_group_width(16384)_f64	$d0, [&GroupVar];
	ld_group_width(32768)_f64	$d0, [&GroupVar];
	ld_group_width(65536)_f64	$d0, [&GroupVar];
	ld_group_width(131072)_f64	$d0, [&GroupVar];
	ld_group_width(262144)_f64	$d0, [&GroupVar];
	ld_group_width(524288)_f64	$d0, [&GroupVar];
	ld_group_width(1048576)_f64	$d0, [&GroupVar];
	ld_group_width(2097152)_f64	$d0, [&GroupVar];
	ld_group_width(4194304)_f64	$d0, [&GroupVar];
	ld_group_width(8388608)_f64	$d0, [&GroupVar];
	ld_group_width(16777216)_f64	$d0, [&GroupVar];
	ld_group_width(33554432)_f64	$d0, [&GroupVar];
	ld_group_width(67108864)_f64	$d0, [&GroupVar];
	ld_group_width(134217728)_f64	$d0, [&GroupVar];
	ld_group_width(268435456)_f64	$d0, [&GroupVar];
	ld_group_width(536870912)_f64	$d0, [&GroupVar];
	ld_group_width(1073741824)_f64	$d0, [&GroupVar];
	ld_group_width(2147483648)_f64	$d0, [&GroupVar];
	ld_group_width(WAVESIZE)_f64	$d0, [&GroupVar];
	ld_group_width(all)_f64	$d0, [&GroupVar];
	// 
	// Next sample
	// 
	ld_private_f64	$d0, [&PrivateVar];
	// 
	ld_v2_private_f64	($d0,$d1), [&PrivateVar];
	ld_v3_private_f64	($d0,$d1,$d2), [&PrivateVar];
	ld_v4_private_f64	($d0,$d1,$d2,$d3), [&PrivateVar];
	ld_private_f64	$d0, [$s0];
	ld_private_f64	$d0, [0];
	ld_private_align(2)_f64	$d0, [&PrivateVar];
	ld_private_align(4)_f64	$d0, [&PrivateVar];
	ld_private_align(8)_f64	$d0, [&PrivateVar];
	ld_private_align(16)_f64	$d0, [&PrivateVar];
	ld_private_align(32)_f64	$d0, [&PrivateVar];
	ld_private_align(64)_f64	$d0, [&PrivateVar];
	ld_private_align(128)_f64	$d0, [&PrivateVar];
	ld_private_equiv(1)_f64	$d0, [&PrivateVar];
	ld_private_equiv(2)_f64	$d0, [&PrivateVar];
	ld_private_equiv(255)_f64	$d0, [&PrivateVar];
	ld_private_width(2)_f64	$d0, [&PrivateVar];
	ld_private_width(4)_f64	$d0, [&PrivateVar];
	ld_private_width(8)_f64	$d0, [&PrivateVar];
	ld_private_width(16)_f64	$d0, [&PrivateVar];
	ld_private_width(32)_f64	$d0, [&PrivateVar];
	ld_private_width(64)_f64	$d0, [&PrivateVar];
	ld_private_width(128)_f64	$d0, [&PrivateVar];
	ld_private_width(256)_f64	$d0, [&PrivateVar];
	ld_private_width(512)_f64	$d0, [&PrivateVar];
	ld_private_width(1024)_f64	$d0, [&PrivateVar];
	ld_private_width(2048)_f64	$d0, [&PrivateVar];
	ld_private_width(4096)_f64	$d0, [&PrivateVar];
	ld_private_width(8192)_f64	$d0, [&PrivateVar];
	ld_private_width(16384)_f64	$d0, [&PrivateVar];
	ld_private_width(32768)_f64	$d0, [&PrivateVar];
	ld_private_width(65536)_f64	$d0, [&PrivateVar];
	ld_private_width(131072)_f64	$d0, [&PrivateVar];
	ld_private_width(262144)_f64	$d0, [&PrivateVar];
	ld_private_width(524288)_f64	$d0, [&PrivateVar];
	ld_private_width(1048576)_f64	$d0, [&PrivateVar];
	ld_private_width(2097152)_f64	$d0, [&PrivateVar];
	ld_private_width(4194304)_f64	$d0, [&PrivateVar];
	ld_private_width(8388608)_f64	$d0, [&PrivateVar];
	ld_private_width(16777216)_f64	$d0, [&PrivateVar];
	ld_private_width(33554432)_f64	$d0, [&PrivateVar];
	ld_private_width(67108864)_f64	$d0, [&PrivateVar];
	ld_private_width(134217728)_f64	$d0, [&PrivateVar];
	ld_private_width(268435456)_f64	$d0, [&PrivateVar];
	ld_private_width(536870912)_f64	$d0, [&PrivateVar];
	ld_private_width(1073741824)_f64	$d0, [&PrivateVar];
	ld_private_width(2147483648)_f64	$d0, [&PrivateVar];
	ld_private_width(WAVESIZE)_f64	$d0, [&PrivateVar];
	ld_private_width(all)_f64	$d0, [&PrivateVar];
	// 
	// Next sample
	// 
	ld_spill_f64	$d0, [$s0];
	// 
	ld_v2_spill_f64	($d0,$d1), [$s0];
	ld_v3_spill_f64	($d0,$d1,$d2), [$s0];
	ld_v4_spill_f64	($d0,$d1,$d2,$d3), [$s0];
	ld_spill_f64	$d0, [0];
	ld_spill_align(2)_f64	$d0, [$s0];
	ld_spill_align(4)_f64	$d0, [$s0];
	ld_spill_align(8)_f64	$d0, [$s0];
	ld_spill_align(16)_f64	$d0, [$s0];
	ld_spill_align(32)_f64	$d0, [$s0];
	ld_spill_align(64)_f64	$d0, [$s0];
	ld_spill_align(128)_f64	$d0, [$s0];
	ld_spill_equiv(1)_f64	$d0, [$s0];
	ld_spill_equiv(2)_f64	$d0, [$s0];
	ld_spill_equiv(255)_f64	$d0, [$s0];
	ld_spill_width(2)_f64	$d0, [$s0];
	ld_spill_width(4)_f64	$d0, [$s0];
	ld_spill_width(8)_f64	$d0, [$s0];
	ld_spill_width(16)_f64	$d0, [$s0];
	ld_spill_width(32)_f64	$d0, [$s0];
	ld_spill_width(64)_f64	$d0, [$s0];
	ld_spill_width(128)_f64	$d0, [$s0];
	ld_spill_width(256)_f64	$d0, [$s0];
	ld_spill_width(512)_f64	$d0, [$s0];
	ld_spill_width(1024)_f64	$d0, [$s0];
	ld_spill_width(2048)_f64	$d0, [$s0];
	ld_spill_width(4096)_f64	$d0, [$s0];
	ld_spill_width(8192)_f64	$d0, [$s0];
	ld_spill_width(16384)_f64	$d0, [$s0];
	ld_spill_width(32768)_f64	$d0, [$s0];
	ld_spill_width(65536)_f64	$d0, [$s0];
	ld_spill_width(131072)_f64	$d0, [$s0];
	ld_spill_width(262144)_f64	$d0, [$s0];
	ld_spill_width(524288)_f64	$d0, [$s0];
	ld_spill_width(1048576)_f64	$d0, [$s0];
	ld_spill_width(2097152)_f64	$d0, [$s0];
	ld_spill_width(4194304)_f64	$d0, [$s0];
	ld_spill_width(8388608)_f64	$d0, [$s0];
	ld_spill_width(16777216)_f64	$d0, [$s0];
	ld_spill_width(33554432)_f64	$d0, [$s0];
	ld_spill_width(67108864)_f64	$d0, [$s0];
	ld_spill_width(134217728)_f64	$d0, [$s0];
	ld_spill_width(268435456)_f64	$d0, [$s0];
	ld_spill_width(536870912)_f64	$d0, [$s0];
	ld_spill_width(1073741824)_f64	$d0, [$s0];
	ld_spill_width(2147483648)_f64	$d0, [$s0];
	ld_spill_width(WAVESIZE)_f64	$d0, [$s0];
	ld_spill_width(all)_f64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_f64	$d0, [$s0];
	// 
	ld_v2_arg_f64	($d0,$d1), [$s0];
	ld_v3_arg_f64	($d0,$d1,$d2), [$s0];
	ld_v4_arg_f64	($d0,$d1,$d2,$d3), [$s0];
	ld_arg_f64	$d0, [0];
	ld_arg_align(2)_f64	$d0, [$s0];
	ld_arg_align(4)_f64	$d0, [$s0];
	ld_arg_align(8)_f64	$d0, [$s0];
	ld_arg_align(16)_f64	$d0, [$s0];
	ld_arg_align(32)_f64	$d0, [$s0];
	ld_arg_align(64)_f64	$d0, [$s0];
	ld_arg_align(128)_f64	$d0, [$s0];
	ld_arg_equiv(1)_f64	$d0, [$s0];
	ld_arg_equiv(2)_f64	$d0, [$s0];
	ld_arg_equiv(255)_f64	$d0, [$s0];
	ld_arg_width(2)_f64	$d0, [$s0];
	ld_arg_width(4)_f64	$d0, [$s0];
	ld_arg_width(8)_f64	$d0, [$s0];
	ld_arg_width(16)_f64	$d0, [$s0];
	ld_arg_width(32)_f64	$d0, [$s0];
	ld_arg_width(64)_f64	$d0, [$s0];
	ld_arg_width(128)_f64	$d0, [$s0];
	ld_arg_width(256)_f64	$d0, [$s0];
	ld_arg_width(512)_f64	$d0, [$s0];
	ld_arg_width(1024)_f64	$d0, [$s0];
	ld_arg_width(2048)_f64	$d0, [$s0];
	ld_arg_width(4096)_f64	$d0, [$s0];
	ld_arg_width(8192)_f64	$d0, [$s0];
	ld_arg_width(16384)_f64	$d0, [$s0];
	ld_arg_width(32768)_f64	$d0, [$s0];
	ld_arg_width(65536)_f64	$d0, [$s0];
	ld_arg_width(131072)_f64	$d0, [$s0];
	ld_arg_width(262144)_f64	$d0, [$s0];
	ld_arg_width(524288)_f64	$d0, [$s0];
	ld_arg_width(1048576)_f64	$d0, [$s0];
	ld_arg_width(2097152)_f64	$d0, [$s0];
	ld_arg_width(4194304)_f64	$d0, [$s0];
	ld_arg_width(8388608)_f64	$d0, [$s0];
	ld_arg_width(16777216)_f64	$d0, [$s0];
	ld_arg_width(33554432)_f64	$d0, [$s0];
	ld_arg_width(67108864)_f64	$d0, [$s0];
	ld_arg_width(134217728)_f64	$d0, [$s0];
	ld_arg_width(268435456)_f64	$d0, [$s0];
	ld_arg_width(536870912)_f64	$d0, [$s0];
	ld_arg_width(1073741824)_f64	$d0, [$s0];
	ld_arg_width(2147483648)_f64	$d0, [$s0];
	ld_arg_width(WAVESIZE)_f64	$d0, [$s0];
	ld_arg_width(all)_f64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_b128	$q0, [$s0];
	// 
	ld_const_b128	$q0, [$s0];
	ld_b128	$q0, [0];
	ld_align(2)_b128	$q0, [$s0];
	ld_align(4)_b128	$q0, [$s0];
	ld_align(8)_b128	$q0, [$s0];
	ld_align(16)_b128	$q0, [$s0];
	ld_align(32)_b128	$q0, [$s0];
	ld_align(64)_b128	$q0, [$s0];
	ld_align(128)_b128	$q0, [$s0];
	ld_equiv(1)_b128	$q0, [$s0];
	ld_equiv(2)_b128	$q0, [$s0];
	ld_equiv(255)_b128	$q0, [$s0];
	ld_width(2)_b128	$q0, [$s0];
	ld_width(4)_b128	$q0, [$s0];
	ld_width(8)_b128	$q0, [$s0];
	ld_width(16)_b128	$q0, [$s0];
	ld_width(32)_b128	$q0, [$s0];
	ld_width(64)_b128	$q0, [$s0];
	ld_width(128)_b128	$q0, [$s0];
	ld_width(256)_b128	$q0, [$s0];
	ld_width(512)_b128	$q0, [$s0];
	ld_width(1024)_b128	$q0, [$s0];
	ld_width(2048)_b128	$q0, [$s0];
	ld_width(4096)_b128	$q0, [$s0];
	ld_width(8192)_b128	$q0, [$s0];
	ld_width(16384)_b128	$q0, [$s0];
	ld_width(32768)_b128	$q0, [$s0];
	ld_width(65536)_b128	$q0, [$s0];
	ld_width(131072)_b128	$q0, [$s0];
	ld_width(262144)_b128	$q0, [$s0];
	ld_width(524288)_b128	$q0, [$s0];
	ld_width(1048576)_b128	$q0, [$s0];
	ld_width(2097152)_b128	$q0, [$s0];
	ld_width(4194304)_b128	$q0, [$s0];
	ld_width(8388608)_b128	$q0, [$s0];
	ld_width(16777216)_b128	$q0, [$s0];
	ld_width(33554432)_b128	$q0, [$s0];
	ld_width(67108864)_b128	$q0, [$s0];
	ld_width(134217728)_b128	$q0, [$s0];
	ld_width(268435456)_b128	$q0, [$s0];
	ld_width(536870912)_b128	$q0, [$s0];
	ld_width(1073741824)_b128	$q0, [$s0];
	ld_width(2147483648)_b128	$q0, [$s0];
	ld_width(WAVESIZE)_b128	$q0, [$s0];
	ld_width(all)_b128	$q0, [$s0];
	// 
	// Next sample
	// 
	ld_global_b128	$q0, [&GlobalVar];
	// 
	ld_global_const_b128	$q0, [&GlobalVar];
	ld_global_b128	$q0, [$s0];
	ld_global_b128	$q0, [0];
	ld_global_align(2)_b128	$q0, [&GlobalVar];
	ld_global_align(4)_b128	$q0, [&GlobalVar];
	ld_global_align(8)_b128	$q0, [&GlobalVar];
	ld_global_align(16)_b128	$q0, [&GlobalVar];
	ld_global_align(32)_b128	$q0, [&GlobalVar];
	ld_global_align(64)_b128	$q0, [&GlobalVar];
	ld_global_align(128)_b128	$q0, [&GlobalVar];
	ld_global_equiv(1)_b128	$q0, [&GlobalVar];
	ld_global_equiv(2)_b128	$q0, [&GlobalVar];
	ld_global_equiv(255)_b128	$q0, [&GlobalVar];
	ld_global_width(2)_b128	$q0, [&GlobalVar];
	ld_global_width(4)_b128	$q0, [&GlobalVar];
	ld_global_width(8)_b128	$q0, [&GlobalVar];
	ld_global_width(16)_b128	$q0, [&GlobalVar];
	ld_global_width(32)_b128	$q0, [&GlobalVar];
	ld_global_width(64)_b128	$q0, [&GlobalVar];
	ld_global_width(128)_b128	$q0, [&GlobalVar];
	ld_global_width(256)_b128	$q0, [&GlobalVar];
	ld_global_width(512)_b128	$q0, [&GlobalVar];
	ld_global_width(1024)_b128	$q0, [&GlobalVar];
	ld_global_width(2048)_b128	$q0, [&GlobalVar];
	ld_global_width(4096)_b128	$q0, [&GlobalVar];
	ld_global_width(8192)_b128	$q0, [&GlobalVar];
	ld_global_width(16384)_b128	$q0, [&GlobalVar];
	ld_global_width(32768)_b128	$q0, [&GlobalVar];
	ld_global_width(65536)_b128	$q0, [&GlobalVar];
	ld_global_width(131072)_b128	$q0, [&GlobalVar];
	ld_global_width(262144)_b128	$q0, [&GlobalVar];
	ld_global_width(524288)_b128	$q0, [&GlobalVar];
	ld_global_width(1048576)_b128	$q0, [&GlobalVar];
	ld_global_width(2097152)_b128	$q0, [&GlobalVar];
	ld_global_width(4194304)_b128	$q0, [&GlobalVar];
	ld_global_width(8388608)_b128	$q0, [&GlobalVar];
	ld_global_width(16777216)_b128	$q0, [&GlobalVar];
	ld_global_width(33554432)_b128	$q0, [&GlobalVar];
	ld_global_width(67108864)_b128	$q0, [&GlobalVar];
	ld_global_width(134217728)_b128	$q0, [&GlobalVar];
	ld_global_width(268435456)_b128	$q0, [&GlobalVar];
	ld_global_width(536870912)_b128	$q0, [&GlobalVar];
	ld_global_width(1073741824)_b128	$q0, [&GlobalVar];
	ld_global_width(2147483648)_b128	$q0, [&GlobalVar];
	ld_global_width(WAVESIZE)_b128	$q0, [&GlobalVar];
	ld_global_width(all)_b128	$q0, [&GlobalVar];
	// 
	// Next sample
	// 
	ld_readonly_b128	$q0, [&ReadonlyVar];
	// 
	ld_readonly_const_b128	$q0, [&ReadonlyVar];
	ld_readonly_b128	$q0, [$s0];
	ld_readonly_b128	$q0, [0];
	ld_readonly_align(2)_b128	$q0, [&ReadonlyVar];
	ld_readonly_align(4)_b128	$q0, [&ReadonlyVar];
	ld_readonly_align(8)_b128	$q0, [&ReadonlyVar];
	ld_readonly_align(16)_b128	$q0, [&ReadonlyVar];
	ld_readonly_align(32)_b128	$q0, [&ReadonlyVar];
	ld_readonly_align(64)_b128	$q0, [&ReadonlyVar];
	ld_readonly_align(128)_b128	$q0, [&ReadonlyVar];
	ld_readonly_equiv(1)_b128	$q0, [&ReadonlyVar];
	ld_readonly_equiv(2)_b128	$q0, [&ReadonlyVar];
	ld_readonly_equiv(255)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(2)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(4)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(8)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(16)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(32)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(64)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(128)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(256)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(512)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(1024)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(2048)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(4096)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(8192)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(16384)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(32768)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(65536)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(131072)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(262144)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(524288)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(1048576)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(2097152)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(4194304)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(8388608)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(16777216)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(33554432)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(67108864)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(134217728)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(268435456)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(536870912)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(1073741824)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(2147483648)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(WAVESIZE)_b128	$q0, [&ReadonlyVar];
	ld_readonly_width(all)_b128	$q0, [&ReadonlyVar];
	// 
	// Next sample
	// 
	ld_kernarg_b128	$q0, [$s0];
	// 
	ld_kernarg_const_b128	$q0, [$s0];
	ld_kernarg_b128	$q0, [0];
	ld_kernarg_align(2)_b128	$q0, [$s0];
	ld_kernarg_align(4)_b128	$q0, [$s0];
	ld_kernarg_align(8)_b128	$q0, [$s0];
	ld_kernarg_align(16)_b128	$q0, [$s0];
	ld_kernarg_align(32)_b128	$q0, [$s0];
	ld_kernarg_align(64)_b128	$q0, [$s0];
	ld_kernarg_align(128)_b128	$q0, [$s0];
	ld_kernarg_equiv(1)_b128	$q0, [$s0];
	ld_kernarg_equiv(2)_b128	$q0, [$s0];
	ld_kernarg_equiv(255)_b128	$q0, [$s0];
	ld_kernarg_width(2)_b128	$q0, [$s0];
	ld_kernarg_width(4)_b128	$q0, [$s0];
	ld_kernarg_width(8)_b128	$q0, [$s0];
	ld_kernarg_width(16)_b128	$q0, [$s0];
	ld_kernarg_width(32)_b128	$q0, [$s0];
	ld_kernarg_width(64)_b128	$q0, [$s0];
	ld_kernarg_width(128)_b128	$q0, [$s0];
	ld_kernarg_width(256)_b128	$q0, [$s0];
	ld_kernarg_width(512)_b128	$q0, [$s0];
	ld_kernarg_width(1024)_b128	$q0, [$s0];
	ld_kernarg_width(2048)_b128	$q0, [$s0];
	ld_kernarg_width(4096)_b128	$q0, [$s0];
	ld_kernarg_width(8192)_b128	$q0, [$s0];
	ld_kernarg_width(16384)_b128	$q0, [$s0];
	ld_kernarg_width(32768)_b128	$q0, [$s0];
	ld_kernarg_width(65536)_b128	$q0, [$s0];
	ld_kernarg_width(131072)_b128	$q0, [$s0];
	ld_kernarg_width(262144)_b128	$q0, [$s0];
	ld_kernarg_width(524288)_b128	$q0, [$s0];
	ld_kernarg_width(1048576)_b128	$q0, [$s0];
	ld_kernarg_width(2097152)_b128	$q0, [$s0];
	ld_kernarg_width(4194304)_b128	$q0, [$s0];
	ld_kernarg_width(8388608)_b128	$q0, [$s0];
	ld_kernarg_width(16777216)_b128	$q0, [$s0];
	ld_kernarg_width(33554432)_b128	$q0, [$s0];
	ld_kernarg_width(67108864)_b128	$q0, [$s0];
	ld_kernarg_width(134217728)_b128	$q0, [$s0];
	ld_kernarg_width(268435456)_b128	$q0, [$s0];
	ld_kernarg_width(536870912)_b128	$q0, [$s0];
	ld_kernarg_width(1073741824)_b128	$q0, [$s0];
	ld_kernarg_width(2147483648)_b128	$q0, [$s0];
	ld_kernarg_width(WAVESIZE)_b128	$q0, [$s0];
	ld_kernarg_width(all)_b128	$q0, [$s0];
	// 
	// Next sample
	// 
	ld_group_b128	$q0, [&GroupVar];
	// 
	ld_group_b128	$q0, [$s0];
	ld_group_b128	$q0, [0];
	ld_group_align(2)_b128	$q0, [&GroupVar];
	ld_group_align(4)_b128	$q0, [&GroupVar];
	ld_group_align(8)_b128	$q0, [&GroupVar];
	ld_group_align(16)_b128	$q0, [&GroupVar];
	ld_group_align(32)_b128	$q0, [&GroupVar];
	ld_group_align(64)_b128	$q0, [&GroupVar];
	ld_group_align(128)_b128	$q0, [&GroupVar];
	ld_group_equiv(1)_b128	$q0, [&GroupVar];
	ld_group_equiv(2)_b128	$q0, [&GroupVar];
	ld_group_equiv(255)_b128	$q0, [&GroupVar];
	ld_group_width(2)_b128	$q0, [&GroupVar];
	ld_group_width(4)_b128	$q0, [&GroupVar];
	ld_group_width(8)_b128	$q0, [&GroupVar];
	ld_group_width(16)_b128	$q0, [&GroupVar];
	ld_group_width(32)_b128	$q0, [&GroupVar];
	ld_group_width(64)_b128	$q0, [&GroupVar];
	ld_group_width(128)_b128	$q0, [&GroupVar];
	ld_group_width(256)_b128	$q0, [&GroupVar];
	ld_group_width(512)_b128	$q0, [&GroupVar];
	ld_group_width(1024)_b128	$q0, [&GroupVar];
	ld_group_width(2048)_b128	$q0, [&GroupVar];
	ld_group_width(4096)_b128	$q0, [&GroupVar];
	ld_group_width(8192)_b128	$q0, [&GroupVar];
	ld_group_width(16384)_b128	$q0, [&GroupVar];
	ld_group_width(32768)_b128	$q0, [&GroupVar];
	ld_group_width(65536)_b128	$q0, [&GroupVar];
	ld_group_width(131072)_b128	$q0, [&GroupVar];
	ld_group_width(262144)_b128	$q0, [&GroupVar];
	ld_group_width(524288)_b128	$q0, [&GroupVar];
	ld_group_width(1048576)_b128	$q0, [&GroupVar];
	ld_group_width(2097152)_b128	$q0, [&GroupVar];
	ld_group_width(4194304)_b128	$q0, [&GroupVar];
	ld_group_width(8388608)_b128	$q0, [&GroupVar];
	ld_group_width(16777216)_b128	$q0, [&GroupVar];
	ld_group_width(33554432)_b128	$q0, [&GroupVar];
	ld_group_width(67108864)_b128	$q0, [&GroupVar];
	ld_group_width(134217728)_b128	$q0, [&GroupVar];
	ld_group_width(268435456)_b128	$q0, [&GroupVar];
	ld_group_width(536870912)_b128	$q0, [&GroupVar];
	ld_group_width(1073741824)_b128	$q0, [&GroupVar];
	ld_group_width(2147483648)_b128	$q0, [&GroupVar];
	ld_group_width(WAVESIZE)_b128	$q0, [&GroupVar];
	ld_group_width(all)_b128	$q0, [&GroupVar];
	// 
	// Next sample
	// 
	ld_private_b128	$q0, [&PrivateVar];
	// 
	ld_private_b128	$q0, [$s0];
	ld_private_b128	$q0, [0];
	ld_private_align(2)_b128	$q0, [&PrivateVar];
	ld_private_align(4)_b128	$q0, [&PrivateVar];
	ld_private_align(8)_b128	$q0, [&PrivateVar];
	ld_private_align(16)_b128	$q0, [&PrivateVar];
	ld_private_align(32)_b128	$q0, [&PrivateVar];
	ld_private_align(64)_b128	$q0, [&PrivateVar];
	ld_private_align(128)_b128	$q0, [&PrivateVar];
	ld_private_equiv(1)_b128	$q0, [&PrivateVar];
	ld_private_equiv(2)_b128	$q0, [&PrivateVar];
	ld_private_equiv(255)_b128	$q0, [&PrivateVar];
	ld_private_width(2)_b128	$q0, [&PrivateVar];
	ld_private_width(4)_b128	$q0, [&PrivateVar];
	ld_private_width(8)_b128	$q0, [&PrivateVar];
	ld_private_width(16)_b128	$q0, [&PrivateVar];
	ld_private_width(32)_b128	$q0, [&PrivateVar];
	ld_private_width(64)_b128	$q0, [&PrivateVar];
	ld_private_width(128)_b128	$q0, [&PrivateVar];
	ld_private_width(256)_b128	$q0, [&PrivateVar];
	ld_private_width(512)_b128	$q0, [&PrivateVar];
	ld_private_width(1024)_b128	$q0, [&PrivateVar];
	ld_private_width(2048)_b128	$q0, [&PrivateVar];
	ld_private_width(4096)_b128	$q0, [&PrivateVar];
	ld_private_width(8192)_b128	$q0, [&PrivateVar];
	ld_private_width(16384)_b128	$q0, [&PrivateVar];
	ld_private_width(32768)_b128	$q0, [&PrivateVar];
	ld_private_width(65536)_b128	$q0, [&PrivateVar];
	ld_private_width(131072)_b128	$q0, [&PrivateVar];
	ld_private_width(262144)_b128	$q0, [&PrivateVar];
	ld_private_width(524288)_b128	$q0, [&PrivateVar];
	ld_private_width(1048576)_b128	$q0, [&PrivateVar];
	ld_private_width(2097152)_b128	$q0, [&PrivateVar];
	ld_private_width(4194304)_b128	$q0, [&PrivateVar];
	ld_private_width(8388608)_b128	$q0, [&PrivateVar];
	ld_private_width(16777216)_b128	$q0, [&PrivateVar];
	ld_private_width(33554432)_b128	$q0, [&PrivateVar];
	ld_private_width(67108864)_b128	$q0, [&PrivateVar];
	ld_private_width(134217728)_b128	$q0, [&PrivateVar];
	ld_private_width(268435456)_b128	$q0, [&PrivateVar];
	ld_private_width(536870912)_b128	$q0, [&PrivateVar];
	ld_private_width(1073741824)_b128	$q0, [&PrivateVar];
	ld_private_width(2147483648)_b128	$q0, [&PrivateVar];
	ld_private_width(WAVESIZE)_b128	$q0, [&PrivateVar];
	ld_private_width(all)_b128	$q0, [&PrivateVar];
	// 
	// Next sample
	// 
	ld_spill_b128	$q0, [$s0];
	// 
	ld_spill_b128	$q0, [0];
	ld_spill_align(2)_b128	$q0, [$s0];
	ld_spill_align(4)_b128	$q0, [$s0];
	ld_spill_align(8)_b128	$q0, [$s0];
	ld_spill_align(16)_b128	$q0, [$s0];
	ld_spill_align(32)_b128	$q0, [$s0];
	ld_spill_align(64)_b128	$q0, [$s0];
	ld_spill_align(128)_b128	$q0, [$s0];
	ld_spill_equiv(1)_b128	$q0, [$s0];
	ld_spill_equiv(2)_b128	$q0, [$s0];
	ld_spill_equiv(255)_b128	$q0, [$s0];
	ld_spill_width(2)_b128	$q0, [$s0];
	ld_spill_width(4)_b128	$q0, [$s0];
	ld_spill_width(8)_b128	$q0, [$s0];
	ld_spill_width(16)_b128	$q0, [$s0];
	ld_spill_width(32)_b128	$q0, [$s0];
	ld_spill_width(64)_b128	$q0, [$s0];
	ld_spill_width(128)_b128	$q0, [$s0];
	ld_spill_width(256)_b128	$q0, [$s0];
	ld_spill_width(512)_b128	$q0, [$s0];
	ld_spill_width(1024)_b128	$q0, [$s0];
	ld_spill_width(2048)_b128	$q0, [$s0];
	ld_spill_width(4096)_b128	$q0, [$s0];
	ld_spill_width(8192)_b128	$q0, [$s0];
	ld_spill_width(16384)_b128	$q0, [$s0];
	ld_spill_width(32768)_b128	$q0, [$s0];
	ld_spill_width(65536)_b128	$q0, [$s0];
	ld_spill_width(131072)_b128	$q0, [$s0];
	ld_spill_width(262144)_b128	$q0, [$s0];
	ld_spill_width(524288)_b128	$q0, [$s0];
	ld_spill_width(1048576)_b128	$q0, [$s0];
	ld_spill_width(2097152)_b128	$q0, [$s0];
	ld_spill_width(4194304)_b128	$q0, [$s0];
	ld_spill_width(8388608)_b128	$q0, [$s0];
	ld_spill_width(16777216)_b128	$q0, [$s0];
	ld_spill_width(33554432)_b128	$q0, [$s0];
	ld_spill_width(67108864)_b128	$q0, [$s0];
	ld_spill_width(134217728)_b128	$q0, [$s0];
	ld_spill_width(268435456)_b128	$q0, [$s0];
	ld_spill_width(536870912)_b128	$q0, [$s0];
	ld_spill_width(1073741824)_b128	$q0, [$s0];
	ld_spill_width(2147483648)_b128	$q0, [$s0];
	ld_spill_width(WAVESIZE)_b128	$q0, [$s0];
	ld_spill_width(all)_b128	$q0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_b128	$q0, [$s0];
	// 
	ld_arg_b128	$q0, [0];
	ld_arg_align(2)_b128	$q0, [$s0];
	ld_arg_align(4)_b128	$q0, [$s0];
	ld_arg_align(8)_b128	$q0, [$s0];
	ld_arg_align(16)_b128	$q0, [$s0];
	ld_arg_align(32)_b128	$q0, [$s0];
	ld_arg_align(64)_b128	$q0, [$s0];
	ld_arg_align(128)_b128	$q0, [$s0];
	ld_arg_equiv(1)_b128	$q0, [$s0];
	ld_arg_equiv(2)_b128	$q0, [$s0];
	ld_arg_equiv(255)_b128	$q0, [$s0];
	ld_arg_width(2)_b128	$q0, [$s0];
	ld_arg_width(4)_b128	$q0, [$s0];
	ld_arg_width(8)_b128	$q0, [$s0];
	ld_arg_width(16)_b128	$q0, [$s0];
	ld_arg_width(32)_b128	$q0, [$s0];
	ld_arg_width(64)_b128	$q0, [$s0];
	ld_arg_width(128)_b128	$q0, [$s0];
	ld_arg_width(256)_b128	$q0, [$s0];
	ld_arg_width(512)_b128	$q0, [$s0];
	ld_arg_width(1024)_b128	$q0, [$s0];
	ld_arg_width(2048)_b128	$q0, [$s0];
	ld_arg_width(4096)_b128	$q0, [$s0];
	ld_arg_width(8192)_b128	$q0, [$s0];
	ld_arg_width(16384)_b128	$q0, [$s0];
	ld_arg_width(32768)_b128	$q0, [$s0];
	ld_arg_width(65536)_b128	$q0, [$s0];
	ld_arg_width(131072)_b128	$q0, [$s0];
	ld_arg_width(262144)_b128	$q0, [$s0];
	ld_arg_width(524288)_b128	$q0, [$s0];
	ld_arg_width(1048576)_b128	$q0, [$s0];
	ld_arg_width(2097152)_b128	$q0, [$s0];
	ld_arg_width(4194304)_b128	$q0, [$s0];
	ld_arg_width(8388608)_b128	$q0, [$s0];
	ld_arg_width(16777216)_b128	$q0, [$s0];
	ld_arg_width(33554432)_b128	$q0, [$s0];
	ld_arg_width(67108864)_b128	$q0, [$s0];
	ld_arg_width(134217728)_b128	$q0, [$s0];
	ld_arg_width(268435456)_b128	$q0, [$s0];
	ld_arg_width(536870912)_b128	$q0, [$s0];
	ld_arg_width(1073741824)_b128	$q0, [$s0];
	ld_arg_width(2147483648)_b128	$q0, [$s0];
	ld_arg_width(WAVESIZE)_b128	$q0, [$s0];
	ld_arg_width(all)_b128	$q0, [$s0];
	// 
	// Next sample
	// 
	ld_samp	$d0, [$s0];
	// 
	ld_const_samp	$d0, [$s0];
	ld_samp	$d0, [0];
	ld_align(2)_samp	$d0, [$s0];
	ld_align(4)_samp	$d0, [$s0];
	ld_align(8)_samp	$d0, [$s0];
	ld_align(16)_samp	$d0, [$s0];
	ld_align(32)_samp	$d0, [$s0];
	ld_align(64)_samp	$d0, [$s0];
	ld_align(128)_samp	$d0, [$s0];
	ld_equiv(1)_samp	$d0, [$s0];
	ld_equiv(2)_samp	$d0, [$s0];
	ld_equiv(255)_samp	$d0, [$s0];
	ld_width(2)_samp	$d0, [$s0];
	ld_width(4)_samp	$d0, [$s0];
	ld_width(8)_samp	$d0, [$s0];
	ld_width(16)_samp	$d0, [$s0];
	ld_width(32)_samp	$d0, [$s0];
	ld_width(64)_samp	$d0, [$s0];
	ld_width(128)_samp	$d0, [$s0];
	ld_width(256)_samp	$d0, [$s0];
	ld_width(512)_samp	$d0, [$s0];
	ld_width(1024)_samp	$d0, [$s0];
	ld_width(2048)_samp	$d0, [$s0];
	ld_width(4096)_samp	$d0, [$s0];
	ld_width(8192)_samp	$d0, [$s0];
	ld_width(16384)_samp	$d0, [$s0];
	ld_width(32768)_samp	$d0, [$s0];
	ld_width(65536)_samp	$d0, [$s0];
	ld_width(131072)_samp	$d0, [$s0];
	ld_width(262144)_samp	$d0, [$s0];
	ld_width(524288)_samp	$d0, [$s0];
	ld_width(1048576)_samp	$d0, [$s0];
	ld_width(2097152)_samp	$d0, [$s0];
	ld_width(4194304)_samp	$d0, [$s0];
	ld_width(8388608)_samp	$d0, [$s0];
	ld_width(16777216)_samp	$d0, [$s0];
	ld_width(33554432)_samp	$d0, [$s0];
	ld_width(67108864)_samp	$d0, [$s0];
	ld_width(134217728)_samp	$d0, [$s0];
	ld_width(268435456)_samp	$d0, [$s0];
	ld_width(536870912)_samp	$d0, [$s0];
	ld_width(1073741824)_samp	$d0, [$s0];
	ld_width(2147483648)_samp	$d0, [$s0];
	ld_width(WAVESIZE)_samp	$d0, [$s0];
	ld_width(all)_samp	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_global_samp	$d0, [&GlobalSamp];
	// 
	ld_global_const_samp	$d0, [&GlobalSamp];
	ld_global_samp	$d0, [$s0];
	ld_global_samp	$d0, [0];
	ld_global_align(2)_samp	$d0, [&GlobalSamp];
	ld_global_align(4)_samp	$d0, [&GlobalSamp];
	ld_global_align(8)_samp	$d0, [&GlobalSamp];
	ld_global_align(16)_samp	$d0, [&GlobalSamp];
	ld_global_align(32)_samp	$d0, [&GlobalSamp];
	ld_global_align(64)_samp	$d0, [&GlobalSamp];
	ld_global_align(128)_samp	$d0, [&GlobalSamp];
	ld_global_equiv(1)_samp	$d0, [&GlobalSamp];
	ld_global_equiv(2)_samp	$d0, [&GlobalSamp];
	ld_global_equiv(255)_samp	$d0, [&GlobalSamp];
	ld_global_width(2)_samp	$d0, [&GlobalSamp];
	ld_global_width(4)_samp	$d0, [&GlobalSamp];
	ld_global_width(8)_samp	$d0, [&GlobalSamp];
	ld_global_width(16)_samp	$d0, [&GlobalSamp];
	ld_global_width(32)_samp	$d0, [&GlobalSamp];
	ld_global_width(64)_samp	$d0, [&GlobalSamp];
	ld_global_width(128)_samp	$d0, [&GlobalSamp];
	ld_global_width(256)_samp	$d0, [&GlobalSamp];
	ld_global_width(512)_samp	$d0, [&GlobalSamp];
	ld_global_width(1024)_samp	$d0, [&GlobalSamp];
	ld_global_width(2048)_samp	$d0, [&GlobalSamp];
	ld_global_width(4096)_samp	$d0, [&GlobalSamp];
	ld_global_width(8192)_samp	$d0, [&GlobalSamp];
	ld_global_width(16384)_samp	$d0, [&GlobalSamp];
	ld_global_width(32768)_samp	$d0, [&GlobalSamp];
	ld_global_width(65536)_samp	$d0, [&GlobalSamp];
	ld_global_width(131072)_samp	$d0, [&GlobalSamp];
	ld_global_width(262144)_samp	$d0, [&GlobalSamp];
	ld_global_width(524288)_samp	$d0, [&GlobalSamp];
	ld_global_width(1048576)_samp	$d0, [&GlobalSamp];
	ld_global_width(2097152)_samp	$d0, [&GlobalSamp];
	ld_global_width(4194304)_samp	$d0, [&GlobalSamp];
	ld_global_width(8388608)_samp	$d0, [&GlobalSamp];
	ld_global_width(16777216)_samp	$d0, [&GlobalSamp];
	ld_global_width(33554432)_samp	$d0, [&GlobalSamp];
	ld_global_width(67108864)_samp	$d0, [&GlobalSamp];
	ld_global_width(134217728)_samp	$d0, [&GlobalSamp];
	ld_global_width(268435456)_samp	$d0, [&GlobalSamp];
	ld_global_width(536870912)_samp	$d0, [&GlobalSamp];
	ld_global_width(1073741824)_samp	$d0, [&GlobalSamp];
	ld_global_width(2147483648)_samp	$d0, [&GlobalSamp];
	ld_global_width(WAVESIZE)_samp	$d0, [&GlobalSamp];
	ld_global_width(all)_samp	$d0, [&GlobalSamp];
	// 
	// Next sample
	// 
	ld_readonly_samp	$d0, [&ReadonlySamp];
	// 
	ld_readonly_const_samp	$d0, [&ReadonlySamp];
	ld_readonly_samp	$d0, [$s0];
	ld_readonly_samp	$d0, [0];
	ld_readonly_align(2)_samp	$d0, [&ReadonlySamp];
	ld_readonly_align(4)_samp	$d0, [&ReadonlySamp];
	ld_readonly_align(8)_samp	$d0, [&ReadonlySamp];
	ld_readonly_align(16)_samp	$d0, [&ReadonlySamp];
	ld_readonly_align(32)_samp	$d0, [&ReadonlySamp];
	ld_readonly_align(64)_samp	$d0, [&ReadonlySamp];
	ld_readonly_align(128)_samp	$d0, [&ReadonlySamp];
	ld_readonly_equiv(1)_samp	$d0, [&ReadonlySamp];
	ld_readonly_equiv(2)_samp	$d0, [&ReadonlySamp];
	ld_readonly_equiv(255)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(2)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(4)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(8)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(16)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(32)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(64)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(128)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(256)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(512)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(1024)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(2048)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(4096)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(8192)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(16384)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(32768)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(65536)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(131072)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(262144)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(524288)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(1048576)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(2097152)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(4194304)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(8388608)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(16777216)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(33554432)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(67108864)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(134217728)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(268435456)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(536870912)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(1073741824)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(2147483648)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(WAVESIZE)_samp	$d0, [&ReadonlySamp];
	ld_readonly_width(all)_samp	$d0, [&ReadonlySamp];
	// 
	// Next sample
	// 
	ld_kernarg_samp	$d0, [$s0];
	// 
	ld_kernarg_const_samp	$d0, [$s0];
	ld_kernarg_samp	$d0, [0];
	ld_kernarg_align(2)_samp	$d0, [$s0];
	ld_kernarg_align(4)_samp	$d0, [$s0];
	ld_kernarg_align(8)_samp	$d0, [$s0];
	ld_kernarg_align(16)_samp	$d0, [$s0];
	ld_kernarg_align(32)_samp	$d0, [$s0];
	ld_kernarg_align(64)_samp	$d0, [$s0];
	ld_kernarg_align(128)_samp	$d0, [$s0];
	ld_kernarg_equiv(1)_samp	$d0, [$s0];
	ld_kernarg_equiv(2)_samp	$d0, [$s0];
	ld_kernarg_equiv(255)_samp	$d0, [$s0];
	ld_kernarg_width(2)_samp	$d0, [$s0];
	ld_kernarg_width(4)_samp	$d0, [$s0];
	ld_kernarg_width(8)_samp	$d0, [$s0];
	ld_kernarg_width(16)_samp	$d0, [$s0];
	ld_kernarg_width(32)_samp	$d0, [$s0];
	ld_kernarg_width(64)_samp	$d0, [$s0];
	ld_kernarg_width(128)_samp	$d0, [$s0];
	ld_kernarg_width(256)_samp	$d0, [$s0];
	ld_kernarg_width(512)_samp	$d0, [$s0];
	ld_kernarg_width(1024)_samp	$d0, [$s0];
	ld_kernarg_width(2048)_samp	$d0, [$s0];
	ld_kernarg_width(4096)_samp	$d0, [$s0];
	ld_kernarg_width(8192)_samp	$d0, [$s0];
	ld_kernarg_width(16384)_samp	$d0, [$s0];
	ld_kernarg_width(32768)_samp	$d0, [$s0];
	ld_kernarg_width(65536)_samp	$d0, [$s0];
	ld_kernarg_width(131072)_samp	$d0, [$s0];
	ld_kernarg_width(262144)_samp	$d0, [$s0];
	ld_kernarg_width(524288)_samp	$d0, [$s0];
	ld_kernarg_width(1048576)_samp	$d0, [$s0];
	ld_kernarg_width(2097152)_samp	$d0, [$s0];
	ld_kernarg_width(4194304)_samp	$d0, [$s0];
	ld_kernarg_width(8388608)_samp	$d0, [$s0];
	ld_kernarg_width(16777216)_samp	$d0, [$s0];
	ld_kernarg_width(33554432)_samp	$d0, [$s0];
	ld_kernarg_width(67108864)_samp	$d0, [$s0];
	ld_kernarg_width(134217728)_samp	$d0, [$s0];
	ld_kernarg_width(268435456)_samp	$d0, [$s0];
	ld_kernarg_width(536870912)_samp	$d0, [$s0];
	ld_kernarg_width(1073741824)_samp	$d0, [$s0];
	ld_kernarg_width(2147483648)_samp	$d0, [$s0];
	ld_kernarg_width(WAVESIZE)_samp	$d0, [$s0];
	ld_kernarg_width(all)_samp	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_group_samp	$d0, [$s0];
	// 
	ld_group_samp	$d0, [0];
	ld_group_align(2)_samp	$d0, [$s0];
	ld_group_align(4)_samp	$d0, [$s0];
	ld_group_align(8)_samp	$d0, [$s0];
	ld_group_align(16)_samp	$d0, [$s0];
	ld_group_align(32)_samp	$d0, [$s0];
	ld_group_align(64)_samp	$d0, [$s0];
	ld_group_align(128)_samp	$d0, [$s0];
	ld_group_equiv(1)_samp	$d0, [$s0];
	ld_group_equiv(2)_samp	$d0, [$s0];
	ld_group_equiv(255)_samp	$d0, [$s0];
	ld_group_width(2)_samp	$d0, [$s0];
	ld_group_width(4)_samp	$d0, [$s0];
	ld_group_width(8)_samp	$d0, [$s0];
	ld_group_width(16)_samp	$d0, [$s0];
	ld_group_width(32)_samp	$d0, [$s0];
	ld_group_width(64)_samp	$d0, [$s0];
	ld_group_width(128)_samp	$d0, [$s0];
	ld_group_width(256)_samp	$d0, [$s0];
	ld_group_width(512)_samp	$d0, [$s0];
	ld_group_width(1024)_samp	$d0, [$s0];
	ld_group_width(2048)_samp	$d0, [$s0];
	ld_group_width(4096)_samp	$d0, [$s0];
	ld_group_width(8192)_samp	$d0, [$s0];
	ld_group_width(16384)_samp	$d0, [$s0];
	ld_group_width(32768)_samp	$d0, [$s0];
	ld_group_width(65536)_samp	$d0, [$s0];
	ld_group_width(131072)_samp	$d0, [$s0];
	ld_group_width(262144)_samp	$d0, [$s0];
	ld_group_width(524288)_samp	$d0, [$s0];
	ld_group_width(1048576)_samp	$d0, [$s0];
	ld_group_width(2097152)_samp	$d0, [$s0];
	ld_group_width(4194304)_samp	$d0, [$s0];
	ld_group_width(8388608)_samp	$d0, [$s0];
	ld_group_width(16777216)_samp	$d0, [$s0];
	ld_group_width(33554432)_samp	$d0, [$s0];
	ld_group_width(67108864)_samp	$d0, [$s0];
	ld_group_width(134217728)_samp	$d0, [$s0];
	ld_group_width(268435456)_samp	$d0, [$s0];
	ld_group_width(536870912)_samp	$d0, [$s0];
	ld_group_width(1073741824)_samp	$d0, [$s0];
	ld_group_width(2147483648)_samp	$d0, [$s0];
	ld_group_width(WAVESIZE)_samp	$d0, [$s0];
	ld_group_width(all)_samp	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_private_samp	$d0, [$s0];
	// 
	ld_private_samp	$d0, [0];
	ld_private_align(2)_samp	$d0, [$s0];
	ld_private_align(4)_samp	$d0, [$s0];
	ld_private_align(8)_samp	$d0, [$s0];
	ld_private_align(16)_samp	$d0, [$s0];
	ld_private_align(32)_samp	$d0, [$s0];
	ld_private_align(64)_samp	$d0, [$s0];
	ld_private_align(128)_samp	$d0, [$s0];
	ld_private_equiv(1)_samp	$d0, [$s0];
	ld_private_equiv(2)_samp	$d0, [$s0];
	ld_private_equiv(255)_samp	$d0, [$s0];
	ld_private_width(2)_samp	$d0, [$s0];
	ld_private_width(4)_samp	$d0, [$s0];
	ld_private_width(8)_samp	$d0, [$s0];
	ld_private_width(16)_samp	$d0, [$s0];
	ld_private_width(32)_samp	$d0, [$s0];
	ld_private_width(64)_samp	$d0, [$s0];
	ld_private_width(128)_samp	$d0, [$s0];
	ld_private_width(256)_samp	$d0, [$s0];
	ld_private_width(512)_samp	$d0, [$s0];
	ld_private_width(1024)_samp	$d0, [$s0];
	ld_private_width(2048)_samp	$d0, [$s0];
	ld_private_width(4096)_samp	$d0, [$s0];
	ld_private_width(8192)_samp	$d0, [$s0];
	ld_private_width(16384)_samp	$d0, [$s0];
	ld_private_width(32768)_samp	$d0, [$s0];
	ld_private_width(65536)_samp	$d0, [$s0];
	ld_private_width(131072)_samp	$d0, [$s0];
	ld_private_width(262144)_samp	$d0, [$s0];
	ld_private_width(524288)_samp	$d0, [$s0];
	ld_private_width(1048576)_samp	$d0, [$s0];
	ld_private_width(2097152)_samp	$d0, [$s0];
	ld_private_width(4194304)_samp	$d0, [$s0];
	ld_private_width(8388608)_samp	$d0, [$s0];
	ld_private_width(16777216)_samp	$d0, [$s0];
	ld_private_width(33554432)_samp	$d0, [$s0];
	ld_private_width(67108864)_samp	$d0, [$s0];
	ld_private_width(134217728)_samp	$d0, [$s0];
	ld_private_width(268435456)_samp	$d0, [$s0];
	ld_private_width(536870912)_samp	$d0, [$s0];
	ld_private_width(1073741824)_samp	$d0, [$s0];
	ld_private_width(2147483648)_samp	$d0, [$s0];
	ld_private_width(WAVESIZE)_samp	$d0, [$s0];
	ld_private_width(all)_samp	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_spill_samp	$d0, [$s0];
	// 
	ld_spill_samp	$d0, [0];
	ld_spill_align(2)_samp	$d0, [$s0];
	ld_spill_align(4)_samp	$d0, [$s0];
	ld_spill_align(8)_samp	$d0, [$s0];
	ld_spill_align(16)_samp	$d0, [$s0];
	ld_spill_align(32)_samp	$d0, [$s0];
	ld_spill_align(64)_samp	$d0, [$s0];
	ld_spill_align(128)_samp	$d0, [$s0];
	ld_spill_equiv(1)_samp	$d0, [$s0];
	ld_spill_equiv(2)_samp	$d0, [$s0];
	ld_spill_equiv(255)_samp	$d0, [$s0];
	ld_spill_width(2)_samp	$d0, [$s0];
	ld_spill_width(4)_samp	$d0, [$s0];
	ld_spill_width(8)_samp	$d0, [$s0];
	ld_spill_width(16)_samp	$d0, [$s0];
	ld_spill_width(32)_samp	$d0, [$s0];
	ld_spill_width(64)_samp	$d0, [$s0];
	ld_spill_width(128)_samp	$d0, [$s0];
	ld_spill_width(256)_samp	$d0, [$s0];
	ld_spill_width(512)_samp	$d0, [$s0];
	ld_spill_width(1024)_samp	$d0, [$s0];
	ld_spill_width(2048)_samp	$d0, [$s0];
	ld_spill_width(4096)_samp	$d0, [$s0];
	ld_spill_width(8192)_samp	$d0, [$s0];
	ld_spill_width(16384)_samp	$d0, [$s0];
	ld_spill_width(32768)_samp	$d0, [$s0];
	ld_spill_width(65536)_samp	$d0, [$s0];
	ld_spill_width(131072)_samp	$d0, [$s0];
	ld_spill_width(262144)_samp	$d0, [$s0];
	ld_spill_width(524288)_samp	$d0, [$s0];
	ld_spill_width(1048576)_samp	$d0, [$s0];
	ld_spill_width(2097152)_samp	$d0, [$s0];
	ld_spill_width(4194304)_samp	$d0, [$s0];
	ld_spill_width(8388608)_samp	$d0, [$s0];
	ld_spill_width(16777216)_samp	$d0, [$s0];
	ld_spill_width(33554432)_samp	$d0, [$s0];
	ld_spill_width(67108864)_samp	$d0, [$s0];
	ld_spill_width(134217728)_samp	$d0, [$s0];
	ld_spill_width(268435456)_samp	$d0, [$s0];
	ld_spill_width(536870912)_samp	$d0, [$s0];
	ld_spill_width(1073741824)_samp	$d0, [$s0];
	ld_spill_width(2147483648)_samp	$d0, [$s0];
	ld_spill_width(WAVESIZE)_samp	$d0, [$s0];
	ld_spill_width(all)_samp	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_samp	$d0, [$s0];
	// 
	ld_arg_samp	$d0, [0];
	ld_arg_align(2)_samp	$d0, [$s0];
	ld_arg_align(4)_samp	$d0, [$s0];
	ld_arg_align(8)_samp	$d0, [$s0];
	ld_arg_align(16)_samp	$d0, [$s0];
	ld_arg_align(32)_samp	$d0, [$s0];
	ld_arg_align(64)_samp	$d0, [$s0];
	ld_arg_align(128)_samp	$d0, [$s0];
	ld_arg_equiv(1)_samp	$d0, [$s0];
	ld_arg_equiv(2)_samp	$d0, [$s0];
	ld_arg_equiv(255)_samp	$d0, [$s0];
	ld_arg_width(2)_samp	$d0, [$s0];
	ld_arg_width(4)_samp	$d0, [$s0];
	ld_arg_width(8)_samp	$d0, [$s0];
	ld_arg_width(16)_samp	$d0, [$s0];
	ld_arg_width(32)_samp	$d0, [$s0];
	ld_arg_width(64)_samp	$d0, [$s0];
	ld_arg_width(128)_samp	$d0, [$s0];
	ld_arg_width(256)_samp	$d0, [$s0];
	ld_arg_width(512)_samp	$d0, [$s0];
	ld_arg_width(1024)_samp	$d0, [$s0];
	ld_arg_width(2048)_samp	$d0, [$s0];
	ld_arg_width(4096)_samp	$d0, [$s0];
	ld_arg_width(8192)_samp	$d0, [$s0];
	ld_arg_width(16384)_samp	$d0, [$s0];
	ld_arg_width(32768)_samp	$d0, [$s0];
	ld_arg_width(65536)_samp	$d0, [$s0];
	ld_arg_width(131072)_samp	$d0, [$s0];
	ld_arg_width(262144)_samp	$d0, [$s0];
	ld_arg_width(524288)_samp	$d0, [$s0];
	ld_arg_width(1048576)_samp	$d0, [$s0];
	ld_arg_width(2097152)_samp	$d0, [$s0];
	ld_arg_width(4194304)_samp	$d0, [$s0];
	ld_arg_width(8388608)_samp	$d0, [$s0];
	ld_arg_width(16777216)_samp	$d0, [$s0];
	ld_arg_width(33554432)_samp	$d0, [$s0];
	ld_arg_width(67108864)_samp	$d0, [$s0];
	ld_arg_width(134217728)_samp	$d0, [$s0];
	ld_arg_width(268435456)_samp	$d0, [$s0];
	ld_arg_width(536870912)_samp	$d0, [$s0];
	ld_arg_width(1073741824)_samp	$d0, [$s0];
	ld_arg_width(2147483648)_samp	$d0, [$s0];
	ld_arg_width(WAVESIZE)_samp	$d0, [$s0];
	ld_arg_width(all)_samp	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_roimg	$d0, [$s0];
	// 
	ld_const_roimg	$d0, [$s0];
	ld_roimg	$d0, [0];
	ld_align(2)_roimg	$d0, [$s0];
	ld_align(4)_roimg	$d0, [$s0];
	ld_align(8)_roimg	$d0, [$s0];
	ld_align(16)_roimg	$d0, [$s0];
	ld_align(32)_roimg	$d0, [$s0];
	ld_align(64)_roimg	$d0, [$s0];
	ld_align(128)_roimg	$d0, [$s0];
	ld_equiv(1)_roimg	$d0, [$s0];
	ld_equiv(2)_roimg	$d0, [$s0];
	ld_equiv(255)_roimg	$d0, [$s0];
	ld_width(2)_roimg	$d0, [$s0];
	ld_width(4)_roimg	$d0, [$s0];
	ld_width(8)_roimg	$d0, [$s0];
	ld_width(16)_roimg	$d0, [$s0];
	ld_width(32)_roimg	$d0, [$s0];
	ld_width(64)_roimg	$d0, [$s0];
	ld_width(128)_roimg	$d0, [$s0];
	ld_width(256)_roimg	$d0, [$s0];
	ld_width(512)_roimg	$d0, [$s0];
	ld_width(1024)_roimg	$d0, [$s0];
	ld_width(2048)_roimg	$d0, [$s0];
	ld_width(4096)_roimg	$d0, [$s0];
	ld_width(8192)_roimg	$d0, [$s0];
	ld_width(16384)_roimg	$d0, [$s0];
	ld_width(32768)_roimg	$d0, [$s0];
	ld_width(65536)_roimg	$d0, [$s0];
	ld_width(131072)_roimg	$d0, [$s0];
	ld_width(262144)_roimg	$d0, [$s0];
	ld_width(524288)_roimg	$d0, [$s0];
	ld_width(1048576)_roimg	$d0, [$s0];
	ld_width(2097152)_roimg	$d0, [$s0];
	ld_width(4194304)_roimg	$d0, [$s0];
	ld_width(8388608)_roimg	$d0, [$s0];
	ld_width(16777216)_roimg	$d0, [$s0];
	ld_width(33554432)_roimg	$d0, [$s0];
	ld_width(67108864)_roimg	$d0, [$s0];
	ld_width(134217728)_roimg	$d0, [$s0];
	ld_width(268435456)_roimg	$d0, [$s0];
	ld_width(536870912)_roimg	$d0, [$s0];
	ld_width(1073741824)_roimg	$d0, [$s0];
	ld_width(2147483648)_roimg	$d0, [$s0];
	ld_width(WAVESIZE)_roimg	$d0, [$s0];
	ld_width(all)_roimg	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_global_roimg	$d0, [&GlobalROImg];
	// 
	ld_global_const_roimg	$d0, [&GlobalROImg];
	ld_global_roimg	$d0, [$s0];
	ld_global_roimg	$d0, [0];
	ld_global_align(2)_roimg	$d0, [&GlobalROImg];
	ld_global_align(4)_roimg	$d0, [&GlobalROImg];
	ld_global_align(8)_roimg	$d0, [&GlobalROImg];
	ld_global_align(16)_roimg	$d0, [&GlobalROImg];
	ld_global_align(32)_roimg	$d0, [&GlobalROImg];
	ld_global_align(64)_roimg	$d0, [&GlobalROImg];
	ld_global_align(128)_roimg	$d0, [&GlobalROImg];
	ld_global_equiv(1)_roimg	$d0, [&GlobalROImg];
	ld_global_equiv(2)_roimg	$d0, [&GlobalROImg];
	ld_global_equiv(255)_roimg	$d0, [&GlobalROImg];
	ld_global_width(2)_roimg	$d0, [&GlobalROImg];
	ld_global_width(4)_roimg	$d0, [&GlobalROImg];
	ld_global_width(8)_roimg	$d0, [&GlobalROImg];
	ld_global_width(16)_roimg	$d0, [&GlobalROImg];
	ld_global_width(32)_roimg	$d0, [&GlobalROImg];
	ld_global_width(64)_roimg	$d0, [&GlobalROImg];
	ld_global_width(128)_roimg	$d0, [&GlobalROImg];
	ld_global_width(256)_roimg	$d0, [&GlobalROImg];
	ld_global_width(512)_roimg	$d0, [&GlobalROImg];
	ld_global_width(1024)_roimg	$d0, [&GlobalROImg];
	ld_global_width(2048)_roimg	$d0, [&GlobalROImg];
	ld_global_width(4096)_roimg	$d0, [&GlobalROImg];
	ld_global_width(8192)_roimg	$d0, [&GlobalROImg];
	ld_global_width(16384)_roimg	$d0, [&GlobalROImg];
	ld_global_width(32768)_roimg	$d0, [&GlobalROImg];
	ld_global_width(65536)_roimg	$d0, [&GlobalROImg];
	ld_global_width(131072)_roimg	$d0, [&GlobalROImg];
	ld_global_width(262144)_roimg	$d0, [&GlobalROImg];
	ld_global_width(524288)_roimg	$d0, [&GlobalROImg];
	ld_global_width(1048576)_roimg	$d0, [&GlobalROImg];
	ld_global_width(2097152)_roimg	$d0, [&GlobalROImg];
	ld_global_width(4194304)_roimg	$d0, [&GlobalROImg];
	ld_global_width(8388608)_roimg	$d0, [&GlobalROImg];
	ld_global_width(16777216)_roimg	$d0, [&GlobalROImg];
	ld_global_width(33554432)_roimg	$d0, [&GlobalROImg];
	ld_global_width(67108864)_roimg	$d0, [&GlobalROImg];
	ld_global_width(134217728)_roimg	$d0, [&GlobalROImg];
	ld_global_width(268435456)_roimg	$d0, [&GlobalROImg];
	ld_global_width(536870912)_roimg	$d0, [&GlobalROImg];
	ld_global_width(1073741824)_roimg	$d0, [&GlobalROImg];
	ld_global_width(2147483648)_roimg	$d0, [&GlobalROImg];
	ld_global_width(WAVESIZE)_roimg	$d0, [&GlobalROImg];
	ld_global_width(all)_roimg	$d0, [&GlobalROImg];
	// 
	// Next sample
	// 
	ld_readonly_roimg	$d0, [&ReadonlyROImg];
	// 
	ld_readonly_const_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_roimg	$d0, [$s0];
	ld_readonly_roimg	$d0, [0];
	ld_readonly_align(2)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_align(4)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_align(8)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_align(16)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_align(32)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_align(64)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_align(128)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_equiv(1)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_equiv(2)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_equiv(255)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(2)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(4)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(8)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(16)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(32)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(64)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(128)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(256)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(512)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(1024)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(2048)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(4096)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(8192)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(16384)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(32768)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(65536)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(131072)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(262144)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(524288)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(1048576)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(2097152)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(4194304)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(8388608)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(16777216)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(33554432)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(67108864)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(134217728)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(268435456)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(536870912)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(1073741824)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(2147483648)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(WAVESIZE)_roimg	$d0, [&ReadonlyROImg];
	ld_readonly_width(all)_roimg	$d0, [&ReadonlyROImg];
	// 
	// Next sample
	// 
	ld_kernarg_roimg	$d0, [$s0];
	// 
	ld_kernarg_const_roimg	$d0, [$s0];
	ld_kernarg_roimg	$d0, [0];
	ld_kernarg_align(2)_roimg	$d0, [$s0];
	ld_kernarg_align(4)_roimg	$d0, [$s0];
	ld_kernarg_align(8)_roimg	$d0, [$s0];
	ld_kernarg_align(16)_roimg	$d0, [$s0];
	ld_kernarg_align(32)_roimg	$d0, [$s0];
	ld_kernarg_align(64)_roimg	$d0, [$s0];
	ld_kernarg_align(128)_roimg	$d0, [$s0];
	ld_kernarg_equiv(1)_roimg	$d0, [$s0];
	ld_kernarg_equiv(2)_roimg	$d0, [$s0];
	ld_kernarg_equiv(255)_roimg	$d0, [$s0];
	ld_kernarg_width(2)_roimg	$d0, [$s0];
	ld_kernarg_width(4)_roimg	$d0, [$s0];
	ld_kernarg_width(8)_roimg	$d0, [$s0];
	ld_kernarg_width(16)_roimg	$d0, [$s0];
	ld_kernarg_width(32)_roimg	$d0, [$s0];
	ld_kernarg_width(64)_roimg	$d0, [$s0];
	ld_kernarg_width(128)_roimg	$d0, [$s0];
	ld_kernarg_width(256)_roimg	$d0, [$s0];
	ld_kernarg_width(512)_roimg	$d0, [$s0];
	ld_kernarg_width(1024)_roimg	$d0, [$s0];
	ld_kernarg_width(2048)_roimg	$d0, [$s0];
	ld_kernarg_width(4096)_roimg	$d0, [$s0];
	ld_kernarg_width(8192)_roimg	$d0, [$s0];
	ld_kernarg_width(16384)_roimg	$d0, [$s0];
	ld_kernarg_width(32768)_roimg	$d0, [$s0];
	ld_kernarg_width(65536)_roimg	$d0, [$s0];
	ld_kernarg_width(131072)_roimg	$d0, [$s0];
	ld_kernarg_width(262144)_roimg	$d0, [$s0];
	ld_kernarg_width(524288)_roimg	$d0, [$s0];
	ld_kernarg_width(1048576)_roimg	$d0, [$s0];
	ld_kernarg_width(2097152)_roimg	$d0, [$s0];
	ld_kernarg_width(4194304)_roimg	$d0, [$s0];
	ld_kernarg_width(8388608)_roimg	$d0, [$s0];
	ld_kernarg_width(16777216)_roimg	$d0, [$s0];
	ld_kernarg_width(33554432)_roimg	$d0, [$s0];
	ld_kernarg_width(67108864)_roimg	$d0, [$s0];
	ld_kernarg_width(134217728)_roimg	$d0, [$s0];
	ld_kernarg_width(268435456)_roimg	$d0, [$s0];
	ld_kernarg_width(536870912)_roimg	$d0, [$s0];
	ld_kernarg_width(1073741824)_roimg	$d0, [$s0];
	ld_kernarg_width(2147483648)_roimg	$d0, [$s0];
	ld_kernarg_width(WAVESIZE)_roimg	$d0, [$s0];
	ld_kernarg_width(all)_roimg	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_group_roimg	$d0, [$s0];
	// 
	ld_group_roimg	$d0, [0];
	ld_group_align(2)_roimg	$d0, [$s0];
	ld_group_align(4)_roimg	$d0, [$s0];
	ld_group_align(8)_roimg	$d0, [$s0];
	ld_group_align(16)_roimg	$d0, [$s0];
	ld_group_align(32)_roimg	$d0, [$s0];
	ld_group_align(64)_roimg	$d0, [$s0];
	ld_group_align(128)_roimg	$d0, [$s0];
	ld_group_equiv(1)_roimg	$d0, [$s0];
	ld_group_equiv(2)_roimg	$d0, [$s0];
	ld_group_equiv(255)_roimg	$d0, [$s0];
	ld_group_width(2)_roimg	$d0, [$s0];
	ld_group_width(4)_roimg	$d0, [$s0];
	ld_group_width(8)_roimg	$d0, [$s0];
	ld_group_width(16)_roimg	$d0, [$s0];
	ld_group_width(32)_roimg	$d0, [$s0];
	ld_group_width(64)_roimg	$d0, [$s0];
	ld_group_width(128)_roimg	$d0, [$s0];
	ld_group_width(256)_roimg	$d0, [$s0];
	ld_group_width(512)_roimg	$d0, [$s0];
	ld_group_width(1024)_roimg	$d0, [$s0];
	ld_group_width(2048)_roimg	$d0, [$s0];
	ld_group_width(4096)_roimg	$d0, [$s0];
	ld_group_width(8192)_roimg	$d0, [$s0];
	ld_group_width(16384)_roimg	$d0, [$s0];
	ld_group_width(32768)_roimg	$d0, [$s0];
	ld_group_width(65536)_roimg	$d0, [$s0];
	ld_group_width(131072)_roimg	$d0, [$s0];
	ld_group_width(262144)_roimg	$d0, [$s0];
	ld_group_width(524288)_roimg	$d0, [$s0];
	ld_group_width(1048576)_roimg	$d0, [$s0];
	ld_group_width(2097152)_roimg	$d0, [$s0];
	ld_group_width(4194304)_roimg	$d0, [$s0];
	ld_group_width(8388608)_roimg	$d0, [$s0];
	ld_group_width(16777216)_roimg	$d0, [$s0];
	ld_group_width(33554432)_roimg	$d0, [$s0];
	ld_group_width(67108864)_roimg	$d0, [$s0];
	ld_group_width(134217728)_roimg	$d0, [$s0];
	ld_group_width(268435456)_roimg	$d0, [$s0];
	ld_group_width(536870912)_roimg	$d0, [$s0];
	ld_group_width(1073741824)_roimg	$d0, [$s0];
	ld_group_width(2147483648)_roimg	$d0, [$s0];
	ld_group_width(WAVESIZE)_roimg	$d0, [$s0];
	ld_group_width(all)_roimg	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_private_roimg	$d0, [$s0];
	// 
	ld_private_roimg	$d0, [0];
	ld_private_align(2)_roimg	$d0, [$s0];
	ld_private_align(4)_roimg	$d0, [$s0];
	ld_private_align(8)_roimg	$d0, [$s0];
	ld_private_align(16)_roimg	$d0, [$s0];
	ld_private_align(32)_roimg	$d0, [$s0];
	ld_private_align(64)_roimg	$d0, [$s0];
	ld_private_align(128)_roimg	$d0, [$s0];
	ld_private_equiv(1)_roimg	$d0, [$s0];
	ld_private_equiv(2)_roimg	$d0, [$s0];
	ld_private_equiv(255)_roimg	$d0, [$s0];
	ld_private_width(2)_roimg	$d0, [$s0];
	ld_private_width(4)_roimg	$d0, [$s0];
	ld_private_width(8)_roimg	$d0, [$s0];
	ld_private_width(16)_roimg	$d0, [$s0];
	ld_private_width(32)_roimg	$d0, [$s0];
	ld_private_width(64)_roimg	$d0, [$s0];
	ld_private_width(128)_roimg	$d0, [$s0];
	ld_private_width(256)_roimg	$d0, [$s0];
	ld_private_width(512)_roimg	$d0, [$s0];
	ld_private_width(1024)_roimg	$d0, [$s0];
	ld_private_width(2048)_roimg	$d0, [$s0];
	ld_private_width(4096)_roimg	$d0, [$s0];
	ld_private_width(8192)_roimg	$d0, [$s0];
	ld_private_width(16384)_roimg	$d0, [$s0];
	ld_private_width(32768)_roimg	$d0, [$s0];
	ld_private_width(65536)_roimg	$d0, [$s0];
	ld_private_width(131072)_roimg	$d0, [$s0];
	ld_private_width(262144)_roimg	$d0, [$s0];
	ld_private_width(524288)_roimg	$d0, [$s0];
	ld_private_width(1048576)_roimg	$d0, [$s0];
	ld_private_width(2097152)_roimg	$d0, [$s0];
	ld_private_width(4194304)_roimg	$d0, [$s0];
	ld_private_width(8388608)_roimg	$d0, [$s0];
	ld_private_width(16777216)_roimg	$d0, [$s0];
	ld_private_width(33554432)_roimg	$d0, [$s0];
	ld_private_width(67108864)_roimg	$d0, [$s0];
	ld_private_width(134217728)_roimg	$d0, [$s0];
	ld_private_width(268435456)_roimg	$d0, [$s0];
	ld_private_width(536870912)_roimg	$d0, [$s0];
	ld_private_width(1073741824)_roimg	$d0, [$s0];
	ld_private_width(2147483648)_roimg	$d0, [$s0];
	ld_private_width(WAVESIZE)_roimg	$d0, [$s0];
	ld_private_width(all)_roimg	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_spill_roimg	$d0, [$s0];
	// 
	ld_spill_roimg	$d0, [0];
	ld_spill_align(2)_roimg	$d0, [$s0];
	ld_spill_align(4)_roimg	$d0, [$s0];
	ld_spill_align(8)_roimg	$d0, [$s0];
	ld_spill_align(16)_roimg	$d0, [$s0];
	ld_spill_align(32)_roimg	$d0, [$s0];
	ld_spill_align(64)_roimg	$d0, [$s0];
	ld_spill_align(128)_roimg	$d0, [$s0];
	ld_spill_equiv(1)_roimg	$d0, [$s0];
	ld_spill_equiv(2)_roimg	$d0, [$s0];
	ld_spill_equiv(255)_roimg	$d0, [$s0];
	ld_spill_width(2)_roimg	$d0, [$s0];
	ld_spill_width(4)_roimg	$d0, [$s0];
	ld_spill_width(8)_roimg	$d0, [$s0];
	ld_spill_width(16)_roimg	$d0, [$s0];
	ld_spill_width(32)_roimg	$d0, [$s0];
	ld_spill_width(64)_roimg	$d0, [$s0];
	ld_spill_width(128)_roimg	$d0, [$s0];
	ld_spill_width(256)_roimg	$d0, [$s0];
	ld_spill_width(512)_roimg	$d0, [$s0];
	ld_spill_width(1024)_roimg	$d0, [$s0];
	ld_spill_width(2048)_roimg	$d0, [$s0];
	ld_spill_width(4096)_roimg	$d0, [$s0];
	ld_spill_width(8192)_roimg	$d0, [$s0];
	ld_spill_width(16384)_roimg	$d0, [$s0];
	ld_spill_width(32768)_roimg	$d0, [$s0];
	ld_spill_width(65536)_roimg	$d0, [$s0];
	ld_spill_width(131072)_roimg	$d0, [$s0];
	ld_spill_width(262144)_roimg	$d0, [$s0];
	ld_spill_width(524288)_roimg	$d0, [$s0];
	ld_spill_width(1048576)_roimg	$d0, [$s0];
	ld_spill_width(2097152)_roimg	$d0, [$s0];
	ld_spill_width(4194304)_roimg	$d0, [$s0];
	ld_spill_width(8388608)_roimg	$d0, [$s0];
	ld_spill_width(16777216)_roimg	$d0, [$s0];
	ld_spill_width(33554432)_roimg	$d0, [$s0];
	ld_spill_width(67108864)_roimg	$d0, [$s0];
	ld_spill_width(134217728)_roimg	$d0, [$s0];
	ld_spill_width(268435456)_roimg	$d0, [$s0];
	ld_spill_width(536870912)_roimg	$d0, [$s0];
	ld_spill_width(1073741824)_roimg	$d0, [$s0];
	ld_spill_width(2147483648)_roimg	$d0, [$s0];
	ld_spill_width(WAVESIZE)_roimg	$d0, [$s0];
	ld_spill_width(all)_roimg	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_roimg	$d0, [$s0];
	// 
	ld_arg_roimg	$d0, [0];
	ld_arg_align(2)_roimg	$d0, [$s0];
	ld_arg_align(4)_roimg	$d0, [$s0];
	ld_arg_align(8)_roimg	$d0, [$s0];
	ld_arg_align(16)_roimg	$d0, [$s0];
	ld_arg_align(32)_roimg	$d0, [$s0];
	ld_arg_align(64)_roimg	$d0, [$s0];
	ld_arg_align(128)_roimg	$d0, [$s0];
	ld_arg_equiv(1)_roimg	$d0, [$s0];
	ld_arg_equiv(2)_roimg	$d0, [$s0];
	ld_arg_equiv(255)_roimg	$d0, [$s0];
	ld_arg_width(2)_roimg	$d0, [$s0];
	ld_arg_width(4)_roimg	$d0, [$s0];
	ld_arg_width(8)_roimg	$d0, [$s0];
	ld_arg_width(16)_roimg	$d0, [$s0];
	ld_arg_width(32)_roimg	$d0, [$s0];
	ld_arg_width(64)_roimg	$d0, [$s0];
	ld_arg_width(128)_roimg	$d0, [$s0];
	ld_arg_width(256)_roimg	$d0, [$s0];
	ld_arg_width(512)_roimg	$d0, [$s0];
	ld_arg_width(1024)_roimg	$d0, [$s0];
	ld_arg_width(2048)_roimg	$d0, [$s0];
	ld_arg_width(4096)_roimg	$d0, [$s0];
	ld_arg_width(8192)_roimg	$d0, [$s0];
	ld_arg_width(16384)_roimg	$d0, [$s0];
	ld_arg_width(32768)_roimg	$d0, [$s0];
	ld_arg_width(65536)_roimg	$d0, [$s0];
	ld_arg_width(131072)_roimg	$d0, [$s0];
	ld_arg_width(262144)_roimg	$d0, [$s0];
	ld_arg_width(524288)_roimg	$d0, [$s0];
	ld_arg_width(1048576)_roimg	$d0, [$s0];
	ld_arg_width(2097152)_roimg	$d0, [$s0];
	ld_arg_width(4194304)_roimg	$d0, [$s0];
	ld_arg_width(8388608)_roimg	$d0, [$s0];
	ld_arg_width(16777216)_roimg	$d0, [$s0];
	ld_arg_width(33554432)_roimg	$d0, [$s0];
	ld_arg_width(67108864)_roimg	$d0, [$s0];
	ld_arg_width(134217728)_roimg	$d0, [$s0];
	ld_arg_width(268435456)_roimg	$d0, [$s0];
	ld_arg_width(536870912)_roimg	$d0, [$s0];
	ld_arg_width(1073741824)_roimg	$d0, [$s0];
	ld_arg_width(2147483648)_roimg	$d0, [$s0];
	ld_arg_width(WAVESIZE)_roimg	$d0, [$s0];
	ld_arg_width(all)_roimg	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_rwimg	$d0, [$s0];
	// 
	ld_const_rwimg	$d0, [$s0];
	ld_rwimg	$d0, [0];
	ld_align(2)_rwimg	$d0, [$s0];
	ld_align(4)_rwimg	$d0, [$s0];
	ld_align(8)_rwimg	$d0, [$s0];
	ld_align(16)_rwimg	$d0, [$s0];
	ld_align(32)_rwimg	$d0, [$s0];
	ld_align(64)_rwimg	$d0, [$s0];
	ld_align(128)_rwimg	$d0, [$s0];
	ld_equiv(1)_rwimg	$d0, [$s0];
	ld_equiv(2)_rwimg	$d0, [$s0];
	ld_equiv(255)_rwimg	$d0, [$s0];
	ld_width(2)_rwimg	$d0, [$s0];
	ld_width(4)_rwimg	$d0, [$s0];
	ld_width(8)_rwimg	$d0, [$s0];
	ld_width(16)_rwimg	$d0, [$s0];
	ld_width(32)_rwimg	$d0, [$s0];
	ld_width(64)_rwimg	$d0, [$s0];
	ld_width(128)_rwimg	$d0, [$s0];
	ld_width(256)_rwimg	$d0, [$s0];
	ld_width(512)_rwimg	$d0, [$s0];
	ld_width(1024)_rwimg	$d0, [$s0];
	ld_width(2048)_rwimg	$d0, [$s0];
	ld_width(4096)_rwimg	$d0, [$s0];
	ld_width(8192)_rwimg	$d0, [$s0];
	ld_width(16384)_rwimg	$d0, [$s0];
	ld_width(32768)_rwimg	$d0, [$s0];
	ld_width(65536)_rwimg	$d0, [$s0];
	ld_width(131072)_rwimg	$d0, [$s0];
	ld_width(262144)_rwimg	$d0, [$s0];
	ld_width(524288)_rwimg	$d0, [$s0];
	ld_width(1048576)_rwimg	$d0, [$s0];
	ld_width(2097152)_rwimg	$d0, [$s0];
	ld_width(4194304)_rwimg	$d0, [$s0];
	ld_width(8388608)_rwimg	$d0, [$s0];
	ld_width(16777216)_rwimg	$d0, [$s0];
	ld_width(33554432)_rwimg	$d0, [$s0];
	ld_width(67108864)_rwimg	$d0, [$s0];
	ld_width(134217728)_rwimg	$d0, [$s0];
	ld_width(268435456)_rwimg	$d0, [$s0];
	ld_width(536870912)_rwimg	$d0, [$s0];
	ld_width(1073741824)_rwimg	$d0, [$s0];
	ld_width(2147483648)_rwimg	$d0, [$s0];
	ld_width(WAVESIZE)_rwimg	$d0, [$s0];
	ld_width(all)_rwimg	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_global_rwimg	$d0, [&GlobalRWImg];
	// 
	ld_global_const_rwimg	$d0, [&GlobalRWImg];
	ld_global_rwimg	$d0, [$s0];
	ld_global_rwimg	$d0, [0];
	ld_global_align(2)_rwimg	$d0, [&GlobalRWImg];
	ld_global_align(4)_rwimg	$d0, [&GlobalRWImg];
	ld_global_align(8)_rwimg	$d0, [&GlobalRWImg];
	ld_global_align(16)_rwimg	$d0, [&GlobalRWImg];
	ld_global_align(32)_rwimg	$d0, [&GlobalRWImg];
	ld_global_align(64)_rwimg	$d0, [&GlobalRWImg];
	ld_global_align(128)_rwimg	$d0, [&GlobalRWImg];
	ld_global_equiv(1)_rwimg	$d0, [&GlobalRWImg];
	ld_global_equiv(2)_rwimg	$d0, [&GlobalRWImg];
	ld_global_equiv(255)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(2)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(4)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(8)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(16)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(32)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(64)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(128)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(256)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(512)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(1024)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(2048)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(4096)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(8192)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(16384)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(32768)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(65536)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(131072)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(262144)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(524288)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(1048576)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(2097152)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(4194304)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(8388608)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(16777216)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(33554432)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(67108864)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(134217728)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(268435456)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(536870912)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(1073741824)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(2147483648)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(WAVESIZE)_rwimg	$d0, [&GlobalRWImg];
	ld_global_width(all)_rwimg	$d0, [&GlobalRWImg];
	// 
	// Next sample
	// 
	ld_readonly_rwimg	$d0, [&ReadonlyRWImg];
	// 
	ld_readonly_const_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_rwimg	$d0, [$s0];
	ld_readonly_rwimg	$d0, [0];
	ld_readonly_align(2)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_align(4)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_align(8)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_align(16)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_align(32)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_align(64)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_align(128)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_equiv(1)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_equiv(2)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_equiv(255)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(2)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(4)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(8)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(16)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(32)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(64)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(128)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(256)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(512)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(1024)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(2048)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(4096)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(8192)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(16384)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(32768)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(65536)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(131072)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(262144)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(524288)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(1048576)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(2097152)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(4194304)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(8388608)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(16777216)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(33554432)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(67108864)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(134217728)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(268435456)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(536870912)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(1073741824)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(2147483648)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(WAVESIZE)_rwimg	$d0, [&ReadonlyRWImg];
	ld_readonly_width(all)_rwimg	$d0, [&ReadonlyRWImg];
	// 
	// Next sample
	// 
	ld_kernarg_rwimg	$d0, [$s0];
	// 
	ld_kernarg_const_rwimg	$d0, [$s0];
	ld_kernarg_rwimg	$d0, [0];
	ld_kernarg_align(2)_rwimg	$d0, [$s0];
	ld_kernarg_align(4)_rwimg	$d0, [$s0];
	ld_kernarg_align(8)_rwimg	$d0, [$s0];
	ld_kernarg_align(16)_rwimg	$d0, [$s0];
	ld_kernarg_align(32)_rwimg	$d0, [$s0];
	ld_kernarg_align(64)_rwimg	$d0, [$s0];
	ld_kernarg_align(128)_rwimg	$d0, [$s0];
	ld_kernarg_equiv(1)_rwimg	$d0, [$s0];
	ld_kernarg_equiv(2)_rwimg	$d0, [$s0];
	ld_kernarg_equiv(255)_rwimg	$d0, [$s0];
	ld_kernarg_width(2)_rwimg	$d0, [$s0];
	ld_kernarg_width(4)_rwimg	$d0, [$s0];
	ld_kernarg_width(8)_rwimg	$d0, [$s0];
	ld_kernarg_width(16)_rwimg	$d0, [$s0];
	ld_kernarg_width(32)_rwimg	$d0, [$s0];
	ld_kernarg_width(64)_rwimg	$d0, [$s0];
	ld_kernarg_width(128)_rwimg	$d0, [$s0];
	ld_kernarg_width(256)_rwimg	$d0, [$s0];
	ld_kernarg_width(512)_rwimg	$d0, [$s0];
	ld_kernarg_width(1024)_rwimg	$d0, [$s0];
	ld_kernarg_width(2048)_rwimg	$d0, [$s0];
	ld_kernarg_width(4096)_rwimg	$d0, [$s0];
	ld_kernarg_width(8192)_rwimg	$d0, [$s0];
	ld_kernarg_width(16384)_rwimg	$d0, [$s0];
	ld_kernarg_width(32768)_rwimg	$d0, [$s0];
	ld_kernarg_width(65536)_rwimg	$d0, [$s0];
	ld_kernarg_width(131072)_rwimg	$d0, [$s0];
	ld_kernarg_width(262144)_rwimg	$d0, [$s0];
	ld_kernarg_width(524288)_rwimg	$d0, [$s0];
	ld_kernarg_width(1048576)_rwimg	$d0, [$s0];
	ld_kernarg_width(2097152)_rwimg	$d0, [$s0];
	ld_kernarg_width(4194304)_rwimg	$d0, [$s0];
	ld_kernarg_width(8388608)_rwimg	$d0, [$s0];
	ld_kernarg_width(16777216)_rwimg	$d0, [$s0];
	ld_kernarg_width(33554432)_rwimg	$d0, [$s0];
	ld_kernarg_width(67108864)_rwimg	$d0, [$s0];
	ld_kernarg_width(134217728)_rwimg	$d0, [$s0];
	ld_kernarg_width(268435456)_rwimg	$d0, [$s0];
	ld_kernarg_width(536870912)_rwimg	$d0, [$s0];
	ld_kernarg_width(1073741824)_rwimg	$d0, [$s0];
	ld_kernarg_width(2147483648)_rwimg	$d0, [$s0];
	ld_kernarg_width(WAVESIZE)_rwimg	$d0, [$s0];
	ld_kernarg_width(all)_rwimg	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_group_rwimg	$d0, [$s0];
	// 
	ld_group_rwimg	$d0, [0];
	ld_group_align(2)_rwimg	$d0, [$s0];
	ld_group_align(4)_rwimg	$d0, [$s0];
	ld_group_align(8)_rwimg	$d0, [$s0];
	ld_group_align(16)_rwimg	$d0, [$s0];
	ld_group_align(32)_rwimg	$d0, [$s0];
	ld_group_align(64)_rwimg	$d0, [$s0];
	ld_group_align(128)_rwimg	$d0, [$s0];
	ld_group_equiv(1)_rwimg	$d0, [$s0];
	ld_group_equiv(2)_rwimg	$d0, [$s0];
	ld_group_equiv(255)_rwimg	$d0, [$s0];
	ld_group_width(2)_rwimg	$d0, [$s0];
	ld_group_width(4)_rwimg	$d0, [$s0];
	ld_group_width(8)_rwimg	$d0, [$s0];
	ld_group_width(16)_rwimg	$d0, [$s0];
	ld_group_width(32)_rwimg	$d0, [$s0];
	ld_group_width(64)_rwimg	$d0, [$s0];
	ld_group_width(128)_rwimg	$d0, [$s0];
	ld_group_width(256)_rwimg	$d0, [$s0];
	ld_group_width(512)_rwimg	$d0, [$s0];
	ld_group_width(1024)_rwimg	$d0, [$s0];
	ld_group_width(2048)_rwimg	$d0, [$s0];
	ld_group_width(4096)_rwimg	$d0, [$s0];
	ld_group_width(8192)_rwimg	$d0, [$s0];
	ld_group_width(16384)_rwimg	$d0, [$s0];
	ld_group_width(32768)_rwimg	$d0, [$s0];
	ld_group_width(65536)_rwimg	$d0, [$s0];
	ld_group_width(131072)_rwimg	$d0, [$s0];
	ld_group_width(262144)_rwimg	$d0, [$s0];
	ld_group_width(524288)_rwimg	$d0, [$s0];
	ld_group_width(1048576)_rwimg	$d0, [$s0];
	ld_group_width(2097152)_rwimg	$d0, [$s0];
	ld_group_width(4194304)_rwimg	$d0, [$s0];
	ld_group_width(8388608)_rwimg	$d0, [$s0];
	ld_group_width(16777216)_rwimg	$d0, [$s0];
	ld_group_width(33554432)_rwimg	$d0, [$s0];
	ld_group_width(67108864)_rwimg	$d0, [$s0];
	ld_group_width(134217728)_rwimg	$d0, [$s0];
	ld_group_width(268435456)_rwimg	$d0, [$s0];
	ld_group_width(536870912)_rwimg	$d0, [$s0];
	ld_group_width(1073741824)_rwimg	$d0, [$s0];
	ld_group_width(2147483648)_rwimg	$d0, [$s0];
	ld_group_width(WAVESIZE)_rwimg	$d0, [$s0];
	ld_group_width(all)_rwimg	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_private_rwimg	$d0, [$s0];
	// 
	ld_private_rwimg	$d0, [0];
	ld_private_align(2)_rwimg	$d0, [$s0];
	ld_private_align(4)_rwimg	$d0, [$s0];
	ld_private_align(8)_rwimg	$d0, [$s0];
	ld_private_align(16)_rwimg	$d0, [$s0];
	ld_private_align(32)_rwimg	$d0, [$s0];
	ld_private_align(64)_rwimg	$d0, [$s0];
	ld_private_align(128)_rwimg	$d0, [$s0];
	ld_private_equiv(1)_rwimg	$d0, [$s0];
	ld_private_equiv(2)_rwimg	$d0, [$s0];
	ld_private_equiv(255)_rwimg	$d0, [$s0];
	ld_private_width(2)_rwimg	$d0, [$s0];
	ld_private_width(4)_rwimg	$d0, [$s0];
	ld_private_width(8)_rwimg	$d0, [$s0];
	ld_private_width(16)_rwimg	$d0, [$s0];
	ld_private_width(32)_rwimg	$d0, [$s0];
	ld_private_width(64)_rwimg	$d0, [$s0];
	ld_private_width(128)_rwimg	$d0, [$s0];
	ld_private_width(256)_rwimg	$d0, [$s0];
	ld_private_width(512)_rwimg	$d0, [$s0];
	ld_private_width(1024)_rwimg	$d0, [$s0];
	ld_private_width(2048)_rwimg	$d0, [$s0];
	ld_private_width(4096)_rwimg	$d0, [$s0];
	ld_private_width(8192)_rwimg	$d0, [$s0];
	ld_private_width(16384)_rwimg	$d0, [$s0];
	ld_private_width(32768)_rwimg	$d0, [$s0];
	ld_private_width(65536)_rwimg	$d0, [$s0];
	ld_private_width(131072)_rwimg	$d0, [$s0];
	ld_private_width(262144)_rwimg	$d0, [$s0];
	ld_private_width(524288)_rwimg	$d0, [$s0];
	ld_private_width(1048576)_rwimg	$d0, [$s0];
	ld_private_width(2097152)_rwimg	$d0, [$s0];
	ld_private_width(4194304)_rwimg	$d0, [$s0];
	ld_private_width(8388608)_rwimg	$d0, [$s0];
	ld_private_width(16777216)_rwimg	$d0, [$s0];
	ld_private_width(33554432)_rwimg	$d0, [$s0];
	ld_private_width(67108864)_rwimg	$d0, [$s0];
	ld_private_width(134217728)_rwimg	$d0, [$s0];
	ld_private_width(268435456)_rwimg	$d0, [$s0];
	ld_private_width(536870912)_rwimg	$d0, [$s0];
	ld_private_width(1073741824)_rwimg	$d0, [$s0];
	ld_private_width(2147483648)_rwimg	$d0, [$s0];
	ld_private_width(WAVESIZE)_rwimg	$d0, [$s0];
	ld_private_width(all)_rwimg	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_spill_rwimg	$d0, [$s0];
	// 
	ld_spill_rwimg	$d0, [0];
	ld_spill_align(2)_rwimg	$d0, [$s0];
	ld_spill_align(4)_rwimg	$d0, [$s0];
	ld_spill_align(8)_rwimg	$d0, [$s0];
	ld_spill_align(16)_rwimg	$d0, [$s0];
	ld_spill_align(32)_rwimg	$d0, [$s0];
	ld_spill_align(64)_rwimg	$d0, [$s0];
	ld_spill_align(128)_rwimg	$d0, [$s0];
	ld_spill_equiv(1)_rwimg	$d0, [$s0];
	ld_spill_equiv(2)_rwimg	$d0, [$s0];
	ld_spill_equiv(255)_rwimg	$d0, [$s0];
	ld_spill_width(2)_rwimg	$d0, [$s0];
	ld_spill_width(4)_rwimg	$d0, [$s0];
	ld_spill_width(8)_rwimg	$d0, [$s0];
	ld_spill_width(16)_rwimg	$d0, [$s0];
	ld_spill_width(32)_rwimg	$d0, [$s0];
	ld_spill_width(64)_rwimg	$d0, [$s0];
	ld_spill_width(128)_rwimg	$d0, [$s0];
	ld_spill_width(256)_rwimg	$d0, [$s0];
	ld_spill_width(512)_rwimg	$d0, [$s0];
	ld_spill_width(1024)_rwimg	$d0, [$s0];
	ld_spill_width(2048)_rwimg	$d0, [$s0];
	ld_spill_width(4096)_rwimg	$d0, [$s0];
	ld_spill_width(8192)_rwimg	$d0, [$s0];
	ld_spill_width(16384)_rwimg	$d0, [$s0];
	ld_spill_width(32768)_rwimg	$d0, [$s0];
	ld_spill_width(65536)_rwimg	$d0, [$s0];
	ld_spill_width(131072)_rwimg	$d0, [$s0];
	ld_spill_width(262144)_rwimg	$d0, [$s0];
	ld_spill_width(524288)_rwimg	$d0, [$s0];
	ld_spill_width(1048576)_rwimg	$d0, [$s0];
	ld_spill_width(2097152)_rwimg	$d0, [$s0];
	ld_spill_width(4194304)_rwimg	$d0, [$s0];
	ld_spill_width(8388608)_rwimg	$d0, [$s0];
	ld_spill_width(16777216)_rwimg	$d0, [$s0];
	ld_spill_width(33554432)_rwimg	$d0, [$s0];
	ld_spill_width(67108864)_rwimg	$d0, [$s0];
	ld_spill_width(134217728)_rwimg	$d0, [$s0];
	ld_spill_width(268435456)_rwimg	$d0, [$s0];
	ld_spill_width(536870912)_rwimg	$d0, [$s0];
	ld_spill_width(1073741824)_rwimg	$d0, [$s0];
	ld_spill_width(2147483648)_rwimg	$d0, [$s0];
	ld_spill_width(WAVESIZE)_rwimg	$d0, [$s0];
	ld_spill_width(all)_rwimg	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_rwimg	$d0, [$s0];
	// 
	ld_arg_rwimg	$d0, [0];
	ld_arg_align(2)_rwimg	$d0, [$s0];
	ld_arg_align(4)_rwimg	$d0, [$s0];
	ld_arg_align(8)_rwimg	$d0, [$s0];
	ld_arg_align(16)_rwimg	$d0, [$s0];
	ld_arg_align(32)_rwimg	$d0, [$s0];
	ld_arg_align(64)_rwimg	$d0, [$s0];
	ld_arg_align(128)_rwimg	$d0, [$s0];
	ld_arg_equiv(1)_rwimg	$d0, [$s0];
	ld_arg_equiv(2)_rwimg	$d0, [$s0];
	ld_arg_equiv(255)_rwimg	$d0, [$s0];
	ld_arg_width(2)_rwimg	$d0, [$s0];
	ld_arg_width(4)_rwimg	$d0, [$s0];
	ld_arg_width(8)_rwimg	$d0, [$s0];
	ld_arg_width(16)_rwimg	$d0, [$s0];
	ld_arg_width(32)_rwimg	$d0, [$s0];
	ld_arg_width(64)_rwimg	$d0, [$s0];
	ld_arg_width(128)_rwimg	$d0, [$s0];
	ld_arg_width(256)_rwimg	$d0, [$s0];
	ld_arg_width(512)_rwimg	$d0, [$s0];
	ld_arg_width(1024)_rwimg	$d0, [$s0];
	ld_arg_width(2048)_rwimg	$d0, [$s0];
	ld_arg_width(4096)_rwimg	$d0, [$s0];
	ld_arg_width(8192)_rwimg	$d0, [$s0];
	ld_arg_width(16384)_rwimg	$d0, [$s0];
	ld_arg_width(32768)_rwimg	$d0, [$s0];
	ld_arg_width(65536)_rwimg	$d0, [$s0];
	ld_arg_width(131072)_rwimg	$d0, [$s0];
	ld_arg_width(262144)_rwimg	$d0, [$s0];
	ld_arg_width(524288)_rwimg	$d0, [$s0];
	ld_arg_width(1048576)_rwimg	$d0, [$s0];
	ld_arg_width(2097152)_rwimg	$d0, [$s0];
	ld_arg_width(4194304)_rwimg	$d0, [$s0];
	ld_arg_width(8388608)_rwimg	$d0, [$s0];
	ld_arg_width(16777216)_rwimg	$d0, [$s0];
	ld_arg_width(33554432)_rwimg	$d0, [$s0];
	ld_arg_width(67108864)_rwimg	$d0, [$s0];
	ld_arg_width(134217728)_rwimg	$d0, [$s0];
	ld_arg_width(268435456)_rwimg	$d0, [$s0];
	ld_arg_width(536870912)_rwimg	$d0, [$s0];
	ld_arg_width(1073741824)_rwimg	$d0, [$s0];
	ld_arg_width(2147483648)_rwimg	$d0, [$s0];
	ld_arg_width(WAVESIZE)_rwimg	$d0, [$s0];
	ld_arg_width(all)_rwimg	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_sig32	$d0, [$s0];
	// 
	ld_const_sig32	$d0, [$s0];
	ld_sig32	$d0, [0];
	ld_align(2)_sig32	$d0, [$s0];
	ld_align(4)_sig32	$d0, [$s0];
	ld_align(8)_sig32	$d0, [$s0];
	ld_align(16)_sig32	$d0, [$s0];
	ld_align(32)_sig32	$d0, [$s0];
	ld_align(64)_sig32	$d0, [$s0];
	ld_align(128)_sig32	$d0, [$s0];
	ld_equiv(1)_sig32	$d0, [$s0];
	ld_equiv(2)_sig32	$d0, [$s0];
	ld_equiv(255)_sig32	$d0, [$s0];
	ld_width(2)_sig32	$d0, [$s0];
	ld_width(4)_sig32	$d0, [$s0];
	ld_width(8)_sig32	$d0, [$s0];
	ld_width(16)_sig32	$d0, [$s0];
	ld_width(32)_sig32	$d0, [$s0];
	ld_width(64)_sig32	$d0, [$s0];
	ld_width(128)_sig32	$d0, [$s0];
	ld_width(256)_sig32	$d0, [$s0];
	ld_width(512)_sig32	$d0, [$s0];
	ld_width(1024)_sig32	$d0, [$s0];
	ld_width(2048)_sig32	$d0, [$s0];
	ld_width(4096)_sig32	$d0, [$s0];
	ld_width(8192)_sig32	$d0, [$s0];
	ld_width(16384)_sig32	$d0, [$s0];
	ld_width(32768)_sig32	$d0, [$s0];
	ld_width(65536)_sig32	$d0, [$s0];
	ld_width(131072)_sig32	$d0, [$s0];
	ld_width(262144)_sig32	$d0, [$s0];
	ld_width(524288)_sig32	$d0, [$s0];
	ld_width(1048576)_sig32	$d0, [$s0];
	ld_width(2097152)_sig32	$d0, [$s0];
	ld_width(4194304)_sig32	$d0, [$s0];
	ld_width(8388608)_sig32	$d0, [$s0];
	ld_width(16777216)_sig32	$d0, [$s0];
	ld_width(33554432)_sig32	$d0, [$s0];
	ld_width(67108864)_sig32	$d0, [$s0];
	ld_width(134217728)_sig32	$d0, [$s0];
	ld_width(268435456)_sig32	$d0, [$s0];
	ld_width(536870912)_sig32	$d0, [$s0];
	ld_width(1073741824)_sig32	$d0, [$s0];
	ld_width(2147483648)_sig32	$d0, [$s0];
	ld_width(WAVESIZE)_sig32	$d0, [$s0];
	ld_width(all)_sig32	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_global_sig32	$d0, [&GlobalSig32];
	// 
	ld_global_const_sig32	$d0, [&GlobalSig32];
	ld_global_sig32	$d0, [$s0];
	ld_global_sig32	$d0, [0];
	ld_global_align(2)_sig32	$d0, [&GlobalSig32];
	ld_global_align(4)_sig32	$d0, [&GlobalSig32];
	ld_global_align(8)_sig32	$d0, [&GlobalSig32];
	ld_global_align(16)_sig32	$d0, [&GlobalSig32];
	ld_global_align(32)_sig32	$d0, [&GlobalSig32];
	ld_global_align(64)_sig32	$d0, [&GlobalSig32];
	ld_global_align(128)_sig32	$d0, [&GlobalSig32];
	ld_global_equiv(1)_sig32	$d0, [&GlobalSig32];
	ld_global_equiv(2)_sig32	$d0, [&GlobalSig32];
	ld_global_equiv(255)_sig32	$d0, [&GlobalSig32];
	ld_global_width(2)_sig32	$d0, [&GlobalSig32];
	ld_global_width(4)_sig32	$d0, [&GlobalSig32];
	ld_global_width(8)_sig32	$d0, [&GlobalSig32];
	ld_global_width(16)_sig32	$d0, [&GlobalSig32];
	ld_global_width(32)_sig32	$d0, [&GlobalSig32];
	ld_global_width(64)_sig32	$d0, [&GlobalSig32];
	ld_global_width(128)_sig32	$d0, [&GlobalSig32];
	ld_global_width(256)_sig32	$d0, [&GlobalSig32];
	ld_global_width(512)_sig32	$d0, [&GlobalSig32];
	ld_global_width(1024)_sig32	$d0, [&GlobalSig32];
	ld_global_width(2048)_sig32	$d0, [&GlobalSig32];
	ld_global_width(4096)_sig32	$d0, [&GlobalSig32];
	ld_global_width(8192)_sig32	$d0, [&GlobalSig32];
	ld_global_width(16384)_sig32	$d0, [&GlobalSig32];
	ld_global_width(32768)_sig32	$d0, [&GlobalSig32];
	ld_global_width(65536)_sig32	$d0, [&GlobalSig32];
	ld_global_width(131072)_sig32	$d0, [&GlobalSig32];
	ld_global_width(262144)_sig32	$d0, [&GlobalSig32];
	ld_global_width(524288)_sig32	$d0, [&GlobalSig32];
	ld_global_width(1048576)_sig32	$d0, [&GlobalSig32];
	ld_global_width(2097152)_sig32	$d0, [&GlobalSig32];
	ld_global_width(4194304)_sig32	$d0, [&GlobalSig32];
	ld_global_width(8388608)_sig32	$d0, [&GlobalSig32];
	ld_global_width(16777216)_sig32	$d0, [&GlobalSig32];
	ld_global_width(33554432)_sig32	$d0, [&GlobalSig32];
	ld_global_width(67108864)_sig32	$d0, [&GlobalSig32];
	ld_global_width(134217728)_sig32	$d0, [&GlobalSig32];
	ld_global_width(268435456)_sig32	$d0, [&GlobalSig32];
	ld_global_width(536870912)_sig32	$d0, [&GlobalSig32];
	ld_global_width(1073741824)_sig32	$d0, [&GlobalSig32];
	ld_global_width(2147483648)_sig32	$d0, [&GlobalSig32];
	ld_global_width(WAVESIZE)_sig32	$d0, [&GlobalSig32];
	ld_global_width(all)_sig32	$d0, [&GlobalSig32];
	// 
	// Next sample
	// 
	ld_readonly_sig32	$d0, [&ReadonlySig32];
	// 
	ld_readonly_const_sig32	$d0, [&ReadonlySig32];
	ld_readonly_sig32	$d0, [$s0];
	ld_readonly_sig32	$d0, [0];
	ld_readonly_align(2)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_align(4)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_align(8)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_align(16)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_align(32)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_align(64)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_align(128)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_equiv(1)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_equiv(2)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_equiv(255)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(2)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(4)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(8)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(16)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(32)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(64)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(128)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(256)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(512)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(1024)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(2048)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(4096)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(8192)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(16384)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(32768)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(65536)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(131072)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(262144)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(524288)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(1048576)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(2097152)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(4194304)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(8388608)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(16777216)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(33554432)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(67108864)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(134217728)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(268435456)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(536870912)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(1073741824)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(2147483648)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(WAVESIZE)_sig32	$d0, [&ReadonlySig32];
	ld_readonly_width(all)_sig32	$d0, [&ReadonlySig32];
	// 
	// Next sample
	// 
	ld_kernarg_sig32	$d0, [$s0];
	// 
	ld_kernarg_const_sig32	$d0, [$s0];
	ld_kernarg_sig32	$d0, [0];
	ld_kernarg_align(2)_sig32	$d0, [$s0];
	ld_kernarg_align(4)_sig32	$d0, [$s0];
	ld_kernarg_align(8)_sig32	$d0, [$s0];
	ld_kernarg_align(16)_sig32	$d0, [$s0];
	ld_kernarg_align(32)_sig32	$d0, [$s0];
	ld_kernarg_align(64)_sig32	$d0, [$s0];
	ld_kernarg_align(128)_sig32	$d0, [$s0];
	ld_kernarg_equiv(1)_sig32	$d0, [$s0];
	ld_kernarg_equiv(2)_sig32	$d0, [$s0];
	ld_kernarg_equiv(255)_sig32	$d0, [$s0];
	ld_kernarg_width(2)_sig32	$d0, [$s0];
	ld_kernarg_width(4)_sig32	$d0, [$s0];
	ld_kernarg_width(8)_sig32	$d0, [$s0];
	ld_kernarg_width(16)_sig32	$d0, [$s0];
	ld_kernarg_width(32)_sig32	$d0, [$s0];
	ld_kernarg_width(64)_sig32	$d0, [$s0];
	ld_kernarg_width(128)_sig32	$d0, [$s0];
	ld_kernarg_width(256)_sig32	$d0, [$s0];
	ld_kernarg_width(512)_sig32	$d0, [$s0];
	ld_kernarg_width(1024)_sig32	$d0, [$s0];
	ld_kernarg_width(2048)_sig32	$d0, [$s0];
	ld_kernarg_width(4096)_sig32	$d0, [$s0];
	ld_kernarg_width(8192)_sig32	$d0, [$s0];
	ld_kernarg_width(16384)_sig32	$d0, [$s0];
	ld_kernarg_width(32768)_sig32	$d0, [$s0];
	ld_kernarg_width(65536)_sig32	$d0, [$s0];
	ld_kernarg_width(131072)_sig32	$d0, [$s0];
	ld_kernarg_width(262144)_sig32	$d0, [$s0];
	ld_kernarg_width(524288)_sig32	$d0, [$s0];
	ld_kernarg_width(1048576)_sig32	$d0, [$s0];
	ld_kernarg_width(2097152)_sig32	$d0, [$s0];
	ld_kernarg_width(4194304)_sig32	$d0, [$s0];
	ld_kernarg_width(8388608)_sig32	$d0, [$s0];
	ld_kernarg_width(16777216)_sig32	$d0, [$s0];
	ld_kernarg_width(33554432)_sig32	$d0, [$s0];
	ld_kernarg_width(67108864)_sig32	$d0, [$s0];
	ld_kernarg_width(134217728)_sig32	$d0, [$s0];
	ld_kernarg_width(268435456)_sig32	$d0, [$s0];
	ld_kernarg_width(536870912)_sig32	$d0, [$s0];
	ld_kernarg_width(1073741824)_sig32	$d0, [$s0];
	ld_kernarg_width(2147483648)_sig32	$d0, [$s0];
	ld_kernarg_width(WAVESIZE)_sig32	$d0, [$s0];
	ld_kernarg_width(all)_sig32	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_group_sig32	$d0, [$s0];
	// 
	ld_group_sig32	$d0, [0];
	ld_group_align(2)_sig32	$d0, [$s0];
	ld_group_align(4)_sig32	$d0, [$s0];
	ld_group_align(8)_sig32	$d0, [$s0];
	ld_group_align(16)_sig32	$d0, [$s0];
	ld_group_align(32)_sig32	$d0, [$s0];
	ld_group_align(64)_sig32	$d0, [$s0];
	ld_group_align(128)_sig32	$d0, [$s0];
	ld_group_equiv(1)_sig32	$d0, [$s0];
	ld_group_equiv(2)_sig32	$d0, [$s0];
	ld_group_equiv(255)_sig32	$d0, [$s0];
	ld_group_width(2)_sig32	$d0, [$s0];
	ld_group_width(4)_sig32	$d0, [$s0];
	ld_group_width(8)_sig32	$d0, [$s0];
	ld_group_width(16)_sig32	$d0, [$s0];
	ld_group_width(32)_sig32	$d0, [$s0];
	ld_group_width(64)_sig32	$d0, [$s0];
	ld_group_width(128)_sig32	$d0, [$s0];
	ld_group_width(256)_sig32	$d0, [$s0];
	ld_group_width(512)_sig32	$d0, [$s0];
	ld_group_width(1024)_sig32	$d0, [$s0];
	ld_group_width(2048)_sig32	$d0, [$s0];
	ld_group_width(4096)_sig32	$d0, [$s0];
	ld_group_width(8192)_sig32	$d0, [$s0];
	ld_group_width(16384)_sig32	$d0, [$s0];
	ld_group_width(32768)_sig32	$d0, [$s0];
	ld_group_width(65536)_sig32	$d0, [$s0];
	ld_group_width(131072)_sig32	$d0, [$s0];
	ld_group_width(262144)_sig32	$d0, [$s0];
	ld_group_width(524288)_sig32	$d0, [$s0];
	ld_group_width(1048576)_sig32	$d0, [$s0];
	ld_group_width(2097152)_sig32	$d0, [$s0];
	ld_group_width(4194304)_sig32	$d0, [$s0];
	ld_group_width(8388608)_sig32	$d0, [$s0];
	ld_group_width(16777216)_sig32	$d0, [$s0];
	ld_group_width(33554432)_sig32	$d0, [$s0];
	ld_group_width(67108864)_sig32	$d0, [$s0];
	ld_group_width(134217728)_sig32	$d0, [$s0];
	ld_group_width(268435456)_sig32	$d0, [$s0];
	ld_group_width(536870912)_sig32	$d0, [$s0];
	ld_group_width(1073741824)_sig32	$d0, [$s0];
	ld_group_width(2147483648)_sig32	$d0, [$s0];
	ld_group_width(WAVESIZE)_sig32	$d0, [$s0];
	ld_group_width(all)_sig32	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_private_sig32	$d0, [$s0];
	// 
	ld_private_sig32	$d0, [0];
	ld_private_align(2)_sig32	$d0, [$s0];
	ld_private_align(4)_sig32	$d0, [$s0];
	ld_private_align(8)_sig32	$d0, [$s0];
	ld_private_align(16)_sig32	$d0, [$s0];
	ld_private_align(32)_sig32	$d0, [$s0];
	ld_private_align(64)_sig32	$d0, [$s0];
	ld_private_align(128)_sig32	$d0, [$s0];
	ld_private_equiv(1)_sig32	$d0, [$s0];
	ld_private_equiv(2)_sig32	$d0, [$s0];
	ld_private_equiv(255)_sig32	$d0, [$s0];
	ld_private_width(2)_sig32	$d0, [$s0];
	ld_private_width(4)_sig32	$d0, [$s0];
	ld_private_width(8)_sig32	$d0, [$s0];
	ld_private_width(16)_sig32	$d0, [$s0];
	ld_private_width(32)_sig32	$d0, [$s0];
	ld_private_width(64)_sig32	$d0, [$s0];
	ld_private_width(128)_sig32	$d0, [$s0];
	ld_private_width(256)_sig32	$d0, [$s0];
	ld_private_width(512)_sig32	$d0, [$s0];
	ld_private_width(1024)_sig32	$d0, [$s0];
	ld_private_width(2048)_sig32	$d0, [$s0];
	ld_private_width(4096)_sig32	$d0, [$s0];
	ld_private_width(8192)_sig32	$d0, [$s0];
	ld_private_width(16384)_sig32	$d0, [$s0];
	ld_private_width(32768)_sig32	$d0, [$s0];
	ld_private_width(65536)_sig32	$d0, [$s0];
	ld_private_width(131072)_sig32	$d0, [$s0];
	ld_private_width(262144)_sig32	$d0, [$s0];
	ld_private_width(524288)_sig32	$d0, [$s0];
	ld_private_width(1048576)_sig32	$d0, [$s0];
	ld_private_width(2097152)_sig32	$d0, [$s0];
	ld_private_width(4194304)_sig32	$d0, [$s0];
	ld_private_width(8388608)_sig32	$d0, [$s0];
	ld_private_width(16777216)_sig32	$d0, [$s0];
	ld_private_width(33554432)_sig32	$d0, [$s0];
	ld_private_width(67108864)_sig32	$d0, [$s0];
	ld_private_width(134217728)_sig32	$d0, [$s0];
	ld_private_width(268435456)_sig32	$d0, [$s0];
	ld_private_width(536870912)_sig32	$d0, [$s0];
	ld_private_width(1073741824)_sig32	$d0, [$s0];
	ld_private_width(2147483648)_sig32	$d0, [$s0];
	ld_private_width(WAVESIZE)_sig32	$d0, [$s0];
	ld_private_width(all)_sig32	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_spill_sig32	$d0, [$s0];
	// 
	ld_spill_sig32	$d0, [0];
	ld_spill_align(2)_sig32	$d0, [$s0];
	ld_spill_align(4)_sig32	$d0, [$s0];
	ld_spill_align(8)_sig32	$d0, [$s0];
	ld_spill_align(16)_sig32	$d0, [$s0];
	ld_spill_align(32)_sig32	$d0, [$s0];
	ld_spill_align(64)_sig32	$d0, [$s0];
	ld_spill_align(128)_sig32	$d0, [$s0];
	ld_spill_equiv(1)_sig32	$d0, [$s0];
	ld_spill_equiv(2)_sig32	$d0, [$s0];
	ld_spill_equiv(255)_sig32	$d0, [$s0];
	ld_spill_width(2)_sig32	$d0, [$s0];
	ld_spill_width(4)_sig32	$d0, [$s0];
	ld_spill_width(8)_sig32	$d0, [$s0];
	ld_spill_width(16)_sig32	$d0, [$s0];
	ld_spill_width(32)_sig32	$d0, [$s0];
	ld_spill_width(64)_sig32	$d0, [$s0];
	ld_spill_width(128)_sig32	$d0, [$s0];
	ld_spill_width(256)_sig32	$d0, [$s0];
	ld_spill_width(512)_sig32	$d0, [$s0];
	ld_spill_width(1024)_sig32	$d0, [$s0];
	ld_spill_width(2048)_sig32	$d0, [$s0];
	ld_spill_width(4096)_sig32	$d0, [$s0];
	ld_spill_width(8192)_sig32	$d0, [$s0];
	ld_spill_width(16384)_sig32	$d0, [$s0];
	ld_spill_width(32768)_sig32	$d0, [$s0];
	ld_spill_width(65536)_sig32	$d0, [$s0];
	ld_spill_width(131072)_sig32	$d0, [$s0];
	ld_spill_width(262144)_sig32	$d0, [$s0];
	ld_spill_width(524288)_sig32	$d0, [$s0];
	ld_spill_width(1048576)_sig32	$d0, [$s0];
	ld_spill_width(2097152)_sig32	$d0, [$s0];
	ld_spill_width(4194304)_sig32	$d0, [$s0];
	ld_spill_width(8388608)_sig32	$d0, [$s0];
	ld_spill_width(16777216)_sig32	$d0, [$s0];
	ld_spill_width(33554432)_sig32	$d0, [$s0];
	ld_spill_width(67108864)_sig32	$d0, [$s0];
	ld_spill_width(134217728)_sig32	$d0, [$s0];
	ld_spill_width(268435456)_sig32	$d0, [$s0];
	ld_spill_width(536870912)_sig32	$d0, [$s0];
	ld_spill_width(1073741824)_sig32	$d0, [$s0];
	ld_spill_width(2147483648)_sig32	$d0, [$s0];
	ld_spill_width(WAVESIZE)_sig32	$d0, [$s0];
	ld_spill_width(all)_sig32	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_sig32	$d0, [$s0];
	// 
	ld_arg_sig32	$d0, [0];
	ld_arg_align(2)_sig32	$d0, [$s0];
	ld_arg_align(4)_sig32	$d0, [$s0];
	ld_arg_align(8)_sig32	$d0, [$s0];
	ld_arg_align(16)_sig32	$d0, [$s0];
	ld_arg_align(32)_sig32	$d0, [$s0];
	ld_arg_align(64)_sig32	$d0, [$s0];
	ld_arg_align(128)_sig32	$d0, [$s0];
	ld_arg_equiv(1)_sig32	$d0, [$s0];
	ld_arg_equiv(2)_sig32	$d0, [$s0];
	ld_arg_equiv(255)_sig32	$d0, [$s0];
	ld_arg_width(2)_sig32	$d0, [$s0];
	ld_arg_width(4)_sig32	$d0, [$s0];
	ld_arg_width(8)_sig32	$d0, [$s0];
	ld_arg_width(16)_sig32	$d0, [$s0];
	ld_arg_width(32)_sig32	$d0, [$s0];
	ld_arg_width(64)_sig32	$d0, [$s0];
	ld_arg_width(128)_sig32	$d0, [$s0];
	ld_arg_width(256)_sig32	$d0, [$s0];
	ld_arg_width(512)_sig32	$d0, [$s0];
	ld_arg_width(1024)_sig32	$d0, [$s0];
	ld_arg_width(2048)_sig32	$d0, [$s0];
	ld_arg_width(4096)_sig32	$d0, [$s0];
	ld_arg_width(8192)_sig32	$d0, [$s0];
	ld_arg_width(16384)_sig32	$d0, [$s0];
	ld_arg_width(32768)_sig32	$d0, [$s0];
	ld_arg_width(65536)_sig32	$d0, [$s0];
	ld_arg_width(131072)_sig32	$d0, [$s0];
	ld_arg_width(262144)_sig32	$d0, [$s0];
	ld_arg_width(524288)_sig32	$d0, [$s0];
	ld_arg_width(1048576)_sig32	$d0, [$s0];
	ld_arg_width(2097152)_sig32	$d0, [$s0];
	ld_arg_width(4194304)_sig32	$d0, [$s0];
	ld_arg_width(8388608)_sig32	$d0, [$s0];
	ld_arg_width(16777216)_sig32	$d0, [$s0];
	ld_arg_width(33554432)_sig32	$d0, [$s0];
	ld_arg_width(67108864)_sig32	$d0, [$s0];
	ld_arg_width(134217728)_sig32	$d0, [$s0];
	ld_arg_width(268435456)_sig32	$d0, [$s0];
	ld_arg_width(536870912)_sig32	$d0, [$s0];
	ld_arg_width(1073741824)_sig32	$d0, [$s0];
	ld_arg_width(2147483648)_sig32	$d0, [$s0];
	ld_arg_width(WAVESIZE)_sig32	$d0, [$s0];
	ld_arg_width(all)_sig32	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_sig64	$d0, [$s0];
	// 
	ld_const_sig64	$d0, [$s0];
	ld_sig64	$d0, [0];
	ld_align(2)_sig64	$d0, [$s0];
	ld_align(4)_sig64	$d0, [$s0];
	ld_align(8)_sig64	$d0, [$s0];
	ld_align(16)_sig64	$d0, [$s0];
	ld_align(32)_sig64	$d0, [$s0];
	ld_align(64)_sig64	$d0, [$s0];
	ld_align(128)_sig64	$d0, [$s0];
	ld_equiv(1)_sig64	$d0, [$s0];
	ld_equiv(2)_sig64	$d0, [$s0];
	ld_equiv(255)_sig64	$d0, [$s0];
	ld_width(2)_sig64	$d0, [$s0];
	ld_width(4)_sig64	$d0, [$s0];
	ld_width(8)_sig64	$d0, [$s0];
	ld_width(16)_sig64	$d0, [$s0];
	ld_width(32)_sig64	$d0, [$s0];
	ld_width(64)_sig64	$d0, [$s0];
	ld_width(128)_sig64	$d0, [$s0];
	ld_width(256)_sig64	$d0, [$s0];
	ld_width(512)_sig64	$d0, [$s0];
	ld_width(1024)_sig64	$d0, [$s0];
	ld_width(2048)_sig64	$d0, [$s0];
	ld_width(4096)_sig64	$d0, [$s0];
	ld_width(8192)_sig64	$d0, [$s0];
	ld_width(16384)_sig64	$d0, [$s0];
	ld_width(32768)_sig64	$d0, [$s0];
	ld_width(65536)_sig64	$d0, [$s0];
	ld_width(131072)_sig64	$d0, [$s0];
	ld_width(262144)_sig64	$d0, [$s0];
	ld_width(524288)_sig64	$d0, [$s0];
	ld_width(1048576)_sig64	$d0, [$s0];
	ld_width(2097152)_sig64	$d0, [$s0];
	ld_width(4194304)_sig64	$d0, [$s0];
	ld_width(8388608)_sig64	$d0, [$s0];
	ld_width(16777216)_sig64	$d0, [$s0];
	ld_width(33554432)_sig64	$d0, [$s0];
	ld_width(67108864)_sig64	$d0, [$s0];
	ld_width(134217728)_sig64	$d0, [$s0];
	ld_width(268435456)_sig64	$d0, [$s0];
	ld_width(536870912)_sig64	$d0, [$s0];
	ld_width(1073741824)_sig64	$d0, [$s0];
	ld_width(2147483648)_sig64	$d0, [$s0];
	ld_width(WAVESIZE)_sig64	$d0, [$s0];
	ld_width(all)_sig64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_global_sig64	$d0, [&GlobalSig64];
	// 
	ld_global_const_sig64	$d0, [&GlobalSig64];
	ld_global_sig64	$d0, [$s0];
	ld_global_sig64	$d0, [0];
	ld_global_align(2)_sig64	$d0, [&GlobalSig64];
	ld_global_align(4)_sig64	$d0, [&GlobalSig64];
	ld_global_align(8)_sig64	$d0, [&GlobalSig64];
	ld_global_align(16)_sig64	$d0, [&GlobalSig64];
	ld_global_align(32)_sig64	$d0, [&GlobalSig64];
	ld_global_align(64)_sig64	$d0, [&GlobalSig64];
	ld_global_align(128)_sig64	$d0, [&GlobalSig64];
	ld_global_equiv(1)_sig64	$d0, [&GlobalSig64];
	ld_global_equiv(2)_sig64	$d0, [&GlobalSig64];
	ld_global_equiv(255)_sig64	$d0, [&GlobalSig64];
	ld_global_width(2)_sig64	$d0, [&GlobalSig64];
	ld_global_width(4)_sig64	$d0, [&GlobalSig64];
	ld_global_width(8)_sig64	$d0, [&GlobalSig64];
	ld_global_width(16)_sig64	$d0, [&GlobalSig64];
	ld_global_width(32)_sig64	$d0, [&GlobalSig64];
	ld_global_width(64)_sig64	$d0, [&GlobalSig64];
	ld_global_width(128)_sig64	$d0, [&GlobalSig64];
	ld_global_width(256)_sig64	$d0, [&GlobalSig64];
	ld_global_width(512)_sig64	$d0, [&GlobalSig64];
	ld_global_width(1024)_sig64	$d0, [&GlobalSig64];
	ld_global_width(2048)_sig64	$d0, [&GlobalSig64];
	ld_global_width(4096)_sig64	$d0, [&GlobalSig64];
	ld_global_width(8192)_sig64	$d0, [&GlobalSig64];
	ld_global_width(16384)_sig64	$d0, [&GlobalSig64];
	ld_global_width(32768)_sig64	$d0, [&GlobalSig64];
	ld_global_width(65536)_sig64	$d0, [&GlobalSig64];
	ld_global_width(131072)_sig64	$d0, [&GlobalSig64];
	ld_global_width(262144)_sig64	$d0, [&GlobalSig64];
	ld_global_width(524288)_sig64	$d0, [&GlobalSig64];
	ld_global_width(1048576)_sig64	$d0, [&GlobalSig64];
	ld_global_width(2097152)_sig64	$d0, [&GlobalSig64];
	ld_global_width(4194304)_sig64	$d0, [&GlobalSig64];
	ld_global_width(8388608)_sig64	$d0, [&GlobalSig64];
	ld_global_width(16777216)_sig64	$d0, [&GlobalSig64];
	ld_global_width(33554432)_sig64	$d0, [&GlobalSig64];
	ld_global_width(67108864)_sig64	$d0, [&GlobalSig64];
	ld_global_width(134217728)_sig64	$d0, [&GlobalSig64];
	ld_global_width(268435456)_sig64	$d0, [&GlobalSig64];
	ld_global_width(536870912)_sig64	$d0, [&GlobalSig64];
	ld_global_width(1073741824)_sig64	$d0, [&GlobalSig64];
	ld_global_width(2147483648)_sig64	$d0, [&GlobalSig64];
	ld_global_width(WAVESIZE)_sig64	$d0, [&GlobalSig64];
	ld_global_width(all)_sig64	$d0, [&GlobalSig64];
	// 
	// Next sample
	// 
	ld_readonly_sig64	$d0, [&ReadonlySig64];
	// 
	ld_readonly_const_sig64	$d0, [&ReadonlySig64];
	ld_readonly_sig64	$d0, [$s0];
	ld_readonly_sig64	$d0, [0];
	ld_readonly_align(2)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_align(4)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_align(8)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_align(16)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_align(32)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_align(64)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_align(128)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_equiv(1)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_equiv(2)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_equiv(255)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(2)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(4)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(8)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(16)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(32)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(64)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(128)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(256)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(512)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(1024)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(2048)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(4096)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(8192)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(16384)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(32768)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(65536)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(131072)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(262144)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(524288)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(1048576)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(2097152)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(4194304)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(8388608)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(16777216)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(33554432)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(67108864)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(134217728)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(268435456)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(536870912)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(1073741824)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(2147483648)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(WAVESIZE)_sig64	$d0, [&ReadonlySig64];
	ld_readonly_width(all)_sig64	$d0, [&ReadonlySig64];
	// 
	// Next sample
	// 
	ld_kernarg_sig64	$d0, [$s0];
	// 
	ld_kernarg_const_sig64	$d0, [$s0];
	ld_kernarg_sig64	$d0, [0];
	ld_kernarg_align(2)_sig64	$d0, [$s0];
	ld_kernarg_align(4)_sig64	$d0, [$s0];
	ld_kernarg_align(8)_sig64	$d0, [$s0];
	ld_kernarg_align(16)_sig64	$d0, [$s0];
	ld_kernarg_align(32)_sig64	$d0, [$s0];
	ld_kernarg_align(64)_sig64	$d0, [$s0];
	ld_kernarg_align(128)_sig64	$d0, [$s0];
	ld_kernarg_equiv(1)_sig64	$d0, [$s0];
	ld_kernarg_equiv(2)_sig64	$d0, [$s0];
	ld_kernarg_equiv(255)_sig64	$d0, [$s0];
	ld_kernarg_width(2)_sig64	$d0, [$s0];
	ld_kernarg_width(4)_sig64	$d0, [$s0];
	ld_kernarg_width(8)_sig64	$d0, [$s0];
	ld_kernarg_width(16)_sig64	$d0, [$s0];
	ld_kernarg_width(32)_sig64	$d0, [$s0];
	ld_kernarg_width(64)_sig64	$d0, [$s0];
	ld_kernarg_width(128)_sig64	$d0, [$s0];
	ld_kernarg_width(256)_sig64	$d0, [$s0];
	ld_kernarg_width(512)_sig64	$d0, [$s0];
	ld_kernarg_width(1024)_sig64	$d0, [$s0];
	ld_kernarg_width(2048)_sig64	$d0, [$s0];
	ld_kernarg_width(4096)_sig64	$d0, [$s0];
	ld_kernarg_width(8192)_sig64	$d0, [$s0];
	ld_kernarg_width(16384)_sig64	$d0, [$s0];
	ld_kernarg_width(32768)_sig64	$d0, [$s0];
	ld_kernarg_width(65536)_sig64	$d0, [$s0];
	ld_kernarg_width(131072)_sig64	$d0, [$s0];
	ld_kernarg_width(262144)_sig64	$d0, [$s0];
	ld_kernarg_width(524288)_sig64	$d0, [$s0];
	ld_kernarg_width(1048576)_sig64	$d0, [$s0];
	ld_kernarg_width(2097152)_sig64	$d0, [$s0];
	ld_kernarg_width(4194304)_sig64	$d0, [$s0];
	ld_kernarg_width(8388608)_sig64	$d0, [$s0];
	ld_kernarg_width(16777216)_sig64	$d0, [$s0];
	ld_kernarg_width(33554432)_sig64	$d0, [$s0];
	ld_kernarg_width(67108864)_sig64	$d0, [$s0];
	ld_kernarg_width(134217728)_sig64	$d0, [$s0];
	ld_kernarg_width(268435456)_sig64	$d0, [$s0];
	ld_kernarg_width(536870912)_sig64	$d0, [$s0];
	ld_kernarg_width(1073741824)_sig64	$d0, [$s0];
	ld_kernarg_width(2147483648)_sig64	$d0, [$s0];
	ld_kernarg_width(WAVESIZE)_sig64	$d0, [$s0];
	ld_kernarg_width(all)_sig64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_group_sig64	$d0, [$s0];
	// 
	ld_group_sig64	$d0, [0];
	ld_group_align(2)_sig64	$d0, [$s0];
	ld_group_align(4)_sig64	$d0, [$s0];
	ld_group_align(8)_sig64	$d0, [$s0];
	ld_group_align(16)_sig64	$d0, [$s0];
	ld_group_align(32)_sig64	$d0, [$s0];
	ld_group_align(64)_sig64	$d0, [$s0];
	ld_group_align(128)_sig64	$d0, [$s0];
	ld_group_equiv(1)_sig64	$d0, [$s0];
	ld_group_equiv(2)_sig64	$d0, [$s0];
	ld_group_equiv(255)_sig64	$d0, [$s0];
	ld_group_width(2)_sig64	$d0, [$s0];
	ld_group_width(4)_sig64	$d0, [$s0];
	ld_group_width(8)_sig64	$d0, [$s0];
	ld_group_width(16)_sig64	$d0, [$s0];
	ld_group_width(32)_sig64	$d0, [$s0];
	ld_group_width(64)_sig64	$d0, [$s0];
	ld_group_width(128)_sig64	$d0, [$s0];
	ld_group_width(256)_sig64	$d0, [$s0];
	ld_group_width(512)_sig64	$d0, [$s0];
	ld_group_width(1024)_sig64	$d0, [$s0];
	ld_group_width(2048)_sig64	$d0, [$s0];
	ld_group_width(4096)_sig64	$d0, [$s0];
	ld_group_width(8192)_sig64	$d0, [$s0];
	ld_group_width(16384)_sig64	$d0, [$s0];
	ld_group_width(32768)_sig64	$d0, [$s0];
	ld_group_width(65536)_sig64	$d0, [$s0];
	ld_group_width(131072)_sig64	$d0, [$s0];
	ld_group_width(262144)_sig64	$d0, [$s0];
	ld_group_width(524288)_sig64	$d0, [$s0];
	ld_group_width(1048576)_sig64	$d0, [$s0];
	ld_group_width(2097152)_sig64	$d0, [$s0];
	ld_group_width(4194304)_sig64	$d0, [$s0];
	ld_group_width(8388608)_sig64	$d0, [$s0];
	ld_group_width(16777216)_sig64	$d0, [$s0];
	ld_group_width(33554432)_sig64	$d0, [$s0];
	ld_group_width(67108864)_sig64	$d0, [$s0];
	ld_group_width(134217728)_sig64	$d0, [$s0];
	ld_group_width(268435456)_sig64	$d0, [$s0];
	ld_group_width(536870912)_sig64	$d0, [$s0];
	ld_group_width(1073741824)_sig64	$d0, [$s0];
	ld_group_width(2147483648)_sig64	$d0, [$s0];
	ld_group_width(WAVESIZE)_sig64	$d0, [$s0];
	ld_group_width(all)_sig64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_private_sig64	$d0, [$s0];
	// 
	ld_private_sig64	$d0, [0];
	ld_private_align(2)_sig64	$d0, [$s0];
	ld_private_align(4)_sig64	$d0, [$s0];
	ld_private_align(8)_sig64	$d0, [$s0];
	ld_private_align(16)_sig64	$d0, [$s0];
	ld_private_align(32)_sig64	$d0, [$s0];
	ld_private_align(64)_sig64	$d0, [$s0];
	ld_private_align(128)_sig64	$d0, [$s0];
	ld_private_equiv(1)_sig64	$d0, [$s0];
	ld_private_equiv(2)_sig64	$d0, [$s0];
	ld_private_equiv(255)_sig64	$d0, [$s0];
	ld_private_width(2)_sig64	$d0, [$s0];
	ld_private_width(4)_sig64	$d0, [$s0];
	ld_private_width(8)_sig64	$d0, [$s0];
	ld_private_width(16)_sig64	$d0, [$s0];
	ld_private_width(32)_sig64	$d0, [$s0];
	ld_private_width(64)_sig64	$d0, [$s0];
	ld_private_width(128)_sig64	$d0, [$s0];
	ld_private_width(256)_sig64	$d0, [$s0];
	ld_private_width(512)_sig64	$d0, [$s0];
	ld_private_width(1024)_sig64	$d0, [$s0];
	ld_private_width(2048)_sig64	$d0, [$s0];
	ld_private_width(4096)_sig64	$d0, [$s0];
	ld_private_width(8192)_sig64	$d0, [$s0];
	ld_private_width(16384)_sig64	$d0, [$s0];
	ld_private_width(32768)_sig64	$d0, [$s0];
	ld_private_width(65536)_sig64	$d0, [$s0];
	ld_private_width(131072)_sig64	$d0, [$s0];
	ld_private_width(262144)_sig64	$d0, [$s0];
	ld_private_width(524288)_sig64	$d0, [$s0];
	ld_private_width(1048576)_sig64	$d0, [$s0];
	ld_private_width(2097152)_sig64	$d0, [$s0];
	ld_private_width(4194304)_sig64	$d0, [$s0];
	ld_private_width(8388608)_sig64	$d0, [$s0];
	ld_private_width(16777216)_sig64	$d0, [$s0];
	ld_private_width(33554432)_sig64	$d0, [$s0];
	ld_private_width(67108864)_sig64	$d0, [$s0];
	ld_private_width(134217728)_sig64	$d0, [$s0];
	ld_private_width(268435456)_sig64	$d0, [$s0];
	ld_private_width(536870912)_sig64	$d0, [$s0];
	ld_private_width(1073741824)_sig64	$d0, [$s0];
	ld_private_width(2147483648)_sig64	$d0, [$s0];
	ld_private_width(WAVESIZE)_sig64	$d0, [$s0];
	ld_private_width(all)_sig64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_spill_sig64	$d0, [$s0];
	// 
	ld_spill_sig64	$d0, [0];
	ld_spill_align(2)_sig64	$d0, [$s0];
	ld_spill_align(4)_sig64	$d0, [$s0];
	ld_spill_align(8)_sig64	$d0, [$s0];
	ld_spill_align(16)_sig64	$d0, [$s0];
	ld_spill_align(32)_sig64	$d0, [$s0];
	ld_spill_align(64)_sig64	$d0, [$s0];
	ld_spill_align(128)_sig64	$d0, [$s0];
	ld_spill_equiv(1)_sig64	$d0, [$s0];
	ld_spill_equiv(2)_sig64	$d0, [$s0];
	ld_spill_equiv(255)_sig64	$d0, [$s0];
	ld_spill_width(2)_sig64	$d0, [$s0];
	ld_spill_width(4)_sig64	$d0, [$s0];
	ld_spill_width(8)_sig64	$d0, [$s0];
	ld_spill_width(16)_sig64	$d0, [$s0];
	ld_spill_width(32)_sig64	$d0, [$s0];
	ld_spill_width(64)_sig64	$d0, [$s0];
	ld_spill_width(128)_sig64	$d0, [$s0];
	ld_spill_width(256)_sig64	$d0, [$s0];
	ld_spill_width(512)_sig64	$d0, [$s0];
	ld_spill_width(1024)_sig64	$d0, [$s0];
	ld_spill_width(2048)_sig64	$d0, [$s0];
	ld_spill_width(4096)_sig64	$d0, [$s0];
	ld_spill_width(8192)_sig64	$d0, [$s0];
	ld_spill_width(16384)_sig64	$d0, [$s0];
	ld_spill_width(32768)_sig64	$d0, [$s0];
	ld_spill_width(65536)_sig64	$d0, [$s0];
	ld_spill_width(131072)_sig64	$d0, [$s0];
	ld_spill_width(262144)_sig64	$d0, [$s0];
	ld_spill_width(524288)_sig64	$d0, [$s0];
	ld_spill_width(1048576)_sig64	$d0, [$s0];
	ld_spill_width(2097152)_sig64	$d0, [$s0];
	ld_spill_width(4194304)_sig64	$d0, [$s0];
	ld_spill_width(8388608)_sig64	$d0, [$s0];
	ld_spill_width(16777216)_sig64	$d0, [$s0];
	ld_spill_width(33554432)_sig64	$d0, [$s0];
	ld_spill_width(67108864)_sig64	$d0, [$s0];
	ld_spill_width(134217728)_sig64	$d0, [$s0];
	ld_spill_width(268435456)_sig64	$d0, [$s0];
	ld_spill_width(536870912)_sig64	$d0, [$s0];
	ld_spill_width(1073741824)_sig64	$d0, [$s0];
	ld_spill_width(2147483648)_sig64	$d0, [$s0];
	ld_spill_width(WAVESIZE)_sig64	$d0, [$s0];
	ld_spill_width(all)_sig64	$d0, [$s0];
	// 
	// Next sample
	// 
	ld_arg_sig64	$d0, [$s0];
	// 
	ld_arg_sig64	$d0, [0];
	ld_arg_align(2)_sig64	$d0, [$s0];
	ld_arg_align(4)_sig64	$d0, [$s0];
	ld_arg_align(8)_sig64	$d0, [$s0];
	ld_arg_align(16)_sig64	$d0, [$s0];
	ld_arg_align(32)_sig64	$d0, [$s0];
	ld_arg_align(64)_sig64	$d0, [$s0];
	ld_arg_align(128)_sig64	$d0, [$s0];
	ld_arg_equiv(1)_sig64	$d0, [$s0];
	ld_arg_equiv(2)_sig64	$d0, [$s0];
	ld_arg_equiv(255)_sig64	$d0, [$s0];
	ld_arg_width(2)_sig64	$d0, [$s0];
	ld_arg_width(4)_sig64	$d0, [$s0];
	ld_arg_width(8)_sig64	$d0, [$s0];
	ld_arg_width(16)_sig64	$d0, [$s0];
	ld_arg_width(32)_sig64	$d0, [$s0];
	ld_arg_width(64)_sig64	$d0, [$s0];
	ld_arg_width(128)_sig64	$d0, [$s0];
	ld_arg_width(256)_sig64	$d0, [$s0];
	ld_arg_width(512)_sig64	$d0, [$s0];
	ld_arg_width(1024)_sig64	$d0, [$s0];
	ld_arg_width(2048)_sig64	$d0, [$s0];
	ld_arg_width(4096)_sig64	$d0, [$s0];
	ld_arg_width(8192)_sig64	$d0, [$s0];
	ld_arg_width(16384)_sig64	$d0, [$s0];
	ld_arg_width(32768)_sig64	$d0, [$s0];
	ld_arg_width(65536)_sig64	$d0, [$s0];
	ld_arg_width(131072)_sig64	$d0, [$s0];
	ld_arg_width(262144)_sig64	$d0, [$s0];
	ld_arg_width(524288)_sig64	$d0, [$s0];
	ld_arg_width(1048576)_sig64	$d0, [$s0];
	ld_arg_width(2097152)_sig64	$d0, [$s0];
	ld_arg_width(4194304)_sig64	$d0, [$s0];
	ld_arg_width(8388608)_sig64	$d0, [$s0];
	ld_arg_width(16777216)_sig64	$d0, [$s0];
	ld_arg_width(33554432)_sig64	$d0, [$s0];
	ld_arg_width(67108864)_sig64	$d0, [$s0];
	ld_arg_width(134217728)_sig64	$d0, [$s0];
	ld_arg_width(268435456)_sig64	$d0, [$s0];
	ld_arg_width(536870912)_sig64	$d0, [$s0];
	ld_arg_width(1073741824)_sig64	$d0, [$s0];
	ld_arg_width(2147483648)_sig64	$d0, [$s0];
	ld_arg_width(WAVESIZE)_sig64	$d0, [$s0];
	ld_arg_width(all)_sig64	$d0, [$s0];
	// 
	// Next sample
	// 
	st_u8	$s0, [$s0];
	// 
	st_v2_u8	($s0,$s0), [$s0];
	st_v3_u8	($s0,$s0,$s0), [$s0];
	st_v4_u8	($s0,$s0,$s0,$s0), [$s0];
	st_v2_u8	($s0,$s1), [$s0];
	st_v3_u8	($s0,$s1,$s2), [$s0];
	st_v4_u8	($s0,$s1,$s2,$s3), [$s0];
	st_u8	1, [$s0];
	st_u8	255, [$s0];
	st_u8	WAVESIZE, [$s0];
	st_u8	$s0, [0];
	st_align(2)_u8	$s0, [$s0];
	st_align(4)_u8	$s0, [$s0];
	st_align(8)_u8	$s0, [$s0];
	st_align(16)_u8	$s0, [$s0];
	st_align(32)_u8	$s0, [$s0];
	st_align(64)_u8	$s0, [$s0];
	st_align(128)_u8	$s0, [$s0];
	st_equiv(1)_u8	$s0, [$s0];
	st_equiv(2)_u8	$s0, [$s0];
	st_equiv(255)_u8	$s0, [$s0];
	// 
	// Next sample
	// 
	st_global_u8	$s0, [&GlobalVar];
	// 
	st_v2_global_u8	($s0,$s0), [&GlobalVar];
	st_v3_global_u8	($s0,$s0,$s0), [&GlobalVar];
	st_v4_global_u8	($s0,$s0,$s0,$s0), [&GlobalVar];
	st_v2_global_u8	($s0,$s1), [&GlobalVar];
	st_v3_global_u8	($s0,$s1,$s2), [&GlobalVar];
	st_v4_global_u8	($s0,$s1,$s2,$s3), [&GlobalVar];
	st_global_u8	1, [&GlobalVar];
	st_global_u8	255, [&GlobalVar];
	st_global_u8	WAVESIZE, [&GlobalVar];
	st_global_u8	$s0, [$s0];
	st_global_u8	$s0, [0];
	st_global_align(2)_u8	$s0, [&GlobalVar];
	st_global_align(4)_u8	$s0, [&GlobalVar];
	st_global_align(8)_u8	$s0, [&GlobalVar];
	st_global_align(16)_u8	$s0, [&GlobalVar];
	st_global_align(32)_u8	$s0, [&GlobalVar];
	st_global_align(64)_u8	$s0, [&GlobalVar];
	st_global_align(128)_u8	$s0, [&GlobalVar];
	st_global_equiv(1)_u8	$s0, [&GlobalVar];
	st_global_equiv(2)_u8	$s0, [&GlobalVar];
	st_global_equiv(255)_u8	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	st_group_u8	$s0, [&GroupVar];
	// 
	st_v2_group_u8	($s0,$s0), [&GroupVar];
	st_v3_group_u8	($s0,$s0,$s0), [&GroupVar];
	st_v4_group_u8	($s0,$s0,$s0,$s0), [&GroupVar];
	st_v2_group_u8	($s0,$s1), [&GroupVar];
	st_v3_group_u8	($s0,$s1,$s2), [&GroupVar];
	st_v4_group_u8	($s0,$s1,$s2,$s3), [&GroupVar];
	st_group_u8	1, [&GroupVar];
	st_group_u8	255, [&GroupVar];
	st_group_u8	WAVESIZE, [&GroupVar];
	st_group_u8	$s0, [$s0];
	st_group_u8	$s0, [0];
	st_group_align(2)_u8	$s0, [&GroupVar];
	st_group_align(4)_u8	$s0, [&GroupVar];
	st_group_align(8)_u8	$s0, [&GroupVar];
	st_group_align(16)_u8	$s0, [&GroupVar];
	st_group_align(32)_u8	$s0, [&GroupVar];
	st_group_align(64)_u8	$s0, [&GroupVar];
	st_group_align(128)_u8	$s0, [&GroupVar];
	st_group_equiv(1)_u8	$s0, [&GroupVar];
	st_group_equiv(2)_u8	$s0, [&GroupVar];
	st_group_equiv(255)_u8	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	st_private_u8	$s0, [&PrivateVar];
	// 
	st_v2_private_u8	($s0,$s0), [&PrivateVar];
	st_v3_private_u8	($s0,$s0,$s0), [&PrivateVar];
	st_v4_private_u8	($s0,$s0,$s0,$s0), [&PrivateVar];
	st_v2_private_u8	($s0,$s1), [&PrivateVar];
	st_v3_private_u8	($s0,$s1,$s2), [&PrivateVar];
	st_v4_private_u8	($s0,$s1,$s2,$s3), [&PrivateVar];
	st_private_u8	1, [&PrivateVar];
	st_private_u8	255, [&PrivateVar];
	st_private_u8	WAVESIZE, [&PrivateVar];
	st_private_u8	$s0, [$s0];
	st_private_u8	$s0, [0];
	st_private_align(2)_u8	$s0, [&PrivateVar];
	st_private_align(4)_u8	$s0, [&PrivateVar];
	st_private_align(8)_u8	$s0, [&PrivateVar];
	st_private_align(16)_u8	$s0, [&PrivateVar];
	st_private_align(32)_u8	$s0, [&PrivateVar];
	st_private_align(64)_u8	$s0, [&PrivateVar];
	st_private_align(128)_u8	$s0, [&PrivateVar];
	st_private_equiv(1)_u8	$s0, [&PrivateVar];
	st_private_equiv(2)_u8	$s0, [&PrivateVar];
	st_private_equiv(255)_u8	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	st_spill_u8	$s0, [$s0];
	// 
	st_v2_spill_u8	($s0,$s0), [$s0];
	st_v3_spill_u8	($s0,$s0,$s0), [$s0];
	st_v4_spill_u8	($s0,$s0,$s0,$s0), [$s0];
	st_v2_spill_u8	($s0,$s1), [$s0];
	st_v3_spill_u8	($s0,$s1,$s2), [$s0];
	st_v4_spill_u8	($s0,$s1,$s2,$s3), [$s0];
	st_spill_u8	1, [$s0];
	st_spill_u8	255, [$s0];
	st_spill_u8	WAVESIZE, [$s0];
	st_spill_u8	$s0, [0];
	st_spill_align(2)_u8	$s0, [$s0];
	st_spill_align(4)_u8	$s0, [$s0];
	st_spill_align(8)_u8	$s0, [$s0];
	st_spill_align(16)_u8	$s0, [$s0];
	st_spill_align(32)_u8	$s0, [$s0];
	st_spill_align(64)_u8	$s0, [$s0];
	st_spill_align(128)_u8	$s0, [$s0];
	st_spill_equiv(1)_u8	$s0, [$s0];
	st_spill_equiv(2)_u8	$s0, [$s0];
	st_spill_equiv(255)_u8	$s0, [$s0];
	// 
	// Next sample
	// 
	st_arg_u8	$s0, [$s0];
	// 
	st_v2_arg_u8	($s0,$s0), [$s0];
	st_v3_arg_u8	($s0,$s0,$s0), [$s0];
	st_v4_arg_u8	($s0,$s0,$s0,$s0), [$s0];
	st_v2_arg_u8	($s0,$s1), [$s0];
	st_v3_arg_u8	($s0,$s1,$s2), [$s0];
	st_v4_arg_u8	($s0,$s1,$s2,$s3), [$s0];
	st_arg_u8	1, [$s0];
	st_arg_u8	255, [$s0];
	st_arg_u8	WAVESIZE, [$s0];
	st_arg_u8	$s0, [0];
	st_arg_align(2)_u8	$s0, [$s0];
	st_arg_align(4)_u8	$s0, [$s0];
	st_arg_align(8)_u8	$s0, [$s0];
	st_arg_align(16)_u8	$s0, [$s0];
	st_arg_align(32)_u8	$s0, [$s0];
	st_arg_align(64)_u8	$s0, [$s0];
	st_arg_align(128)_u8	$s0, [$s0];
	st_arg_equiv(1)_u8	$s0, [$s0];
	st_arg_equiv(2)_u8	$s0, [$s0];
	st_arg_equiv(255)_u8	$s0, [$s0];
	// 
	// Next sample
	// 
	st_u16	$s0, [$s0];
	// 
	st_v2_u16	($s0,$s0), [$s0];
	st_v3_u16	($s0,$s0,$s0), [$s0];
	st_v4_u16	($s0,$s0,$s0,$s0), [$s0];
	st_v2_u16	($s0,$s1), [$s0];
	st_v3_u16	($s0,$s1,$s2), [$s0];
	st_v4_u16	($s0,$s1,$s2,$s3), [$s0];
	st_u16	65535, [$s0];
	st_u16	WAVESIZE, [$s0];
	st_u16	$s0, [0];
	st_align(2)_u16	$s0, [$s0];
	st_align(4)_u16	$s0, [$s0];
	st_align(8)_u16	$s0, [$s0];
	st_align(16)_u16	$s0, [$s0];
	st_align(32)_u16	$s0, [$s0];
	st_align(64)_u16	$s0, [$s0];
	st_align(128)_u16	$s0, [$s0];
	st_equiv(1)_u16	$s0, [$s0];
	st_equiv(2)_u16	$s0, [$s0];
	st_equiv(255)_u16	$s0, [$s0];
	// 
	// Next sample
	// 
	st_global_u16	$s0, [&GlobalVar];
	// 
	st_v2_global_u16	($s0,$s0), [&GlobalVar];
	st_v3_global_u16	($s0,$s0,$s0), [&GlobalVar];
	st_v4_global_u16	($s0,$s0,$s0,$s0), [&GlobalVar];
	st_v2_global_u16	($s0,$s1), [&GlobalVar];
	st_v3_global_u16	($s0,$s1,$s2), [&GlobalVar];
	st_v4_global_u16	($s0,$s1,$s2,$s3), [&GlobalVar];
	st_global_u16	65535, [&GlobalVar];
	st_global_u16	WAVESIZE, [&GlobalVar];
	st_global_u16	$s0, [$s0];
	st_global_u16	$s0, [0];
	st_global_align(2)_u16	$s0, [&GlobalVar];
	st_global_align(4)_u16	$s0, [&GlobalVar];
	st_global_align(8)_u16	$s0, [&GlobalVar];
	st_global_align(16)_u16	$s0, [&GlobalVar];
	st_global_align(32)_u16	$s0, [&GlobalVar];
	st_global_align(64)_u16	$s0, [&GlobalVar];
	st_global_align(128)_u16	$s0, [&GlobalVar];
	st_global_equiv(1)_u16	$s0, [&GlobalVar];
	st_global_equiv(2)_u16	$s0, [&GlobalVar];
	st_global_equiv(255)_u16	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	st_group_u16	$s0, [&GroupVar];
	// 
	st_v2_group_u16	($s0,$s0), [&GroupVar];
	st_v3_group_u16	($s0,$s0,$s0), [&GroupVar];
	st_v4_group_u16	($s0,$s0,$s0,$s0), [&GroupVar];
	st_v2_group_u16	($s0,$s1), [&GroupVar];
	st_v3_group_u16	($s0,$s1,$s2), [&GroupVar];
	st_v4_group_u16	($s0,$s1,$s2,$s3), [&GroupVar];
	st_group_u16	65535, [&GroupVar];
	st_group_u16	WAVESIZE, [&GroupVar];
	st_group_u16	$s0, [$s0];
	st_group_u16	$s0, [0];
	st_group_align(2)_u16	$s0, [&GroupVar];
	st_group_align(4)_u16	$s0, [&GroupVar];
	st_group_align(8)_u16	$s0, [&GroupVar];
	st_group_align(16)_u16	$s0, [&GroupVar];
	st_group_align(32)_u16	$s0, [&GroupVar];
	st_group_align(64)_u16	$s0, [&GroupVar];
	st_group_align(128)_u16	$s0, [&GroupVar];
	st_group_equiv(1)_u16	$s0, [&GroupVar];
	st_group_equiv(2)_u16	$s0, [&GroupVar];
	st_group_equiv(255)_u16	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	st_private_u16	$s0, [&PrivateVar];
	// 
	st_v2_private_u16	($s0,$s0), [&PrivateVar];
	st_v3_private_u16	($s0,$s0,$s0), [&PrivateVar];
	st_v4_private_u16	($s0,$s0,$s0,$s0), [&PrivateVar];
	st_v2_private_u16	($s0,$s1), [&PrivateVar];
	st_v3_private_u16	($s0,$s1,$s2), [&PrivateVar];
	st_v4_private_u16	($s0,$s1,$s2,$s3), [&PrivateVar];
	st_private_u16	65535, [&PrivateVar];
	st_private_u16	WAVESIZE, [&PrivateVar];
	st_private_u16	$s0, [$s0];
	st_private_u16	$s0, [0];
	st_private_align(2)_u16	$s0, [&PrivateVar];
	st_private_align(4)_u16	$s0, [&PrivateVar];
	st_private_align(8)_u16	$s0, [&PrivateVar];
	st_private_align(16)_u16	$s0, [&PrivateVar];
	st_private_align(32)_u16	$s0, [&PrivateVar];
	st_private_align(64)_u16	$s0, [&PrivateVar];
	st_private_align(128)_u16	$s0, [&PrivateVar];
	st_private_equiv(1)_u16	$s0, [&PrivateVar];
	st_private_equiv(2)_u16	$s0, [&PrivateVar];
	st_private_equiv(255)_u16	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	st_spill_u16	$s0, [$s0];
	// 
	st_v2_spill_u16	($s0,$s0), [$s0];
	st_v3_spill_u16	($s0,$s0,$s0), [$s0];
	st_v4_spill_u16	($s0,$s0,$s0,$s0), [$s0];
	st_v2_spill_u16	($s0,$s1), [$s0];
	st_v3_spill_u16	($s0,$s1,$s2), [$s0];
	st_v4_spill_u16	($s0,$s1,$s2,$s3), [$s0];
	st_spill_u16	65535, [$s0];
	st_spill_u16	WAVESIZE, [$s0];
	st_spill_u16	$s0, [0];
	st_spill_align(2)_u16	$s0, [$s0];
	st_spill_align(4)_u16	$s0, [$s0];
	st_spill_align(8)_u16	$s0, [$s0];
	st_spill_align(16)_u16	$s0, [$s0];
	st_spill_align(32)_u16	$s0, [$s0];
	st_spill_align(64)_u16	$s0, [$s0];
	st_spill_align(128)_u16	$s0, [$s0];
	st_spill_equiv(1)_u16	$s0, [$s0];
	st_spill_equiv(2)_u16	$s0, [$s0];
	st_spill_equiv(255)_u16	$s0, [$s0];
	// 
	// Next sample
	// 
	st_arg_u16	$s0, [$s0];
	// 
	st_v2_arg_u16	($s0,$s0), [$s0];
	st_v3_arg_u16	($s0,$s0,$s0), [$s0];
	st_v4_arg_u16	($s0,$s0,$s0,$s0), [$s0];
	st_v2_arg_u16	($s0,$s1), [$s0];
	st_v3_arg_u16	($s0,$s1,$s2), [$s0];
	st_v4_arg_u16	($s0,$s1,$s2,$s3), [$s0];
	st_arg_u16	65535, [$s0];
	st_arg_u16	WAVESIZE, [$s0];
	st_arg_u16	$s0, [0];
	st_arg_align(2)_u16	$s0, [$s0];
	st_arg_align(4)_u16	$s0, [$s0];
	st_arg_align(8)_u16	$s0, [$s0];
	st_arg_align(16)_u16	$s0, [$s0];
	st_arg_align(32)_u16	$s0, [$s0];
	st_arg_align(64)_u16	$s0, [$s0];
	st_arg_align(128)_u16	$s0, [$s0];
	st_arg_equiv(1)_u16	$s0, [$s0];
	st_arg_equiv(2)_u16	$s0, [$s0];
	st_arg_equiv(255)_u16	$s0, [$s0];
	// 
	// Next sample
	// 
	st_u32	$s0, [$s0];
	// 
	st_v2_u32	($s0,$s0), [$s0];
	st_v3_u32	($s0,$s0,$s0), [$s0];
	st_v4_u32	($s0,$s0,$s0,$s0), [$s0];
	st_v2_u32	($s0,$s1), [$s0];
	st_v3_u32	($s0,$s1,$s2), [$s0];
	st_v4_u32	($s0,$s1,$s2,$s3), [$s0];
	st_u32	4294967295, [$s0];
	st_u32	WAVESIZE, [$s0];
	st_u32	$s0, [0];
	st_align(2)_u32	$s0, [$s0];
	st_align(4)_u32	$s0, [$s0];
	st_align(8)_u32	$s0, [$s0];
	st_align(16)_u32	$s0, [$s0];
	st_align(32)_u32	$s0, [$s0];
	st_align(64)_u32	$s0, [$s0];
	st_align(128)_u32	$s0, [$s0];
	st_equiv(1)_u32	$s0, [$s0];
	st_equiv(2)_u32	$s0, [$s0];
	st_equiv(255)_u32	$s0, [$s0];
	// 
	// Next sample
	// 
	st_global_u32	$s0, [&GlobalVar];
	// 
	st_v2_global_u32	($s0,$s0), [&GlobalVar];
	st_v3_global_u32	($s0,$s0,$s0), [&GlobalVar];
	st_v4_global_u32	($s0,$s0,$s0,$s0), [&GlobalVar];
	st_v2_global_u32	($s0,$s1), [&GlobalVar];
	st_v3_global_u32	($s0,$s1,$s2), [&GlobalVar];
	st_v4_global_u32	($s0,$s1,$s2,$s3), [&GlobalVar];
	st_global_u32	4294967295, [&GlobalVar];
	st_global_u32	WAVESIZE, [&GlobalVar];
	st_global_u32	$s0, [$s0];
	st_global_u32	$s0, [0];
	st_global_align(2)_u32	$s0, [&GlobalVar];
	st_global_align(4)_u32	$s0, [&GlobalVar];
	st_global_align(8)_u32	$s0, [&GlobalVar];
	st_global_align(16)_u32	$s0, [&GlobalVar];
	st_global_align(32)_u32	$s0, [&GlobalVar];
	st_global_align(64)_u32	$s0, [&GlobalVar];
	st_global_align(128)_u32	$s0, [&GlobalVar];
	st_global_equiv(1)_u32	$s0, [&GlobalVar];
	st_global_equiv(2)_u32	$s0, [&GlobalVar];
	st_global_equiv(255)_u32	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	st_group_u32	$s0, [&GroupVar];
	// 
	st_v2_group_u32	($s0,$s0), [&GroupVar];
	st_v3_group_u32	($s0,$s0,$s0), [&GroupVar];
	st_v4_group_u32	($s0,$s0,$s0,$s0), [&GroupVar];
	st_v2_group_u32	($s0,$s1), [&GroupVar];
	st_v3_group_u32	($s0,$s1,$s2), [&GroupVar];
	st_v4_group_u32	($s0,$s1,$s2,$s3), [&GroupVar];
	st_group_u32	4294967295, [&GroupVar];
	st_group_u32	WAVESIZE, [&GroupVar];
	st_group_u32	$s0, [$s0];
	st_group_u32	$s0, [0];
	st_group_align(2)_u32	$s0, [&GroupVar];
	st_group_align(4)_u32	$s0, [&GroupVar];
	st_group_align(8)_u32	$s0, [&GroupVar];
	st_group_align(16)_u32	$s0, [&GroupVar];
	st_group_align(32)_u32	$s0, [&GroupVar];
	st_group_align(64)_u32	$s0, [&GroupVar];
	st_group_align(128)_u32	$s0, [&GroupVar];
	st_group_equiv(1)_u32	$s0, [&GroupVar];
	st_group_equiv(2)_u32	$s0, [&GroupVar];
	st_group_equiv(255)_u32	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	st_private_u32	$s0, [&PrivateVar];
	// 
	st_v2_private_u32	($s0,$s0), [&PrivateVar];
	st_v3_private_u32	($s0,$s0,$s0), [&PrivateVar];
	st_v4_private_u32	($s0,$s0,$s0,$s0), [&PrivateVar];
	st_v2_private_u32	($s0,$s1), [&PrivateVar];
	st_v3_private_u32	($s0,$s1,$s2), [&PrivateVar];
	st_v4_private_u32	($s0,$s1,$s2,$s3), [&PrivateVar];
	st_private_u32	4294967295, [&PrivateVar];
	st_private_u32	WAVESIZE, [&PrivateVar];
	st_private_u32	$s0, [$s0];
	st_private_u32	$s0, [0];
	st_private_align(2)_u32	$s0, [&PrivateVar];
	st_private_align(4)_u32	$s0, [&PrivateVar];
	st_private_align(8)_u32	$s0, [&PrivateVar];
	st_private_align(16)_u32	$s0, [&PrivateVar];
	st_private_align(32)_u32	$s0, [&PrivateVar];
	st_private_align(64)_u32	$s0, [&PrivateVar];
	st_private_align(128)_u32	$s0, [&PrivateVar];
	st_private_equiv(1)_u32	$s0, [&PrivateVar];
	st_private_equiv(2)_u32	$s0, [&PrivateVar];
	st_private_equiv(255)_u32	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	st_spill_u32	$s0, [$s0];
	// 
	st_v2_spill_u32	($s0,$s0), [$s0];
	st_v3_spill_u32	($s0,$s0,$s0), [$s0];
	st_v4_spill_u32	($s0,$s0,$s0,$s0), [$s0];
	st_v2_spill_u32	($s0,$s1), [$s0];
	st_v3_spill_u32	($s0,$s1,$s2), [$s0];
	st_v4_spill_u32	($s0,$s1,$s2,$s3), [$s0];
	st_spill_u32	4294967295, [$s0];
	st_spill_u32	WAVESIZE, [$s0];
	st_spill_u32	$s0, [0];
	st_spill_align(2)_u32	$s0, [$s0];
	st_spill_align(4)_u32	$s0, [$s0];
	st_spill_align(8)_u32	$s0, [$s0];
	st_spill_align(16)_u32	$s0, [$s0];
	st_spill_align(32)_u32	$s0, [$s0];
	st_spill_align(64)_u32	$s0, [$s0];
	st_spill_align(128)_u32	$s0, [$s0];
	st_spill_equiv(1)_u32	$s0, [$s0];
	st_spill_equiv(2)_u32	$s0, [$s0];
	st_spill_equiv(255)_u32	$s0, [$s0];
	// 
	// Next sample
	// 
	st_arg_u32	$s0, [$s0];
	// 
	st_v2_arg_u32	($s0,$s0), [$s0];
	st_v3_arg_u32	($s0,$s0,$s0), [$s0];
	st_v4_arg_u32	($s0,$s0,$s0,$s0), [$s0];
	st_v2_arg_u32	($s0,$s1), [$s0];
	st_v3_arg_u32	($s0,$s1,$s2), [$s0];
	st_v4_arg_u32	($s0,$s1,$s2,$s3), [$s0];
	st_arg_u32	4294967295, [$s0];
	st_arg_u32	WAVESIZE, [$s0];
	st_arg_u32	$s0, [0];
	st_arg_align(2)_u32	$s0, [$s0];
	st_arg_align(4)_u32	$s0, [$s0];
	st_arg_align(8)_u32	$s0, [$s0];
	st_arg_align(16)_u32	$s0, [$s0];
	st_arg_align(32)_u32	$s0, [$s0];
	st_arg_align(64)_u32	$s0, [$s0];
	st_arg_align(128)_u32	$s0, [$s0];
	st_arg_equiv(1)_u32	$s0, [$s0];
	st_arg_equiv(2)_u32	$s0, [$s0];
	st_arg_equiv(255)_u32	$s0, [$s0];
	// 
	// Next sample
	// 
	st_u64	$d0, [$s0];
	// 
	st_v2_u64	($d0,$d0), [$s0];
	st_v3_u64	($d0,$d0,$d0), [$s0];
	st_v4_u64	($d0,$d0,$d0,$d0), [$s0];
	st_v2_u64	($d0,$d1), [$s0];
	st_v3_u64	($d0,$d1,$d2), [$s0];
	st_v4_u64	($d0,$d1,$d2,$d3), [$s0];
	st_u64	18446744073709551615, [$s0];
	st_u64	WAVESIZE, [$s0];
	st_u64	$d0, [0];
	st_align(2)_u64	$d0, [$s0];
	st_align(4)_u64	$d0, [$s0];
	st_align(8)_u64	$d0, [$s0];
	st_align(16)_u64	$d0, [$s0];
	st_align(32)_u64	$d0, [$s0];
	st_align(64)_u64	$d0, [$s0];
	st_align(128)_u64	$d0, [$s0];
	st_equiv(1)_u64	$d0, [$s0];
	st_equiv(2)_u64	$d0, [$s0];
	st_equiv(255)_u64	$d0, [$s0];
	// 
	// Next sample
	// 
	st_global_u64	$d0, [&GlobalVar];
	// 
	st_v2_global_u64	($d0,$d0), [&GlobalVar];
	st_v3_global_u64	($d0,$d0,$d0), [&GlobalVar];
	st_v4_global_u64	($d0,$d0,$d0,$d0), [&GlobalVar];
	st_v2_global_u64	($d0,$d1), [&GlobalVar];
	st_v3_global_u64	($d0,$d1,$d2), [&GlobalVar];
	st_v4_global_u64	($d0,$d1,$d2,$d3), [&GlobalVar];
	st_global_u64	18446744073709551615, [&GlobalVar];
	st_global_u64	WAVESIZE, [&GlobalVar];
	st_global_u64	$d0, [$s0];
	st_global_u64	$d0, [0];
	st_global_align(2)_u64	$d0, [&GlobalVar];
	st_global_align(4)_u64	$d0, [&GlobalVar];
	st_global_align(8)_u64	$d0, [&GlobalVar];
	st_global_align(16)_u64	$d0, [&GlobalVar];
	st_global_align(32)_u64	$d0, [&GlobalVar];
	st_global_align(64)_u64	$d0, [&GlobalVar];
	st_global_align(128)_u64	$d0, [&GlobalVar];
	st_global_equiv(1)_u64	$d0, [&GlobalVar];
	st_global_equiv(2)_u64	$d0, [&GlobalVar];
	st_global_equiv(255)_u64	$d0, [&GlobalVar];
	// 
	// Next sample
	// 
	st_group_u64	$d0, [&GroupVar];
	// 
	st_v2_group_u64	($d0,$d0), [&GroupVar];
	st_v3_group_u64	($d0,$d0,$d0), [&GroupVar];
	st_v4_group_u64	($d0,$d0,$d0,$d0), [&GroupVar];
	st_v2_group_u64	($d0,$d1), [&GroupVar];
	st_v3_group_u64	($d0,$d1,$d2), [&GroupVar];
	st_v4_group_u64	($d0,$d1,$d2,$d3), [&GroupVar];
	st_group_u64	18446744073709551615, [&GroupVar];
	st_group_u64	WAVESIZE, [&GroupVar];
	st_group_u64	$d0, [$s0];
	st_group_u64	$d0, [0];
	st_group_align(2)_u64	$d0, [&GroupVar];
	st_group_align(4)_u64	$d0, [&GroupVar];
	st_group_align(8)_u64	$d0, [&GroupVar];
	st_group_align(16)_u64	$d0, [&GroupVar];
	st_group_align(32)_u64	$d0, [&GroupVar];
	st_group_align(64)_u64	$d0, [&GroupVar];
	st_group_align(128)_u64	$d0, [&GroupVar];
	st_group_equiv(1)_u64	$d0, [&GroupVar];
	st_group_equiv(2)_u64	$d0, [&GroupVar];
	st_group_equiv(255)_u64	$d0, [&GroupVar];
	// 
	// Next sample
	// 
	st_private_u64	$d0, [&PrivateVar];
	// 
	st_v2_private_u64	($d0,$d0), [&PrivateVar];
	st_v3_private_u64	($d0,$d0,$d0), [&PrivateVar];
	st_v4_private_u64	($d0,$d0,$d0,$d0), [&PrivateVar];
	st_v2_private_u64	($d0,$d1), [&PrivateVar];
	st_v3_private_u64	($d0,$d1,$d2), [&PrivateVar];
	st_v4_private_u64	($d0,$d1,$d2,$d3), [&PrivateVar];
	st_private_u64	18446744073709551615, [&PrivateVar];
	st_private_u64	WAVESIZE, [&PrivateVar];
	st_private_u64	$d0, [$s0];
	st_private_u64	$d0, [0];
	st_private_align(2)_u64	$d0, [&PrivateVar];
	st_private_align(4)_u64	$d0, [&PrivateVar];
	st_private_align(8)_u64	$d0, [&PrivateVar];
	st_private_align(16)_u64	$d0, [&PrivateVar];
	st_private_align(32)_u64	$d0, [&PrivateVar];
	st_private_align(64)_u64	$d0, [&PrivateVar];
	st_private_align(128)_u64	$d0, [&PrivateVar];
	st_private_equiv(1)_u64	$d0, [&PrivateVar];
	st_private_equiv(2)_u64	$d0, [&PrivateVar];
	st_private_equiv(255)_u64	$d0, [&PrivateVar];
	// 
	// Next sample
	// 
	st_spill_u64	$d0, [$s0];
	// 
	st_v2_spill_u64	($d0,$d0), [$s0];
	st_v3_spill_u64	($d0,$d0,$d0), [$s0];
	st_v4_spill_u64	($d0,$d0,$d0,$d0), [$s0];
	st_v2_spill_u64	($d0,$d1), [$s0];
	st_v3_spill_u64	($d0,$d1,$d2), [$s0];
	st_v4_spill_u64	($d0,$d1,$d2,$d3), [$s0];
	st_spill_u64	18446744073709551615, [$s0];
	st_spill_u64	WAVESIZE, [$s0];
	st_spill_u64	$d0, [0];
	st_spill_align(2)_u64	$d0, [$s0];
	st_spill_align(4)_u64	$d0, [$s0];
	st_spill_align(8)_u64	$d0, [$s0];
	st_spill_align(16)_u64	$d0, [$s0];
	st_spill_align(32)_u64	$d0, [$s0];
	st_spill_align(64)_u64	$d0, [$s0];
	st_spill_align(128)_u64	$d0, [$s0];
	st_spill_equiv(1)_u64	$d0, [$s0];
	st_spill_equiv(2)_u64	$d0, [$s0];
	st_spill_equiv(255)_u64	$d0, [$s0];
	// 
	// Next sample
	// 
	st_arg_u64	$d0, [$s0];
	// 
	st_v2_arg_u64	($d0,$d0), [$s0];
	st_v3_arg_u64	($d0,$d0,$d0), [$s0];
	st_v4_arg_u64	($d0,$d0,$d0,$d0), [$s0];
	st_v2_arg_u64	($d0,$d1), [$s0];
	st_v3_arg_u64	($d0,$d1,$d2), [$s0];
	st_v4_arg_u64	($d0,$d1,$d2,$d3), [$s0];
	st_arg_u64	18446744073709551615, [$s0];
	st_arg_u64	WAVESIZE, [$s0];
	st_arg_u64	$d0, [0];
	st_arg_align(2)_u64	$d0, [$s0];
	st_arg_align(4)_u64	$d0, [$s0];
	st_arg_align(8)_u64	$d0, [$s0];
	st_arg_align(16)_u64	$d0, [$s0];
	st_arg_align(32)_u64	$d0, [$s0];
	st_arg_align(64)_u64	$d0, [$s0];
	st_arg_align(128)_u64	$d0, [$s0];
	st_arg_equiv(1)_u64	$d0, [$s0];
	st_arg_equiv(2)_u64	$d0, [$s0];
	st_arg_equiv(255)_u64	$d0, [$s0];
	// 
	// Next sample
	// 
	st_s8	$s0, [$s0];
	// 
	st_v2_s8	($s0,$s0), [$s0];
	st_v3_s8	($s0,$s0,$s0), [$s0];
	st_v4_s8	($s0,$s0,$s0,$s0), [$s0];
	st_v2_s8	($s0,$s1), [$s0];
	st_v3_s8	($s0,$s1,$s2), [$s0];
	st_v4_s8	($s0,$s1,$s2,$s3), [$s0];
	st_s8	1, [$s0];
	st_s8	-1, [$s0];
	st_s8	WAVESIZE, [$s0];
	st_s8	$s0, [0];
	st_align(2)_s8	$s0, [$s0];
	st_align(4)_s8	$s0, [$s0];
	st_align(8)_s8	$s0, [$s0];
	st_align(16)_s8	$s0, [$s0];
	st_align(32)_s8	$s0, [$s0];
	st_align(64)_s8	$s0, [$s0];
	st_align(128)_s8	$s0, [$s0];
	st_equiv(1)_s8	$s0, [$s0];
	st_equiv(2)_s8	$s0, [$s0];
	st_equiv(255)_s8	$s0, [$s0];
	// 
	// Next sample
	// 
	st_global_s8	$s0, [&GlobalVar];
	// 
	st_v2_global_s8	($s0,$s0), [&GlobalVar];
	st_v3_global_s8	($s0,$s0,$s0), [&GlobalVar];
	st_v4_global_s8	($s0,$s0,$s0,$s0), [&GlobalVar];
	st_v2_global_s8	($s0,$s1), [&GlobalVar];
	st_v3_global_s8	($s0,$s1,$s2), [&GlobalVar];
	st_v4_global_s8	($s0,$s1,$s2,$s3), [&GlobalVar];
	st_global_s8	1, [&GlobalVar];
	st_global_s8	-1, [&GlobalVar];
	st_global_s8	WAVESIZE, [&GlobalVar];
	st_global_s8	$s0, [$s0];
	st_global_s8	$s0, [0];
	st_global_align(2)_s8	$s0, [&GlobalVar];
	st_global_align(4)_s8	$s0, [&GlobalVar];
	st_global_align(8)_s8	$s0, [&GlobalVar];
	st_global_align(16)_s8	$s0, [&GlobalVar];
	st_global_align(32)_s8	$s0, [&GlobalVar];
	st_global_align(64)_s8	$s0, [&GlobalVar];
	st_global_align(128)_s8	$s0, [&GlobalVar];
	st_global_equiv(1)_s8	$s0, [&GlobalVar];
	st_global_equiv(2)_s8	$s0, [&GlobalVar];
	st_global_equiv(255)_s8	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	st_group_s8	$s0, [&GroupVar];
	// 
	st_v2_group_s8	($s0,$s0), [&GroupVar];
	st_v3_group_s8	($s0,$s0,$s0), [&GroupVar];
	st_v4_group_s8	($s0,$s0,$s0,$s0), [&GroupVar];
	st_v2_group_s8	($s0,$s1), [&GroupVar];
	st_v3_group_s8	($s0,$s1,$s2), [&GroupVar];
	st_v4_group_s8	($s0,$s1,$s2,$s3), [&GroupVar];
	st_group_s8	1, [&GroupVar];
	st_group_s8	-1, [&GroupVar];
	st_group_s8	WAVESIZE, [&GroupVar];
	st_group_s8	$s0, [$s0];
	st_group_s8	$s0, [0];
	st_group_align(2)_s8	$s0, [&GroupVar];
	st_group_align(4)_s8	$s0, [&GroupVar];
	st_group_align(8)_s8	$s0, [&GroupVar];
	st_group_align(16)_s8	$s0, [&GroupVar];
	st_group_align(32)_s8	$s0, [&GroupVar];
	st_group_align(64)_s8	$s0, [&GroupVar];
	st_group_align(128)_s8	$s0, [&GroupVar];
	st_group_equiv(1)_s8	$s0, [&GroupVar];
	st_group_equiv(2)_s8	$s0, [&GroupVar];
	st_group_equiv(255)_s8	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	st_private_s8	$s0, [&PrivateVar];
	// 
	st_v2_private_s8	($s0,$s0), [&PrivateVar];
	st_v3_private_s8	($s0,$s0,$s0), [&PrivateVar];
	st_v4_private_s8	($s0,$s0,$s0,$s0), [&PrivateVar];
	st_v2_private_s8	($s0,$s1), [&PrivateVar];
	st_v3_private_s8	($s0,$s1,$s2), [&PrivateVar];
	st_v4_private_s8	($s0,$s1,$s2,$s3), [&PrivateVar];
	st_private_s8	1, [&PrivateVar];
	st_private_s8	-1, [&PrivateVar];
	st_private_s8	WAVESIZE, [&PrivateVar];
	st_private_s8	$s0, [$s0];
	st_private_s8	$s0, [0];
	st_private_align(2)_s8	$s0, [&PrivateVar];
	st_private_align(4)_s8	$s0, [&PrivateVar];
	st_private_align(8)_s8	$s0, [&PrivateVar];
	st_private_align(16)_s8	$s0, [&PrivateVar];
	st_private_align(32)_s8	$s0, [&PrivateVar];
	st_private_align(64)_s8	$s0, [&PrivateVar];
	st_private_align(128)_s8	$s0, [&PrivateVar];
	st_private_equiv(1)_s8	$s0, [&PrivateVar];
	st_private_equiv(2)_s8	$s0, [&PrivateVar];
	st_private_equiv(255)_s8	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	st_spill_s8	$s0, [$s0];
	// 
	st_v2_spill_s8	($s0,$s0), [$s0];
	st_v3_spill_s8	($s0,$s0,$s0), [$s0];
	st_v4_spill_s8	($s0,$s0,$s0,$s0), [$s0];
	st_v2_spill_s8	($s0,$s1), [$s0];
	st_v3_spill_s8	($s0,$s1,$s2), [$s0];
	st_v4_spill_s8	($s0,$s1,$s2,$s3), [$s0];
	st_spill_s8	1, [$s0];
	st_spill_s8	-1, [$s0];
	st_spill_s8	WAVESIZE, [$s0];
	st_spill_s8	$s0, [0];
	st_spill_align(2)_s8	$s0, [$s0];
	st_spill_align(4)_s8	$s0, [$s0];
	st_spill_align(8)_s8	$s0, [$s0];
	st_spill_align(16)_s8	$s0, [$s0];
	st_spill_align(32)_s8	$s0, [$s0];
	st_spill_align(64)_s8	$s0, [$s0];
	st_spill_align(128)_s8	$s0, [$s0];
	st_spill_equiv(1)_s8	$s0, [$s0];
	st_spill_equiv(2)_s8	$s0, [$s0];
	st_spill_equiv(255)_s8	$s0, [$s0];
	// 
	// Next sample
	// 
	st_arg_s8	$s0, [$s0];
	// 
	st_v2_arg_s8	($s0,$s0), [$s0];
	st_v3_arg_s8	($s0,$s0,$s0), [$s0];
	st_v4_arg_s8	($s0,$s0,$s0,$s0), [$s0];
	st_v2_arg_s8	($s0,$s1), [$s0];
	st_v3_arg_s8	($s0,$s1,$s2), [$s0];
	st_v4_arg_s8	($s0,$s1,$s2,$s3), [$s0];
	st_arg_s8	1, [$s0];
	st_arg_s8	-1, [$s0];
	st_arg_s8	WAVESIZE, [$s0];
	st_arg_s8	$s0, [0];
	st_arg_align(2)_s8	$s0, [$s0];
	st_arg_align(4)_s8	$s0, [$s0];
	st_arg_align(8)_s8	$s0, [$s0];
	st_arg_align(16)_s8	$s0, [$s0];
	st_arg_align(32)_s8	$s0, [$s0];
	st_arg_align(64)_s8	$s0, [$s0];
	st_arg_align(128)_s8	$s0, [$s0];
	st_arg_equiv(1)_s8	$s0, [$s0];
	st_arg_equiv(2)_s8	$s0, [$s0];
	st_arg_equiv(255)_s8	$s0, [$s0];
	// 
	// Next sample
	// 
	st_s16	$s0, [$s0];
	// 
	st_v2_s16	($s0,$s0), [$s0];
	st_v3_s16	($s0,$s0,$s0), [$s0];
	st_v4_s16	($s0,$s0,$s0,$s0), [$s0];
	st_v2_s16	($s0,$s1), [$s0];
	st_v3_s16	($s0,$s1,$s2), [$s0];
	st_v4_s16	($s0,$s1,$s2,$s3), [$s0];
	st_s16	-1, [$s0];
	st_s16	WAVESIZE, [$s0];
	st_s16	$s0, [0];
	st_align(2)_s16	$s0, [$s0];
	st_align(4)_s16	$s0, [$s0];
	st_align(8)_s16	$s0, [$s0];
	st_align(16)_s16	$s0, [$s0];
	st_align(32)_s16	$s0, [$s0];
	st_align(64)_s16	$s0, [$s0];
	st_align(128)_s16	$s0, [$s0];
	st_equiv(1)_s16	$s0, [$s0];
	st_equiv(2)_s16	$s0, [$s0];
	st_equiv(255)_s16	$s0, [$s0];
	// 
	// Next sample
	// 
	st_global_s16	$s0, [&GlobalVar];
	// 
	st_v2_global_s16	($s0,$s0), [&GlobalVar];
	st_v3_global_s16	($s0,$s0,$s0), [&GlobalVar];
	st_v4_global_s16	($s0,$s0,$s0,$s0), [&GlobalVar];
	st_v2_global_s16	($s0,$s1), [&GlobalVar];
	st_v3_global_s16	($s0,$s1,$s2), [&GlobalVar];
	st_v4_global_s16	($s0,$s1,$s2,$s3), [&GlobalVar];
	st_global_s16	-1, [&GlobalVar];
	st_global_s16	WAVESIZE, [&GlobalVar];
	st_global_s16	$s0, [$s0];
	st_global_s16	$s0, [0];
	st_global_align(2)_s16	$s0, [&GlobalVar];
	st_global_align(4)_s16	$s0, [&GlobalVar];
	st_global_align(8)_s16	$s0, [&GlobalVar];
	st_global_align(16)_s16	$s0, [&GlobalVar];
	st_global_align(32)_s16	$s0, [&GlobalVar];
	st_global_align(64)_s16	$s0, [&GlobalVar];
	st_global_align(128)_s16	$s0, [&GlobalVar];
	st_global_equiv(1)_s16	$s0, [&GlobalVar];
	st_global_equiv(2)_s16	$s0, [&GlobalVar];
	st_global_equiv(255)_s16	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	st_group_s16	$s0, [&GroupVar];
	// 
	st_v2_group_s16	($s0,$s0), [&GroupVar];
	st_v3_group_s16	($s0,$s0,$s0), [&GroupVar];
	st_v4_group_s16	($s0,$s0,$s0,$s0), [&GroupVar];
	st_v2_group_s16	($s0,$s1), [&GroupVar];
	st_v3_group_s16	($s0,$s1,$s2), [&GroupVar];
	st_v4_group_s16	($s0,$s1,$s2,$s3), [&GroupVar];
	st_group_s16	-1, [&GroupVar];
	st_group_s16	WAVESIZE, [&GroupVar];
	st_group_s16	$s0, [$s0];
	st_group_s16	$s0, [0];
	st_group_align(2)_s16	$s0, [&GroupVar];
	st_group_align(4)_s16	$s0, [&GroupVar];
	st_group_align(8)_s16	$s0, [&GroupVar];
	st_group_align(16)_s16	$s0, [&GroupVar];
	st_group_align(32)_s16	$s0, [&GroupVar];
	st_group_align(64)_s16	$s0, [&GroupVar];
	st_group_align(128)_s16	$s0, [&GroupVar];
	st_group_equiv(1)_s16	$s0, [&GroupVar];
	st_group_equiv(2)_s16	$s0, [&GroupVar];
	st_group_equiv(255)_s16	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	st_private_s16	$s0, [&PrivateVar];
	// 
	st_v2_private_s16	($s0,$s0), [&PrivateVar];
	st_v3_private_s16	($s0,$s0,$s0), [&PrivateVar];
	st_v4_private_s16	($s0,$s0,$s0,$s0), [&PrivateVar];
	st_v2_private_s16	($s0,$s1), [&PrivateVar];
	st_v3_private_s16	($s0,$s1,$s2), [&PrivateVar];
	st_v4_private_s16	($s0,$s1,$s2,$s3), [&PrivateVar];
	st_private_s16	-1, [&PrivateVar];
	st_private_s16	WAVESIZE, [&PrivateVar];
	st_private_s16	$s0, [$s0];
	st_private_s16	$s0, [0];
	st_private_align(2)_s16	$s0, [&PrivateVar];
	st_private_align(4)_s16	$s0, [&PrivateVar];
	st_private_align(8)_s16	$s0, [&PrivateVar];
	st_private_align(16)_s16	$s0, [&PrivateVar];
	st_private_align(32)_s16	$s0, [&PrivateVar];
	st_private_align(64)_s16	$s0, [&PrivateVar];
	st_private_align(128)_s16	$s0, [&PrivateVar];
	st_private_equiv(1)_s16	$s0, [&PrivateVar];
	st_private_equiv(2)_s16	$s0, [&PrivateVar];
	st_private_equiv(255)_s16	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	st_spill_s16	$s0, [$s0];
	// 
	st_v2_spill_s16	($s0,$s0), [$s0];
	st_v3_spill_s16	($s0,$s0,$s0), [$s0];
	st_v4_spill_s16	($s0,$s0,$s0,$s0), [$s0];
	st_v2_spill_s16	($s0,$s1), [$s0];
	st_v3_spill_s16	($s0,$s1,$s2), [$s0];
	st_v4_spill_s16	($s0,$s1,$s2,$s3), [$s0];
	st_spill_s16	-1, [$s0];
	st_spill_s16	WAVESIZE, [$s0];
	st_spill_s16	$s0, [0];
	st_spill_align(2)_s16	$s0, [$s0];
	st_spill_align(4)_s16	$s0, [$s0];
	st_spill_align(8)_s16	$s0, [$s0];
	st_spill_align(16)_s16	$s0, [$s0];
	st_spill_align(32)_s16	$s0, [$s0];
	st_spill_align(64)_s16	$s0, [$s0];
	st_spill_align(128)_s16	$s0, [$s0];
	st_spill_equiv(1)_s16	$s0, [$s0];
	st_spill_equiv(2)_s16	$s0, [$s0];
	st_spill_equiv(255)_s16	$s0, [$s0];
	// 
	// Next sample
	// 
	st_arg_s16	$s0, [$s0];
	// 
	st_v2_arg_s16	($s0,$s0), [$s0];
	st_v3_arg_s16	($s0,$s0,$s0), [$s0];
	st_v4_arg_s16	($s0,$s0,$s0,$s0), [$s0];
	st_v2_arg_s16	($s0,$s1), [$s0];
	st_v3_arg_s16	($s0,$s1,$s2), [$s0];
	st_v4_arg_s16	($s0,$s1,$s2,$s3), [$s0];
	st_arg_s16	-1, [$s0];
	st_arg_s16	WAVESIZE, [$s0];
	st_arg_s16	$s0, [0];
	st_arg_align(2)_s16	$s0, [$s0];
	st_arg_align(4)_s16	$s0, [$s0];
	st_arg_align(8)_s16	$s0, [$s0];
	st_arg_align(16)_s16	$s0, [$s0];
	st_arg_align(32)_s16	$s0, [$s0];
	st_arg_align(64)_s16	$s0, [$s0];
	st_arg_align(128)_s16	$s0, [$s0];
	st_arg_equiv(1)_s16	$s0, [$s0];
	st_arg_equiv(2)_s16	$s0, [$s0];
	st_arg_equiv(255)_s16	$s0, [$s0];
	// 
	// Next sample
	// 
	st_s32	$s0, [$s0];
	// 
	st_v2_s32	($s0,$s0), [$s0];
	st_v3_s32	($s0,$s0,$s0), [$s0];
	st_v4_s32	($s0,$s0,$s0,$s0), [$s0];
	st_v2_s32	($s0,$s1), [$s0];
	st_v3_s32	($s0,$s1,$s2), [$s0];
	st_v4_s32	($s0,$s1,$s2,$s3), [$s0];
	st_s32	-1, [$s0];
	st_s32	WAVESIZE, [$s0];
	st_s32	$s0, [0];
	st_align(2)_s32	$s0, [$s0];
	st_align(4)_s32	$s0, [$s0];
	st_align(8)_s32	$s0, [$s0];
	st_align(16)_s32	$s0, [$s0];
	st_align(32)_s32	$s0, [$s0];
	st_align(64)_s32	$s0, [$s0];
	st_align(128)_s32	$s0, [$s0];
	st_equiv(1)_s32	$s0, [$s0];
	st_equiv(2)_s32	$s0, [$s0];
	st_equiv(255)_s32	$s0, [$s0];
	// 
	// Next sample
	// 
	st_global_s32	$s0, [&GlobalVar];
	// 
	st_v2_global_s32	($s0,$s0), [&GlobalVar];
	st_v3_global_s32	($s0,$s0,$s0), [&GlobalVar];
	st_v4_global_s32	($s0,$s0,$s0,$s0), [&GlobalVar];
	st_v2_global_s32	($s0,$s1), [&GlobalVar];
	st_v3_global_s32	($s0,$s1,$s2), [&GlobalVar];
	st_v4_global_s32	($s0,$s1,$s2,$s3), [&GlobalVar];
	st_global_s32	-1, [&GlobalVar];
	st_global_s32	WAVESIZE, [&GlobalVar];
	st_global_s32	$s0, [$s0];
	st_global_s32	$s0, [0];
	st_global_align(2)_s32	$s0, [&GlobalVar];
	st_global_align(4)_s32	$s0, [&GlobalVar];
	st_global_align(8)_s32	$s0, [&GlobalVar];
	st_global_align(16)_s32	$s0, [&GlobalVar];
	st_global_align(32)_s32	$s0, [&GlobalVar];
	st_global_align(64)_s32	$s0, [&GlobalVar];
	st_global_align(128)_s32	$s0, [&GlobalVar];
	st_global_equiv(1)_s32	$s0, [&GlobalVar];
	st_global_equiv(2)_s32	$s0, [&GlobalVar];
	st_global_equiv(255)_s32	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	st_group_s32	$s0, [&GroupVar];
	// 
	st_v2_group_s32	($s0,$s0), [&GroupVar];
	st_v3_group_s32	($s0,$s0,$s0), [&GroupVar];
	st_v4_group_s32	($s0,$s0,$s0,$s0), [&GroupVar];
	st_v2_group_s32	($s0,$s1), [&GroupVar];
	st_v3_group_s32	($s0,$s1,$s2), [&GroupVar];
	st_v4_group_s32	($s0,$s1,$s2,$s3), [&GroupVar];
	st_group_s32	-1, [&GroupVar];
	st_group_s32	WAVESIZE, [&GroupVar];
	st_group_s32	$s0, [$s0];
	st_group_s32	$s0, [0];
	st_group_align(2)_s32	$s0, [&GroupVar];
	st_group_align(4)_s32	$s0, [&GroupVar];
	st_group_align(8)_s32	$s0, [&GroupVar];
	st_group_align(16)_s32	$s0, [&GroupVar];
	st_group_align(32)_s32	$s0, [&GroupVar];
	st_group_align(64)_s32	$s0, [&GroupVar];
	st_group_align(128)_s32	$s0, [&GroupVar];
	st_group_equiv(1)_s32	$s0, [&GroupVar];
	st_group_equiv(2)_s32	$s0, [&GroupVar];
	st_group_equiv(255)_s32	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	st_private_s32	$s0, [&PrivateVar];
	// 
	st_v2_private_s32	($s0,$s0), [&PrivateVar];
	st_v3_private_s32	($s0,$s0,$s0), [&PrivateVar];
	st_v4_private_s32	($s0,$s0,$s0,$s0), [&PrivateVar];
	st_v2_private_s32	($s0,$s1), [&PrivateVar];
	st_v3_private_s32	($s0,$s1,$s2), [&PrivateVar];
	st_v4_private_s32	($s0,$s1,$s2,$s3), [&PrivateVar];
	st_private_s32	-1, [&PrivateVar];
	st_private_s32	WAVESIZE, [&PrivateVar];
	st_private_s32	$s0, [$s0];
	st_private_s32	$s0, [0];
	st_private_align(2)_s32	$s0, [&PrivateVar];
	st_private_align(4)_s32	$s0, [&PrivateVar];
	st_private_align(8)_s32	$s0, [&PrivateVar];
	st_private_align(16)_s32	$s0, [&PrivateVar];
	st_private_align(32)_s32	$s0, [&PrivateVar];
	st_private_align(64)_s32	$s0, [&PrivateVar];
	st_private_align(128)_s32	$s0, [&PrivateVar];
	st_private_equiv(1)_s32	$s0, [&PrivateVar];
	st_private_equiv(2)_s32	$s0, [&PrivateVar];
	st_private_equiv(255)_s32	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	st_spill_s32	$s0, [$s0];
	// 
	st_v2_spill_s32	($s0,$s0), [$s0];
	st_v3_spill_s32	($s0,$s0,$s0), [$s0];
	st_v4_spill_s32	($s0,$s0,$s0,$s0), [$s0];
	st_v2_spill_s32	($s0,$s1), [$s0];
	st_v3_spill_s32	($s0,$s1,$s2), [$s0];
	st_v4_spill_s32	($s0,$s1,$s2,$s3), [$s0];
	st_spill_s32	-1, [$s0];
	st_spill_s32	WAVESIZE, [$s0];
	st_spill_s32	$s0, [0];
	st_spill_align(2)_s32	$s0, [$s0];
	st_spill_align(4)_s32	$s0, [$s0];
	st_spill_align(8)_s32	$s0, [$s0];
	st_spill_align(16)_s32	$s0, [$s0];
	st_spill_align(32)_s32	$s0, [$s0];
	st_spill_align(64)_s32	$s0, [$s0];
	st_spill_align(128)_s32	$s0, [$s0];
	st_spill_equiv(1)_s32	$s0, [$s0];
	st_spill_equiv(2)_s32	$s0, [$s0];
	st_spill_equiv(255)_s32	$s0, [$s0];
	// 
	// Next sample
	// 
	st_arg_s32	$s0, [$s0];
	// 
	st_v2_arg_s32	($s0,$s0), [$s0];
	st_v3_arg_s32	($s0,$s0,$s0), [$s0];
	st_v4_arg_s32	($s0,$s0,$s0,$s0), [$s0];
	st_v2_arg_s32	($s0,$s1), [$s0];
	st_v3_arg_s32	($s0,$s1,$s2), [$s0];
	st_v4_arg_s32	($s0,$s1,$s2,$s3), [$s0];
	st_arg_s32	-1, [$s0];
	st_arg_s32	WAVESIZE, [$s0];
	st_arg_s32	$s0, [0];
	st_arg_align(2)_s32	$s0, [$s0];
	st_arg_align(4)_s32	$s0, [$s0];
	st_arg_align(8)_s32	$s0, [$s0];
	st_arg_align(16)_s32	$s0, [$s0];
	st_arg_align(32)_s32	$s0, [$s0];
	st_arg_align(64)_s32	$s0, [$s0];
	st_arg_align(128)_s32	$s0, [$s0];
	st_arg_equiv(1)_s32	$s0, [$s0];
	st_arg_equiv(2)_s32	$s0, [$s0];
	st_arg_equiv(255)_s32	$s0, [$s0];
	// 
	// Next sample
	// 
	st_s64	$d0, [$s0];
	// 
	st_v2_s64	($d0,$d0), [$s0];
	st_v3_s64	($d0,$d0,$d0), [$s0];
	st_v4_s64	($d0,$d0,$d0,$d0), [$s0];
	st_v2_s64	($d0,$d1), [$s0];
	st_v3_s64	($d0,$d1,$d2), [$s0];
	st_v4_s64	($d0,$d1,$d2,$d3), [$s0];
	st_s64	-1, [$s0];
	st_s64	WAVESIZE, [$s0];
	st_s64	$d0, [0];
	st_align(2)_s64	$d0, [$s0];
	st_align(4)_s64	$d0, [$s0];
	st_align(8)_s64	$d0, [$s0];
	st_align(16)_s64	$d0, [$s0];
	st_align(32)_s64	$d0, [$s0];
	st_align(64)_s64	$d0, [$s0];
	st_align(128)_s64	$d0, [$s0];
	st_equiv(1)_s64	$d0, [$s0];
	st_equiv(2)_s64	$d0, [$s0];
	st_equiv(255)_s64	$d0, [$s0];
	// 
	// Next sample
	// 
	st_global_s64	$d0, [&GlobalVar];
	// 
	st_v2_global_s64	($d0,$d0), [&GlobalVar];
	st_v3_global_s64	($d0,$d0,$d0), [&GlobalVar];
	st_v4_global_s64	($d0,$d0,$d0,$d0), [&GlobalVar];
	st_v2_global_s64	($d0,$d1), [&GlobalVar];
	st_v3_global_s64	($d0,$d1,$d2), [&GlobalVar];
	st_v4_global_s64	($d0,$d1,$d2,$d3), [&GlobalVar];
	st_global_s64	-1, [&GlobalVar];
	st_global_s64	WAVESIZE, [&GlobalVar];
	st_global_s64	$d0, [$s0];
	st_global_s64	$d0, [0];
	st_global_align(2)_s64	$d0, [&GlobalVar];
	st_global_align(4)_s64	$d0, [&GlobalVar];
	st_global_align(8)_s64	$d0, [&GlobalVar];
	st_global_align(16)_s64	$d0, [&GlobalVar];
	st_global_align(32)_s64	$d0, [&GlobalVar];
	st_global_align(64)_s64	$d0, [&GlobalVar];
	st_global_align(128)_s64	$d0, [&GlobalVar];
	st_global_equiv(1)_s64	$d0, [&GlobalVar];
	st_global_equiv(2)_s64	$d0, [&GlobalVar];
	st_global_equiv(255)_s64	$d0, [&GlobalVar];
	// 
	// Next sample
	// 
	st_group_s64	$d0, [&GroupVar];
	// 
	st_v2_group_s64	($d0,$d0), [&GroupVar];
	st_v3_group_s64	($d0,$d0,$d0), [&GroupVar];
	st_v4_group_s64	($d0,$d0,$d0,$d0), [&GroupVar];
	st_v2_group_s64	($d0,$d1), [&GroupVar];
	st_v3_group_s64	($d0,$d1,$d2), [&GroupVar];
	st_v4_group_s64	($d0,$d1,$d2,$d3), [&GroupVar];
	st_group_s64	-1, [&GroupVar];
	st_group_s64	WAVESIZE, [&GroupVar];
	st_group_s64	$d0, [$s0];
	st_group_s64	$d0, [0];
	st_group_align(2)_s64	$d0, [&GroupVar];
	st_group_align(4)_s64	$d0, [&GroupVar];
	st_group_align(8)_s64	$d0, [&GroupVar];
	st_group_align(16)_s64	$d0, [&GroupVar];
	st_group_align(32)_s64	$d0, [&GroupVar];
	st_group_align(64)_s64	$d0, [&GroupVar];
	st_group_align(128)_s64	$d0, [&GroupVar];
	st_group_equiv(1)_s64	$d0, [&GroupVar];
	st_group_equiv(2)_s64	$d0, [&GroupVar];
	st_group_equiv(255)_s64	$d0, [&GroupVar];
	// 
	// Next sample
	// 
	st_private_s64	$d0, [&PrivateVar];
	// 
	st_v2_private_s64	($d0,$d0), [&PrivateVar];
	st_v3_private_s64	($d0,$d0,$d0), [&PrivateVar];
	st_v4_private_s64	($d0,$d0,$d0,$d0), [&PrivateVar];
	st_v2_private_s64	($d0,$d1), [&PrivateVar];
	st_v3_private_s64	($d0,$d1,$d2), [&PrivateVar];
	st_v4_private_s64	($d0,$d1,$d2,$d3), [&PrivateVar];
	st_private_s64	-1, [&PrivateVar];
	st_private_s64	WAVESIZE, [&PrivateVar];
	st_private_s64	$d0, [$s0];
	st_private_s64	$d0, [0];
	st_private_align(2)_s64	$d0, [&PrivateVar];
	st_private_align(4)_s64	$d0, [&PrivateVar];
	st_private_align(8)_s64	$d0, [&PrivateVar];
	st_private_align(16)_s64	$d0, [&PrivateVar];
	st_private_align(32)_s64	$d0, [&PrivateVar];
	st_private_align(64)_s64	$d0, [&PrivateVar];
	st_private_align(128)_s64	$d0, [&PrivateVar];
	st_private_equiv(1)_s64	$d0, [&PrivateVar];
	st_private_equiv(2)_s64	$d0, [&PrivateVar];
	st_private_equiv(255)_s64	$d0, [&PrivateVar];
	// 
	// Next sample
	// 
	st_spill_s64	$d0, [$s0];
	// 
	st_v2_spill_s64	($d0,$d0), [$s0];
	st_v3_spill_s64	($d0,$d0,$d0), [$s0];
	st_v4_spill_s64	($d0,$d0,$d0,$d0), [$s0];
	st_v2_spill_s64	($d0,$d1), [$s0];
	st_v3_spill_s64	($d0,$d1,$d2), [$s0];
	st_v4_spill_s64	($d0,$d1,$d2,$d3), [$s0];
	st_spill_s64	-1, [$s0];
	st_spill_s64	WAVESIZE, [$s0];
	st_spill_s64	$d0, [0];
	st_spill_align(2)_s64	$d0, [$s0];
	st_spill_align(4)_s64	$d0, [$s0];
	st_spill_align(8)_s64	$d0, [$s0];
	st_spill_align(16)_s64	$d0, [$s0];
	st_spill_align(32)_s64	$d0, [$s0];
	st_spill_align(64)_s64	$d0, [$s0];
	st_spill_align(128)_s64	$d0, [$s0];
	st_spill_equiv(1)_s64	$d0, [$s0];
	st_spill_equiv(2)_s64	$d0, [$s0];
	st_spill_equiv(255)_s64	$d0, [$s0];
	// 
	// Next sample
	// 
	st_arg_s64	$d0, [$s0];
	// 
	st_v2_arg_s64	($d0,$d0), [$s0];
	st_v3_arg_s64	($d0,$d0,$d0), [$s0];
	st_v4_arg_s64	($d0,$d0,$d0,$d0), [$s0];
	st_v2_arg_s64	($d0,$d1), [$s0];
	st_v3_arg_s64	($d0,$d1,$d2), [$s0];
	st_v4_arg_s64	($d0,$d1,$d2,$d3), [$s0];
	st_arg_s64	-1, [$s0];
	st_arg_s64	WAVESIZE, [$s0];
	st_arg_s64	$d0, [0];
	st_arg_align(2)_s64	$d0, [$s0];
	st_arg_align(4)_s64	$d0, [$s0];
	st_arg_align(8)_s64	$d0, [$s0];
	st_arg_align(16)_s64	$d0, [$s0];
	st_arg_align(32)_s64	$d0, [$s0];
	st_arg_align(64)_s64	$d0, [$s0];
	st_arg_align(128)_s64	$d0, [$s0];
	st_arg_equiv(1)_s64	$d0, [$s0];
	st_arg_equiv(2)_s64	$d0, [$s0];
	st_arg_equiv(255)_s64	$d0, [$s0];
	// 
	// Next sample
	// 
	st_f16	$s0, [$s0];
	// 
	st_v2_f16	($s0,$s0), [$s0];
	st_v3_f16	($s0,$s0,$s0), [$s0];
	st_v4_f16	($s0,$s0,$s0,$s0), [$s0];
	st_v2_f16	($s0,$s1), [$s0];
	st_v3_f16	($s0,$s1,$s2), [$s0];
	st_v4_f16	($s0,$s1,$s2,$s3), [$s0];
	st_f16	0Hffff, [$s0];
	st_f16	$s0, [0];
	st_align(2)_f16	$s0, [$s0];
	st_align(4)_f16	$s0, [$s0];
	st_align(8)_f16	$s0, [$s0];
	st_align(16)_f16	$s0, [$s0];
	st_align(32)_f16	$s0, [$s0];
	st_align(64)_f16	$s0, [$s0];
	st_align(128)_f16	$s0, [$s0];
	st_equiv(1)_f16	$s0, [$s0];
	st_equiv(2)_f16	$s0, [$s0];
	st_equiv(255)_f16	$s0, [$s0];
	// 
	// Next sample
	// 
	st_global_f16	$s0, [&GlobalVar];
	// 
	st_v2_global_f16	($s0,$s0), [&GlobalVar];
	st_v3_global_f16	($s0,$s0,$s0), [&GlobalVar];
	st_v4_global_f16	($s0,$s0,$s0,$s0), [&GlobalVar];
	st_v2_global_f16	($s0,$s1), [&GlobalVar];
	st_v3_global_f16	($s0,$s1,$s2), [&GlobalVar];
	st_v4_global_f16	($s0,$s1,$s2,$s3), [&GlobalVar];
	st_global_f16	0Hffff, [&GlobalVar];
	st_global_f16	$s0, [$s0];
	st_global_f16	$s0, [0];
	st_global_align(2)_f16	$s0, [&GlobalVar];
	st_global_align(4)_f16	$s0, [&GlobalVar];
	st_global_align(8)_f16	$s0, [&GlobalVar];
	st_global_align(16)_f16	$s0, [&GlobalVar];
	st_global_align(32)_f16	$s0, [&GlobalVar];
	st_global_align(64)_f16	$s0, [&GlobalVar];
	st_global_align(128)_f16	$s0, [&GlobalVar];
	st_global_equiv(1)_f16	$s0, [&GlobalVar];
	st_global_equiv(2)_f16	$s0, [&GlobalVar];
	st_global_equiv(255)_f16	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	st_group_f16	$s0, [&GroupVar];
	// 
	st_v2_group_f16	($s0,$s0), [&GroupVar];
	st_v3_group_f16	($s0,$s0,$s0), [&GroupVar];
	st_v4_group_f16	($s0,$s0,$s0,$s0), [&GroupVar];
	st_v2_group_f16	($s0,$s1), [&GroupVar];
	st_v3_group_f16	($s0,$s1,$s2), [&GroupVar];
	st_v4_group_f16	($s0,$s1,$s2,$s3), [&GroupVar];
	st_group_f16	0Hffff, [&GroupVar];
	st_group_f16	$s0, [$s0];
	st_group_f16	$s0, [0];
	st_group_align(2)_f16	$s0, [&GroupVar];
	st_group_align(4)_f16	$s0, [&GroupVar];
	st_group_align(8)_f16	$s0, [&GroupVar];
	st_group_align(16)_f16	$s0, [&GroupVar];
	st_group_align(32)_f16	$s0, [&GroupVar];
	st_group_align(64)_f16	$s0, [&GroupVar];
	st_group_align(128)_f16	$s0, [&GroupVar];
	st_group_equiv(1)_f16	$s0, [&GroupVar];
	st_group_equiv(2)_f16	$s0, [&GroupVar];
	st_group_equiv(255)_f16	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	st_private_f16	$s0, [&PrivateVar];
	// 
	st_v2_private_f16	($s0,$s0), [&PrivateVar];
	st_v3_private_f16	($s0,$s0,$s0), [&PrivateVar];
	st_v4_private_f16	($s0,$s0,$s0,$s0), [&PrivateVar];
	st_v2_private_f16	($s0,$s1), [&PrivateVar];
	st_v3_private_f16	($s0,$s1,$s2), [&PrivateVar];
	st_v4_private_f16	($s0,$s1,$s2,$s3), [&PrivateVar];
	st_private_f16	0Hffff, [&PrivateVar];
	st_private_f16	$s0, [$s0];
	st_private_f16	$s0, [0];
	st_private_align(2)_f16	$s0, [&PrivateVar];
	st_private_align(4)_f16	$s0, [&PrivateVar];
	st_private_align(8)_f16	$s0, [&PrivateVar];
	st_private_align(16)_f16	$s0, [&PrivateVar];
	st_private_align(32)_f16	$s0, [&PrivateVar];
	st_private_align(64)_f16	$s0, [&PrivateVar];
	st_private_align(128)_f16	$s0, [&PrivateVar];
	st_private_equiv(1)_f16	$s0, [&PrivateVar];
	st_private_equiv(2)_f16	$s0, [&PrivateVar];
	st_private_equiv(255)_f16	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	st_spill_f16	$s0, [$s0];
	// 
	st_v2_spill_f16	($s0,$s0), [$s0];
	st_v3_spill_f16	($s0,$s0,$s0), [$s0];
	st_v4_spill_f16	($s0,$s0,$s0,$s0), [$s0];
	st_v2_spill_f16	($s0,$s1), [$s0];
	st_v3_spill_f16	($s0,$s1,$s2), [$s0];
	st_v4_spill_f16	($s0,$s1,$s2,$s3), [$s0];
	st_spill_f16	0Hffff, [$s0];
	st_spill_f16	$s0, [0];
	st_spill_align(2)_f16	$s0, [$s0];
	st_spill_align(4)_f16	$s0, [$s0];
	st_spill_align(8)_f16	$s0, [$s0];
	st_spill_align(16)_f16	$s0, [$s0];
	st_spill_align(32)_f16	$s0, [$s0];
	st_spill_align(64)_f16	$s0, [$s0];
	st_spill_align(128)_f16	$s0, [$s0];
	st_spill_equiv(1)_f16	$s0, [$s0];
	st_spill_equiv(2)_f16	$s0, [$s0];
	st_spill_equiv(255)_f16	$s0, [$s0];
	// 
	// Next sample
	// 
	st_arg_f16	$s0, [$s0];
	// 
	st_v2_arg_f16	($s0,$s0), [$s0];
	st_v3_arg_f16	($s0,$s0,$s0), [$s0];
	st_v4_arg_f16	($s0,$s0,$s0,$s0), [$s0];
	st_v2_arg_f16	($s0,$s1), [$s0];
	st_v3_arg_f16	($s0,$s1,$s2), [$s0];
	st_v4_arg_f16	($s0,$s1,$s2,$s3), [$s0];
	st_arg_f16	0Hffff, [$s0];
	st_arg_f16	$s0, [0];
	st_arg_align(2)_f16	$s0, [$s0];
	st_arg_align(4)_f16	$s0, [$s0];
	st_arg_align(8)_f16	$s0, [$s0];
	st_arg_align(16)_f16	$s0, [$s0];
	st_arg_align(32)_f16	$s0, [$s0];
	st_arg_align(64)_f16	$s0, [$s0];
	st_arg_align(128)_f16	$s0, [$s0];
	st_arg_equiv(1)_f16	$s0, [$s0];
	st_arg_equiv(2)_f16	$s0, [$s0];
	st_arg_equiv(255)_f16	$s0, [$s0];
	// 
	// Next sample
	// 
	st_f32	$s0, [$s0];
	// 
	st_v2_f32	($s0,$s0), [$s0];
	st_v3_f32	($s0,$s0,$s0), [$s0];
	st_v4_f32	($s0,$s0,$s0,$s0), [$s0];
	st_v2_f32	($s0,$s1), [$s0];
	st_v3_f32	($s0,$s1,$s2), [$s0];
	st_v4_f32	($s0,$s1,$s2,$s3), [$s0];
	st_f32	0Fffffffff, [$s0];
	st_f32	$s0, [0];
	st_align(2)_f32	$s0, [$s0];
	st_align(4)_f32	$s0, [$s0];
	st_align(8)_f32	$s0, [$s0];
	st_align(16)_f32	$s0, [$s0];
	st_align(32)_f32	$s0, [$s0];
	st_align(64)_f32	$s0, [$s0];
	st_align(128)_f32	$s0, [$s0];
	st_equiv(1)_f32	$s0, [$s0];
	st_equiv(2)_f32	$s0, [$s0];
	st_equiv(255)_f32	$s0, [$s0];
	// 
	// Next sample
	// 
	st_global_f32	$s0, [&GlobalVar];
	// 
	st_v2_global_f32	($s0,$s0), [&GlobalVar];
	st_v3_global_f32	($s0,$s0,$s0), [&GlobalVar];
	st_v4_global_f32	($s0,$s0,$s0,$s0), [&GlobalVar];
	st_v2_global_f32	($s0,$s1), [&GlobalVar];
	st_v3_global_f32	($s0,$s1,$s2), [&GlobalVar];
	st_v4_global_f32	($s0,$s1,$s2,$s3), [&GlobalVar];
	st_global_f32	0Fffffffff, [&GlobalVar];
	st_global_f32	$s0, [$s0];
	st_global_f32	$s0, [0];
	st_global_align(2)_f32	$s0, [&GlobalVar];
	st_global_align(4)_f32	$s0, [&GlobalVar];
	st_global_align(8)_f32	$s0, [&GlobalVar];
	st_global_align(16)_f32	$s0, [&GlobalVar];
	st_global_align(32)_f32	$s0, [&GlobalVar];
	st_global_align(64)_f32	$s0, [&GlobalVar];
	st_global_align(128)_f32	$s0, [&GlobalVar];
	st_global_equiv(1)_f32	$s0, [&GlobalVar];
	st_global_equiv(2)_f32	$s0, [&GlobalVar];
	st_global_equiv(255)_f32	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	st_group_f32	$s0, [&GroupVar];
	// 
	st_v2_group_f32	($s0,$s0), [&GroupVar];
	st_v3_group_f32	($s0,$s0,$s0), [&GroupVar];
	st_v4_group_f32	($s0,$s0,$s0,$s0), [&GroupVar];
	st_v2_group_f32	($s0,$s1), [&GroupVar];
	st_v3_group_f32	($s0,$s1,$s2), [&GroupVar];
	st_v4_group_f32	($s0,$s1,$s2,$s3), [&GroupVar];
	st_group_f32	0Fffffffff, [&GroupVar];
	st_group_f32	$s0, [$s0];
	st_group_f32	$s0, [0];
	st_group_align(2)_f32	$s0, [&GroupVar];
	st_group_align(4)_f32	$s0, [&GroupVar];
	st_group_align(8)_f32	$s0, [&GroupVar];
	st_group_align(16)_f32	$s0, [&GroupVar];
	st_group_align(32)_f32	$s0, [&GroupVar];
	st_group_align(64)_f32	$s0, [&GroupVar];
	st_group_align(128)_f32	$s0, [&GroupVar];
	st_group_equiv(1)_f32	$s0, [&GroupVar];
	st_group_equiv(2)_f32	$s0, [&GroupVar];
	st_group_equiv(255)_f32	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	st_private_f32	$s0, [&PrivateVar];
	// 
	st_v2_private_f32	($s0,$s0), [&PrivateVar];
	st_v3_private_f32	($s0,$s0,$s0), [&PrivateVar];
	st_v4_private_f32	($s0,$s0,$s0,$s0), [&PrivateVar];
	st_v2_private_f32	($s0,$s1), [&PrivateVar];
	st_v3_private_f32	($s0,$s1,$s2), [&PrivateVar];
	st_v4_private_f32	($s0,$s1,$s2,$s3), [&PrivateVar];
	st_private_f32	0Fffffffff, [&PrivateVar];
	st_private_f32	$s0, [$s0];
	st_private_f32	$s0, [0];
	st_private_align(2)_f32	$s0, [&PrivateVar];
	st_private_align(4)_f32	$s0, [&PrivateVar];
	st_private_align(8)_f32	$s0, [&PrivateVar];
	st_private_align(16)_f32	$s0, [&PrivateVar];
	st_private_align(32)_f32	$s0, [&PrivateVar];
	st_private_align(64)_f32	$s0, [&PrivateVar];
	st_private_align(128)_f32	$s0, [&PrivateVar];
	st_private_equiv(1)_f32	$s0, [&PrivateVar];
	st_private_equiv(2)_f32	$s0, [&PrivateVar];
	st_private_equiv(255)_f32	$s0, [&PrivateVar];
	// 
	// Next sample
	// 
	st_spill_f32	$s0, [$s0];
	// 
	st_v2_spill_f32	($s0,$s0), [$s0];
	st_v3_spill_f32	($s0,$s0,$s0), [$s0];
	st_v4_spill_f32	($s0,$s0,$s0,$s0), [$s0];
	st_v2_spill_f32	($s0,$s1), [$s0];
	st_v3_spill_f32	($s0,$s1,$s2), [$s0];
	st_v4_spill_f32	($s0,$s1,$s2,$s3), [$s0];
	st_spill_f32	0Fffffffff, [$s0];
	st_spill_f32	$s0, [0];
	st_spill_align(2)_f32	$s0, [$s0];
	st_spill_align(4)_f32	$s0, [$s0];
	st_spill_align(8)_f32	$s0, [$s0];
	st_spill_align(16)_f32	$s0, [$s0];
	st_spill_align(32)_f32	$s0, [$s0];
	st_spill_align(64)_f32	$s0, [$s0];
	st_spill_align(128)_f32	$s0, [$s0];
	st_spill_equiv(1)_f32	$s0, [$s0];
	st_spill_equiv(2)_f32	$s0, [$s0];
	st_spill_equiv(255)_f32	$s0, [$s0];
	// 
	// Next sample
	// 
	st_arg_f32	$s0, [$s0];
	// 
	st_v2_arg_f32	($s0,$s0), [$s0];
	st_v3_arg_f32	($s0,$s0,$s0), [$s0];
	st_v4_arg_f32	($s0,$s0,$s0,$s0), [$s0];
	st_v2_arg_f32	($s0,$s1), [$s0];
	st_v3_arg_f32	($s0,$s1,$s2), [$s0];
	st_v4_arg_f32	($s0,$s1,$s2,$s3), [$s0];
	st_arg_f32	0Fffffffff, [$s0];
	st_arg_f32	$s0, [0];
	st_arg_align(2)_f32	$s0, [$s0];
	st_arg_align(4)_f32	$s0, [$s0];
	st_arg_align(8)_f32	$s0, [$s0];
	st_arg_align(16)_f32	$s0, [$s0];
	st_arg_align(32)_f32	$s0, [$s0];
	st_arg_align(64)_f32	$s0, [$s0];
	st_arg_align(128)_f32	$s0, [$s0];
	st_arg_equiv(1)_f32	$s0, [$s0];
	st_arg_equiv(2)_f32	$s0, [$s0];
	st_arg_equiv(255)_f32	$s0, [$s0];
	// 
	// Next sample
	// 
	st_f64	$d0, [$s0];
	// 
	st_v2_f64	($d0,$d0), [$s0];
	st_v3_f64	($d0,$d0,$d0), [$s0];
	st_v4_f64	($d0,$d0,$d0,$d0), [$s0];
	st_v2_f64	($d0,$d1), [$s0];
	st_v3_f64	($d0,$d1,$d2), [$s0];
	st_v4_f64	($d0,$d1,$d2,$d3), [$s0];
	st_f64	0Dffffffffffffffff, [$s0];
	st_f64	$d0, [0];
	st_align(2)_f64	$d0, [$s0];
	st_align(4)_f64	$d0, [$s0];
	st_align(8)_f64	$d0, [$s0];
	st_align(16)_f64	$d0, [$s0];
	st_align(32)_f64	$d0, [$s0];
	st_align(64)_f64	$d0, [$s0];
	st_align(128)_f64	$d0, [$s0];
	st_equiv(1)_f64	$d0, [$s0];
	st_equiv(2)_f64	$d0, [$s0];
	st_equiv(255)_f64	$d0, [$s0];
	// 
	// Next sample
	// 
	st_global_f64	$d0, [&GlobalVar];
	// 
	st_v2_global_f64	($d0,$d0), [&GlobalVar];
	st_v3_global_f64	($d0,$d0,$d0), [&GlobalVar];
	st_v4_global_f64	($d0,$d0,$d0,$d0), [&GlobalVar];
	st_v2_global_f64	($d0,$d1), [&GlobalVar];
	st_v3_global_f64	($d0,$d1,$d2), [&GlobalVar];
	st_v4_global_f64	($d0,$d1,$d2,$d3), [&GlobalVar];
	st_global_f64	0Dffffffffffffffff, [&GlobalVar];
	st_global_f64	$d0, [$s0];
	st_global_f64	$d0, [0];
	st_global_align(2)_f64	$d0, [&GlobalVar];
	st_global_align(4)_f64	$d0, [&GlobalVar];
	st_global_align(8)_f64	$d0, [&GlobalVar];
	st_global_align(16)_f64	$d0, [&GlobalVar];
	st_global_align(32)_f64	$d0, [&GlobalVar];
	st_global_align(64)_f64	$d0, [&GlobalVar];
	st_global_align(128)_f64	$d0, [&GlobalVar];
	st_global_equiv(1)_f64	$d0, [&GlobalVar];
	st_global_equiv(2)_f64	$d0, [&GlobalVar];
	st_global_equiv(255)_f64	$d0, [&GlobalVar];
	// 
	// Next sample
	// 
	st_group_f64	$d0, [&GroupVar];
	// 
	st_v2_group_f64	($d0,$d0), [&GroupVar];
	st_v3_group_f64	($d0,$d0,$d0), [&GroupVar];
	st_v4_group_f64	($d0,$d0,$d0,$d0), [&GroupVar];
	st_v2_group_f64	($d0,$d1), [&GroupVar];
	st_v3_group_f64	($d0,$d1,$d2), [&GroupVar];
	st_v4_group_f64	($d0,$d1,$d2,$d3), [&GroupVar];
	st_group_f64	0Dffffffffffffffff, [&GroupVar];
	st_group_f64	$d0, [$s0];
	st_group_f64	$d0, [0];
	st_group_align(2)_f64	$d0, [&GroupVar];
	st_group_align(4)_f64	$d0, [&GroupVar];
	st_group_align(8)_f64	$d0, [&GroupVar];
	st_group_align(16)_f64	$d0, [&GroupVar];
	st_group_align(32)_f64	$d0, [&GroupVar];
	st_group_align(64)_f64	$d0, [&GroupVar];
	st_group_align(128)_f64	$d0, [&GroupVar];
	st_group_equiv(1)_f64	$d0, [&GroupVar];
	st_group_equiv(2)_f64	$d0, [&GroupVar];
	st_group_equiv(255)_f64	$d0, [&GroupVar];
	// 
	// Next sample
	// 
	st_private_f64	$d0, [&PrivateVar];
	// 
	st_v2_private_f64	($d0,$d0), [&PrivateVar];
	st_v3_private_f64	($d0,$d0,$d0), [&PrivateVar];
	st_v4_private_f64	($d0,$d0,$d0,$d0), [&PrivateVar];
	st_v2_private_f64	($d0,$d1), [&PrivateVar];
	st_v3_private_f64	($d0,$d1,$d2), [&PrivateVar];
	st_v4_private_f64	($d0,$d1,$d2,$d3), [&PrivateVar];
	st_private_f64	0Dffffffffffffffff, [&PrivateVar];
	st_private_f64	$d0, [$s0];
	st_private_f64	$d0, [0];
	st_private_align(2)_f64	$d0, [&PrivateVar];
	st_private_align(4)_f64	$d0, [&PrivateVar];
	st_private_align(8)_f64	$d0, [&PrivateVar];
	st_private_align(16)_f64	$d0, [&PrivateVar];
	st_private_align(32)_f64	$d0, [&PrivateVar];
	st_private_align(64)_f64	$d0, [&PrivateVar];
	st_private_align(128)_f64	$d0, [&PrivateVar];
	st_private_equiv(1)_f64	$d0, [&PrivateVar];
	st_private_equiv(2)_f64	$d0, [&PrivateVar];
	st_private_equiv(255)_f64	$d0, [&PrivateVar];
	// 
	// Next sample
	// 
	st_spill_f64	$d0, [$s0];
	// 
	st_v2_spill_f64	($d0,$d0), [$s0];
	st_v3_spill_f64	($d0,$d0,$d0), [$s0];
	st_v4_spill_f64	($d0,$d0,$d0,$d0), [$s0];
	st_v2_spill_f64	($d0,$d1), [$s0];
	st_v3_spill_f64	($d0,$d1,$d2), [$s0];
	st_v4_spill_f64	($d0,$d1,$d2,$d3), [$s0];
	st_spill_f64	0Dffffffffffffffff, [$s0];
	st_spill_f64	$d0, [0];
	st_spill_align(2)_f64	$d0, [$s0];
	st_spill_align(4)_f64	$d0, [$s0];
	st_spill_align(8)_f64	$d0, [$s0];
	st_spill_align(16)_f64	$d0, [$s0];
	st_spill_align(32)_f64	$d0, [$s0];
	st_spill_align(64)_f64	$d0, [$s0];
	st_spill_align(128)_f64	$d0, [$s0];
	st_spill_equiv(1)_f64	$d0, [$s0];
	st_spill_equiv(2)_f64	$d0, [$s0];
	st_spill_equiv(255)_f64	$d0, [$s0];
	// 
	// Next sample
	// 
	st_arg_f64	$d0, [$s0];
	// 
	st_v2_arg_f64	($d0,$d0), [$s0];
	st_v3_arg_f64	($d0,$d0,$d0), [$s0];
	st_v4_arg_f64	($d0,$d0,$d0,$d0), [$s0];
	st_v2_arg_f64	($d0,$d1), [$s0];
	st_v3_arg_f64	($d0,$d1,$d2), [$s0];
	st_v4_arg_f64	($d0,$d1,$d2,$d3), [$s0];
	st_arg_f64	0Dffffffffffffffff, [$s0];
	st_arg_f64	$d0, [0];
	st_arg_align(2)_f64	$d0, [$s0];
	st_arg_align(4)_f64	$d0, [$s0];
	st_arg_align(8)_f64	$d0, [$s0];
	st_arg_align(16)_f64	$d0, [$s0];
	st_arg_align(32)_f64	$d0, [$s0];
	st_arg_align(64)_f64	$d0, [$s0];
	st_arg_align(128)_f64	$d0, [$s0];
	st_arg_equiv(1)_f64	$d0, [$s0];
	st_arg_equiv(2)_f64	$d0, [$s0];
	st_arg_equiv(255)_f64	$d0, [$s0];
	// 
	// Next sample
	// 
	st_b128	$q0, [$s0];
	// 
	st_b128	$q0, [0];
	st_align(2)_b128	$q0, [$s0];
	st_align(4)_b128	$q0, [$s0];
	st_align(8)_b128	$q0, [$s0];
	st_align(16)_b128	$q0, [$s0];
	st_align(32)_b128	$q0, [$s0];
	st_align(64)_b128	$q0, [$s0];
	st_align(128)_b128	$q0, [$s0];
	st_equiv(1)_b128	$q0, [$s0];
	st_equiv(2)_b128	$q0, [$s0];
	st_equiv(255)_b128	$q0, [$s0];
	// 
	// Next sample
	// 
	st_global_b128	$q0, [&GlobalVar];
	// 
	st_global_b128	$q0, [$s0];
	st_global_b128	$q0, [0];
	st_global_align(2)_b128	$q0, [&GlobalVar];
	st_global_align(4)_b128	$q0, [&GlobalVar];
	st_global_align(8)_b128	$q0, [&GlobalVar];
	st_global_align(16)_b128	$q0, [&GlobalVar];
	st_global_align(32)_b128	$q0, [&GlobalVar];
	st_global_align(64)_b128	$q0, [&GlobalVar];
	st_global_align(128)_b128	$q0, [&GlobalVar];
	st_global_equiv(1)_b128	$q0, [&GlobalVar];
	st_global_equiv(2)_b128	$q0, [&GlobalVar];
	st_global_equiv(255)_b128	$q0, [&GlobalVar];
	// 
	// Next sample
	// 
	st_group_b128	$q0, [&GroupVar];
	// 
	st_group_b128	$q0, [$s0];
	st_group_b128	$q0, [0];
	st_group_align(2)_b128	$q0, [&GroupVar];
	st_group_align(4)_b128	$q0, [&GroupVar];
	st_group_align(8)_b128	$q0, [&GroupVar];
	st_group_align(16)_b128	$q0, [&GroupVar];
	st_group_align(32)_b128	$q0, [&GroupVar];
	st_group_align(64)_b128	$q0, [&GroupVar];
	st_group_align(128)_b128	$q0, [&GroupVar];
	st_group_equiv(1)_b128	$q0, [&GroupVar];
	st_group_equiv(2)_b128	$q0, [&GroupVar];
	st_group_equiv(255)_b128	$q0, [&GroupVar];
	// 
	// Next sample
	// 
	st_private_b128	$q0, [&PrivateVar];
	// 
	st_private_b128	$q0, [$s0];
	st_private_b128	$q0, [0];
	st_private_align(2)_b128	$q0, [&PrivateVar];
	st_private_align(4)_b128	$q0, [&PrivateVar];
	st_private_align(8)_b128	$q0, [&PrivateVar];
	st_private_align(16)_b128	$q0, [&PrivateVar];
	st_private_align(32)_b128	$q0, [&PrivateVar];
	st_private_align(64)_b128	$q0, [&PrivateVar];
	st_private_align(128)_b128	$q0, [&PrivateVar];
	st_private_equiv(1)_b128	$q0, [&PrivateVar];
	st_private_equiv(2)_b128	$q0, [&PrivateVar];
	st_private_equiv(255)_b128	$q0, [&PrivateVar];
	// 
	// Next sample
	// 
	st_spill_b128	$q0, [$s0];
	// 
	st_spill_b128	$q0, [0];
	st_spill_align(2)_b128	$q0, [$s0];
	st_spill_align(4)_b128	$q0, [$s0];
	st_spill_align(8)_b128	$q0, [$s0];
	st_spill_align(16)_b128	$q0, [$s0];
	st_spill_align(32)_b128	$q0, [$s0];
	st_spill_align(64)_b128	$q0, [$s0];
	st_spill_align(128)_b128	$q0, [$s0];
	st_spill_equiv(1)_b128	$q0, [$s0];
	st_spill_equiv(2)_b128	$q0, [$s0];
	st_spill_equiv(255)_b128	$q0, [$s0];
	// 
	// Next sample
	// 
	st_arg_b128	$q0, [$s0];
	// 
	st_arg_b128	$q0, [0];
	st_arg_align(2)_b128	$q0, [$s0];
	st_arg_align(4)_b128	$q0, [$s0];
	st_arg_align(8)_b128	$q0, [$s0];
	st_arg_align(16)_b128	$q0, [$s0];
	st_arg_align(32)_b128	$q0, [$s0];
	st_arg_align(64)_b128	$q0, [$s0];
	st_arg_align(128)_b128	$q0, [$s0];
	st_arg_equiv(1)_b128	$q0, [$s0];
	st_arg_equiv(2)_b128	$q0, [$s0];
	st_arg_equiv(255)_b128	$q0, [$s0];
	// 
	// Next sample
	// 
	st_samp	$d0, [$s0];
	// 
	st_samp	$d0, [0];
	st_align(2)_samp	$d0, [$s0];
	st_align(4)_samp	$d0, [$s0];
	st_align(8)_samp	$d0, [$s0];
	st_align(16)_samp	$d0, [$s0];
	st_align(32)_samp	$d0, [$s0];
	st_align(64)_samp	$d0, [$s0];
	st_align(128)_samp	$d0, [$s0];
	st_equiv(1)_samp	$d0, [$s0];
	st_equiv(2)_samp	$d0, [$s0];
	st_equiv(255)_samp	$d0, [$s0];
	// 
	// Next sample
	// 
	st_global_samp	$d0, [&GlobalSamp];
	// 
	st_global_samp	$d0, [$s0];
	st_global_samp	$d0, [0];
	st_global_align(2)_samp	$d0, [&GlobalSamp];
	st_global_align(4)_samp	$d0, [&GlobalSamp];
	st_global_align(8)_samp	$d0, [&GlobalSamp];
	st_global_align(16)_samp	$d0, [&GlobalSamp];
	st_global_align(32)_samp	$d0, [&GlobalSamp];
	st_global_align(64)_samp	$d0, [&GlobalSamp];
	st_global_align(128)_samp	$d0, [&GlobalSamp];
	st_global_equiv(1)_samp	$d0, [&GlobalSamp];
	st_global_equiv(2)_samp	$d0, [&GlobalSamp];
	st_global_equiv(255)_samp	$d0, [&GlobalSamp];
	// 
	// Next sample
	// 
	st_group_samp	$d0, [$s0];
	// 
	st_group_samp	$d0, [0];
	st_group_align(2)_samp	$d0, [$s0];
	st_group_align(4)_samp	$d0, [$s0];
	st_group_align(8)_samp	$d0, [$s0];
	st_group_align(16)_samp	$d0, [$s0];
	st_group_align(32)_samp	$d0, [$s0];
	st_group_align(64)_samp	$d0, [$s0];
	st_group_align(128)_samp	$d0, [$s0];
	st_group_equiv(1)_samp	$d0, [$s0];
	st_group_equiv(2)_samp	$d0, [$s0];
	st_group_equiv(255)_samp	$d0, [$s0];
	// 
	// Next sample
	// 
	st_private_samp	$d0, [$s0];
	// 
	st_private_samp	$d0, [0];
	st_private_align(2)_samp	$d0, [$s0];
	st_private_align(4)_samp	$d0, [$s0];
	st_private_align(8)_samp	$d0, [$s0];
	st_private_align(16)_samp	$d0, [$s0];
	st_private_align(32)_samp	$d0, [$s0];
	st_private_align(64)_samp	$d0, [$s0];
	st_private_align(128)_samp	$d0, [$s0];
	st_private_equiv(1)_samp	$d0, [$s0];
	st_private_equiv(2)_samp	$d0, [$s0];
	st_private_equiv(255)_samp	$d0, [$s0];
	// 
	// Next sample
	// 
	st_spill_samp	$d0, [$s0];
	// 
	st_spill_samp	$d0, [0];
	st_spill_align(2)_samp	$d0, [$s0];
	st_spill_align(4)_samp	$d0, [$s0];
	st_spill_align(8)_samp	$d0, [$s0];
	st_spill_align(16)_samp	$d0, [$s0];
	st_spill_align(32)_samp	$d0, [$s0];
	st_spill_align(64)_samp	$d0, [$s0];
	st_spill_align(128)_samp	$d0, [$s0];
	st_spill_equiv(1)_samp	$d0, [$s0];
	st_spill_equiv(2)_samp	$d0, [$s0];
	st_spill_equiv(255)_samp	$d0, [$s0];
	// 
	// Next sample
	// 
	st_arg_samp	$d0, [$s0];
	// 
	st_arg_samp	$d0, [0];
	st_arg_align(2)_samp	$d0, [$s0];
	st_arg_align(4)_samp	$d0, [$s0];
	st_arg_align(8)_samp	$d0, [$s0];
	st_arg_align(16)_samp	$d0, [$s0];
	st_arg_align(32)_samp	$d0, [$s0];
	st_arg_align(64)_samp	$d0, [$s0];
	st_arg_align(128)_samp	$d0, [$s0];
	st_arg_equiv(1)_samp	$d0, [$s0];
	st_arg_equiv(2)_samp	$d0, [$s0];
	st_arg_equiv(255)_samp	$d0, [$s0];
	// 
	// Next sample
	// 
	st_roimg	$d0, [$s0];
	// 
	st_roimg	$d0, [0];
	st_align(2)_roimg	$d0, [$s0];
	st_align(4)_roimg	$d0, [$s0];
	st_align(8)_roimg	$d0, [$s0];
	st_align(16)_roimg	$d0, [$s0];
	st_align(32)_roimg	$d0, [$s0];
	st_align(64)_roimg	$d0, [$s0];
	st_align(128)_roimg	$d0, [$s0];
	st_equiv(1)_roimg	$d0, [$s0];
	st_equiv(2)_roimg	$d0, [$s0];
	st_equiv(255)_roimg	$d0, [$s0];
	// 
	// Next sample
	// 
	st_global_roimg	$d0, [&GlobalROImg];
	// 
	st_global_roimg	$d0, [$s0];
	st_global_roimg	$d0, [0];
	st_global_align(2)_roimg	$d0, [&GlobalROImg];
	st_global_align(4)_roimg	$d0, [&GlobalROImg];
	st_global_align(8)_roimg	$d0, [&GlobalROImg];
	st_global_align(16)_roimg	$d0, [&GlobalROImg];
	st_global_align(32)_roimg	$d0, [&GlobalROImg];
	st_global_align(64)_roimg	$d0, [&GlobalROImg];
	st_global_align(128)_roimg	$d0, [&GlobalROImg];
	st_global_equiv(1)_roimg	$d0, [&GlobalROImg];
	st_global_equiv(2)_roimg	$d0, [&GlobalROImg];
	st_global_equiv(255)_roimg	$d0, [&GlobalROImg];
	// 
	// Next sample
	// 
	st_group_roimg	$d0, [$s0];
	// 
	st_group_roimg	$d0, [0];
	st_group_align(2)_roimg	$d0, [$s0];
	st_group_align(4)_roimg	$d0, [$s0];
	st_group_align(8)_roimg	$d0, [$s0];
	st_group_align(16)_roimg	$d0, [$s0];
	st_group_align(32)_roimg	$d0, [$s0];
	st_group_align(64)_roimg	$d0, [$s0];
	st_group_align(128)_roimg	$d0, [$s0];
	st_group_equiv(1)_roimg	$d0, [$s0];
	st_group_equiv(2)_roimg	$d0, [$s0];
	st_group_equiv(255)_roimg	$d0, [$s0];
	// 
	// Next sample
	// 
	st_private_roimg	$d0, [$s0];
	// 
	st_private_roimg	$d0, [0];
	st_private_align(2)_roimg	$d0, [$s0];
	st_private_align(4)_roimg	$d0, [$s0];
	st_private_align(8)_roimg	$d0, [$s0];
	st_private_align(16)_roimg	$d0, [$s0];
	st_private_align(32)_roimg	$d0, [$s0];
	st_private_align(64)_roimg	$d0, [$s0];
	st_private_align(128)_roimg	$d0, [$s0];
	st_private_equiv(1)_roimg	$d0, [$s0];
	st_private_equiv(2)_roimg	$d0, [$s0];
	st_private_equiv(255)_roimg	$d0, [$s0];
	// 
	// Next sample
	// 
	st_spill_roimg	$d0, [$s0];
	// 
	st_spill_roimg	$d0, [0];
	st_spill_align(2)_roimg	$d0, [$s0];
	st_spill_align(4)_roimg	$d0, [$s0];
	st_spill_align(8)_roimg	$d0, [$s0];
	st_spill_align(16)_roimg	$d0, [$s0];
	st_spill_align(32)_roimg	$d0, [$s0];
	st_spill_align(64)_roimg	$d0, [$s0];
	st_spill_align(128)_roimg	$d0, [$s0];
	st_spill_equiv(1)_roimg	$d0, [$s0];
	st_spill_equiv(2)_roimg	$d0, [$s0];
	st_spill_equiv(255)_roimg	$d0, [$s0];
	// 
	// Next sample
	// 
	st_arg_roimg	$d0, [$s0];
	// 
	st_arg_roimg	$d0, [0];
	st_arg_align(2)_roimg	$d0, [$s0];
	st_arg_align(4)_roimg	$d0, [$s0];
	st_arg_align(8)_roimg	$d0, [$s0];
	st_arg_align(16)_roimg	$d0, [$s0];
	st_arg_align(32)_roimg	$d0, [$s0];
	st_arg_align(64)_roimg	$d0, [$s0];
	st_arg_align(128)_roimg	$d0, [$s0];
	st_arg_equiv(1)_roimg	$d0, [$s0];
	st_arg_equiv(2)_roimg	$d0, [$s0];
	st_arg_equiv(255)_roimg	$d0, [$s0];
	// 
	// Next sample
	// 
	st_rwimg	$d0, [$s0];
	// 
	st_rwimg	$d0, [0];
	st_align(2)_rwimg	$d0, [$s0];
	st_align(4)_rwimg	$d0, [$s0];
	st_align(8)_rwimg	$d0, [$s0];
	st_align(16)_rwimg	$d0, [$s0];
	st_align(32)_rwimg	$d0, [$s0];
	st_align(64)_rwimg	$d0, [$s0];
	st_align(128)_rwimg	$d0, [$s0];
	st_equiv(1)_rwimg	$d0, [$s0];
	st_equiv(2)_rwimg	$d0, [$s0];
	st_equiv(255)_rwimg	$d0, [$s0];
	// 
	// Next sample
	// 
	st_global_rwimg	$d0, [&GlobalRWImg];
	// 
	st_global_rwimg	$d0, [$s0];
	st_global_rwimg	$d0, [0];
	st_global_align(2)_rwimg	$d0, [&GlobalRWImg];
	st_global_align(4)_rwimg	$d0, [&GlobalRWImg];
	st_global_align(8)_rwimg	$d0, [&GlobalRWImg];
	st_global_align(16)_rwimg	$d0, [&GlobalRWImg];
	st_global_align(32)_rwimg	$d0, [&GlobalRWImg];
	st_global_align(64)_rwimg	$d0, [&GlobalRWImg];
	st_global_align(128)_rwimg	$d0, [&GlobalRWImg];
	st_global_equiv(1)_rwimg	$d0, [&GlobalRWImg];
	st_global_equiv(2)_rwimg	$d0, [&GlobalRWImg];
	st_global_equiv(255)_rwimg	$d0, [&GlobalRWImg];
	// 
	// Next sample
	// 
	st_group_rwimg	$d0, [$s0];
	// 
	st_group_rwimg	$d0, [0];
	st_group_align(2)_rwimg	$d0, [$s0];
	st_group_align(4)_rwimg	$d0, [$s0];
	st_group_align(8)_rwimg	$d0, [$s0];
	st_group_align(16)_rwimg	$d0, [$s0];
	st_group_align(32)_rwimg	$d0, [$s0];
	st_group_align(64)_rwimg	$d0, [$s0];
	st_group_align(128)_rwimg	$d0, [$s0];
	st_group_equiv(1)_rwimg	$d0, [$s0];
	st_group_equiv(2)_rwimg	$d0, [$s0];
	st_group_equiv(255)_rwimg	$d0, [$s0];
	// 
	// Next sample
	// 
	st_private_rwimg	$d0, [$s0];
	// 
	st_private_rwimg	$d0, [0];
	st_private_align(2)_rwimg	$d0, [$s0];
	st_private_align(4)_rwimg	$d0, [$s0];
	st_private_align(8)_rwimg	$d0, [$s0];
	st_private_align(16)_rwimg	$d0, [$s0];
	st_private_align(32)_rwimg	$d0, [$s0];
	st_private_align(64)_rwimg	$d0, [$s0];
	st_private_align(128)_rwimg	$d0, [$s0];
	st_private_equiv(1)_rwimg	$d0, [$s0];
	st_private_equiv(2)_rwimg	$d0, [$s0];
	st_private_equiv(255)_rwimg	$d0, [$s0];
	// 
	// Next sample
	// 
	st_spill_rwimg	$d0, [$s0];
	// 
	st_spill_rwimg	$d0, [0];
	st_spill_align(2)_rwimg	$d0, [$s0];
	st_spill_align(4)_rwimg	$d0, [$s0];
	st_spill_align(8)_rwimg	$d0, [$s0];
	st_spill_align(16)_rwimg	$d0, [$s0];
	st_spill_align(32)_rwimg	$d0, [$s0];
	st_spill_align(64)_rwimg	$d0, [$s0];
	st_spill_align(128)_rwimg	$d0, [$s0];
	st_spill_equiv(1)_rwimg	$d0, [$s0];
	st_spill_equiv(2)_rwimg	$d0, [$s0];
	st_spill_equiv(255)_rwimg	$d0, [$s0];
	// 
	// Next sample
	// 
	st_arg_rwimg	$d0, [$s0];
	// 
	st_arg_rwimg	$d0, [0];
	st_arg_align(2)_rwimg	$d0, [$s0];
	st_arg_align(4)_rwimg	$d0, [$s0];
	st_arg_align(8)_rwimg	$d0, [$s0];
	st_arg_align(16)_rwimg	$d0, [$s0];
	st_arg_align(32)_rwimg	$d0, [$s0];
	st_arg_align(64)_rwimg	$d0, [$s0];
	st_arg_align(128)_rwimg	$d0, [$s0];
	st_arg_equiv(1)_rwimg	$d0, [$s0];
	st_arg_equiv(2)_rwimg	$d0, [$s0];
	st_arg_equiv(255)_rwimg	$d0, [$s0];
	// 
	// Next sample
	// 
	st_sig32	$d0, [$s0];
	// 
	st_sig32	$d0, [0];
	st_align(2)_sig32	$d0, [$s0];
	st_align(4)_sig32	$d0, [$s0];
	st_align(8)_sig32	$d0, [$s0];
	st_align(16)_sig32	$d0, [$s0];
	st_align(32)_sig32	$d0, [$s0];
	st_align(64)_sig32	$d0, [$s0];
	st_align(128)_sig32	$d0, [$s0];
	st_equiv(1)_sig32	$d0, [$s0];
	st_equiv(2)_sig32	$d0, [$s0];
	st_equiv(255)_sig32	$d0, [$s0];
	// 
	// Next sample
	// 
	st_global_sig32	$d0, [&GlobalSig32];
	// 
	st_global_sig32	$d0, [$s0];
	st_global_sig32	$d0, [0];
	st_global_align(2)_sig32	$d0, [&GlobalSig32];
	st_global_align(4)_sig32	$d0, [&GlobalSig32];
	st_global_align(8)_sig32	$d0, [&GlobalSig32];
	st_global_align(16)_sig32	$d0, [&GlobalSig32];
	st_global_align(32)_sig32	$d0, [&GlobalSig32];
	st_global_align(64)_sig32	$d0, [&GlobalSig32];
	st_global_align(128)_sig32	$d0, [&GlobalSig32];
	st_global_equiv(1)_sig32	$d0, [&GlobalSig32];
	st_global_equiv(2)_sig32	$d0, [&GlobalSig32];
	st_global_equiv(255)_sig32	$d0, [&GlobalSig32];
	// 
	// Next sample
	// 
	st_group_sig32	$d0, [$s0];
	// 
	st_group_sig32	$d0, [0];
	st_group_align(2)_sig32	$d0, [$s0];
	st_group_align(4)_sig32	$d0, [$s0];
	st_group_align(8)_sig32	$d0, [$s0];
	st_group_align(16)_sig32	$d0, [$s0];
	st_group_align(32)_sig32	$d0, [$s0];
	st_group_align(64)_sig32	$d0, [$s0];
	st_group_align(128)_sig32	$d0, [$s0];
	st_group_equiv(1)_sig32	$d0, [$s0];
	st_group_equiv(2)_sig32	$d0, [$s0];
	st_group_equiv(255)_sig32	$d0, [$s0];
	// 
	// Next sample
	// 
	st_private_sig32	$d0, [$s0];
	// 
	st_private_sig32	$d0, [0];
	st_private_align(2)_sig32	$d0, [$s0];
	st_private_align(4)_sig32	$d0, [$s0];
	st_private_align(8)_sig32	$d0, [$s0];
	st_private_align(16)_sig32	$d0, [$s0];
	st_private_align(32)_sig32	$d0, [$s0];
	st_private_align(64)_sig32	$d0, [$s0];
	st_private_align(128)_sig32	$d0, [$s0];
	st_private_equiv(1)_sig32	$d0, [$s0];
	st_private_equiv(2)_sig32	$d0, [$s0];
	st_private_equiv(255)_sig32	$d0, [$s0];
	// 
	// Next sample
	// 
	st_spill_sig32	$d0, [$s0];
	// 
	st_spill_sig32	$d0, [0];
	st_spill_align(2)_sig32	$d0, [$s0];
	st_spill_align(4)_sig32	$d0, [$s0];
	st_spill_align(8)_sig32	$d0, [$s0];
	st_spill_align(16)_sig32	$d0, [$s0];
	st_spill_align(32)_sig32	$d0, [$s0];
	st_spill_align(64)_sig32	$d0, [$s0];
	st_spill_align(128)_sig32	$d0, [$s0];
	st_spill_equiv(1)_sig32	$d0, [$s0];
	st_spill_equiv(2)_sig32	$d0, [$s0];
	st_spill_equiv(255)_sig32	$d0, [$s0];
	// 
	// Next sample
	// 
	st_arg_sig32	$d0, [$s0];
	// 
	st_arg_sig32	$d0, [0];
	st_arg_align(2)_sig32	$d0, [$s0];
	st_arg_align(4)_sig32	$d0, [$s0];
	st_arg_align(8)_sig32	$d0, [$s0];
	st_arg_align(16)_sig32	$d0, [$s0];
	st_arg_align(32)_sig32	$d0, [$s0];
	st_arg_align(64)_sig32	$d0, [$s0];
	st_arg_align(128)_sig32	$d0, [$s0];
	st_arg_equiv(1)_sig32	$d0, [$s0];
	st_arg_equiv(2)_sig32	$d0, [$s0];
	st_arg_equiv(255)_sig32	$d0, [$s0];
	// 
	// Next sample
	// 
	st_sig64	$d0, [$s0];
	// 
	st_sig64	$d0, [0];
	st_align(2)_sig64	$d0, [$s0];
	st_align(4)_sig64	$d0, [$s0];
	st_align(8)_sig64	$d0, [$s0];
	st_align(16)_sig64	$d0, [$s0];
	st_align(32)_sig64	$d0, [$s0];
	st_align(64)_sig64	$d0, [$s0];
	st_align(128)_sig64	$d0, [$s0];
	st_equiv(1)_sig64	$d0, [$s0];
	st_equiv(2)_sig64	$d0, [$s0];
	st_equiv(255)_sig64	$d0, [$s0];
	// 
	// Next sample
	// 
	st_global_sig64	$d0, [&GlobalSig64];
	// 
	st_global_sig64	$d0, [$s0];
	st_global_sig64	$d0, [0];
	st_global_align(2)_sig64	$d0, [&GlobalSig64];
	st_global_align(4)_sig64	$d0, [&GlobalSig64];
	st_global_align(8)_sig64	$d0, [&GlobalSig64];
	st_global_align(16)_sig64	$d0, [&GlobalSig64];
	st_global_align(32)_sig64	$d0, [&GlobalSig64];
	st_global_align(64)_sig64	$d0, [&GlobalSig64];
	st_global_align(128)_sig64	$d0, [&GlobalSig64];
	st_global_equiv(1)_sig64	$d0, [&GlobalSig64];
	st_global_equiv(2)_sig64	$d0, [&GlobalSig64];
	st_global_equiv(255)_sig64	$d0, [&GlobalSig64];
	// 
	// Next sample
	// 
	st_group_sig64	$d0, [$s0];
	// 
	st_group_sig64	$d0, [0];
	st_group_align(2)_sig64	$d0, [$s0];
	st_group_align(4)_sig64	$d0, [$s0];
	st_group_align(8)_sig64	$d0, [$s0];
	st_group_align(16)_sig64	$d0, [$s0];
	st_group_align(32)_sig64	$d0, [$s0];
	st_group_align(64)_sig64	$d0, [$s0];
	st_group_align(128)_sig64	$d0, [$s0];
	st_group_equiv(1)_sig64	$d0, [$s0];
	st_group_equiv(2)_sig64	$d0, [$s0];
	st_group_equiv(255)_sig64	$d0, [$s0];
	// 
	// Next sample
	// 
	st_private_sig64	$d0, [$s0];
	// 
	st_private_sig64	$d0, [0];
	st_private_align(2)_sig64	$d0, [$s0];
	st_private_align(4)_sig64	$d0, [$s0];
	st_private_align(8)_sig64	$d0, [$s0];
	st_private_align(16)_sig64	$d0, [$s0];
	st_private_align(32)_sig64	$d0, [$s0];
	st_private_align(64)_sig64	$d0, [$s0];
	st_private_align(128)_sig64	$d0, [$s0];
	st_private_equiv(1)_sig64	$d0, [$s0];
	st_private_equiv(2)_sig64	$d0, [$s0];
	st_private_equiv(255)_sig64	$d0, [$s0];
	// 
	// Next sample
	// 
	st_spill_sig64	$d0, [$s0];
	// 
	st_spill_sig64	$d0, [0];
	st_spill_align(2)_sig64	$d0, [$s0];
	st_spill_align(4)_sig64	$d0, [$s0];
	st_spill_align(8)_sig64	$d0, [$s0];
	st_spill_align(16)_sig64	$d0, [$s0];
	st_spill_align(32)_sig64	$d0, [$s0];
	st_spill_align(64)_sig64	$d0, [$s0];
	st_spill_align(128)_sig64	$d0, [$s0];
	st_spill_equiv(1)_sig64	$d0, [$s0];
	st_spill_equiv(2)_sig64	$d0, [$s0];
	st_spill_equiv(255)_sig64	$d0, [$s0];
	// 
	// Next sample
	// 
	st_arg_sig64	$d0, [$s0];
	// 
	st_arg_sig64	$d0, [0];
	st_arg_align(2)_sig64	$d0, [$s0];
	st_arg_align(4)_sig64	$d0, [$s0];
	st_arg_align(8)_sig64	$d0, [$s0];
	st_arg_align(16)_sig64	$d0, [$s0];
	st_arg_align(32)_sig64	$d0, [$s0];
	st_arg_align(64)_sig64	$d0, [$s0];
	st_arg_align(128)_sig64	$d0, [$s0];
	st_arg_equiv(1)_sig64	$d0, [$s0];
	st_arg_equiv(2)_sig64	$d0, [$s0];
	st_arg_equiv(255)_sig64	$d0, [$s0];
	// 
	// Next sample
	// 
	atomic_add_rlx_wv_u32	$s0, [$s0], $s0;
	// 
	atomic_add_acq_wv_u32	$s0, [$s0], $s0;
	atomic_add_rel_wv_u32	$s0, [$s0], $s0;
	atomic_add_ar_wv_u32	$s0, [$s0], $s0;
	atomic_add_rlx_wg_u32	$s0, [$s0], $s0;
	atomic_add_rlx_cmp_u32	$s0, [$s0], $s0;
	atomic_add_rlx_sys_u32	$s0, [$s0], $s0;
	atomic_add_rlx_wv_u32	$s0, [$s0], 4294967295;
	atomic_add_rlx_wv_u32	$s0, [$s0], WAVESIZE;
	atomic_add_rlx_wv_u32	$s0, [0], $s0;
	atomic_add_rlx_wv_equiv(1)_u32	$s0, [$s0], $s0;
	atomic_add_rlx_wv_equiv(2)_u32	$s0, [$s0], $s0;
	atomic_add_rlx_wv_equiv(255)_u32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	atomic_add_global_rlx_wv_u32	$s0, [&GlobalVar], $s0;
	// 
	atomic_add_global_acq_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_add_global_rel_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_add_global_ar_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_add_global_rlx_wg_u32	$s0, [&GlobalVar], $s0;
	atomic_add_global_rlx_cmp_u32	$s0, [&GlobalVar], $s0;
	atomic_add_global_rlx_sys_u32	$s0, [&GlobalVar], $s0;
	atomic_add_global_rlx_wv_u32	$s0, [&GlobalVar], 4294967295;
	atomic_add_global_rlx_wv_u32	$s0, [&GlobalVar], WAVESIZE;
	atomic_add_global_rlx_wv_u32	$s0, [&GlobalROImg], $s0;
	atomic_add_global_rlx_wv_u32	$s0, [&GlobalRWImg], $s0;
	atomic_add_global_rlx_wv_u32	$s0, [&GlobalSamp], $s0;
	atomic_add_global_rlx_wv_u32	$s0, [&GlobalSig32], $s0;
	atomic_add_global_rlx_wv_u32	$s0, [&GlobalSig64], $s0;
	atomic_add_global_rlx_wv_u32	$s0, [$s0], $s0;
	atomic_add_global_rlx_wv_u32	$s0, [0], $s0;
	atomic_add_global_rlx_wv_equiv(1)_u32	$s0, [&GlobalVar], $s0;
	atomic_add_global_rlx_wv_equiv(2)_u32	$s0, [&GlobalVar], $s0;
	atomic_add_global_rlx_wv_equiv(255)_u32	$s0, [&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomic_add_group_rlx_wv_u32	$s0, [&GroupVar], $s0;
	// 
	atomic_add_group_acq_wv_u32	$s0, [&GroupVar], $s0;
	atomic_add_group_rel_wv_u32	$s0, [&GroupVar], $s0;
	atomic_add_group_ar_wv_u32	$s0, [&GroupVar], $s0;
	atomic_add_group_rlx_wg_u32	$s0, [&GroupVar], $s0;
	atomic_add_group_rlx_wv_u32	$s0, [&GroupVar], 4294967295;
	atomic_add_group_rlx_wv_u32	$s0, [&GroupVar], WAVESIZE;
	atomic_add_group_rlx_wv_u32	$s0, [$s0], $s0;
	atomic_add_group_rlx_wv_u32	$s0, [0], $s0;
	atomic_add_group_rlx_wv_equiv(1)_u32	$s0, [&GroupVar], $s0;
	atomic_add_group_rlx_wv_equiv(2)_u32	$s0, [&GroupVar], $s0;
	atomic_add_group_rlx_wv_equiv(255)_u32	$s0, [&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomic_dec_rlx_wv_u32	$s0, [$s0], $s0;
	// 
	atomic_dec_acq_wv_u32	$s0, [$s0], $s0;
	atomic_dec_rel_wv_u32	$s0, [$s0], $s0;
	atomic_dec_ar_wv_u32	$s0, [$s0], $s0;
	atomic_dec_rlx_wg_u32	$s0, [$s0], $s0;
	atomic_dec_rlx_cmp_u32	$s0, [$s0], $s0;
	atomic_dec_rlx_sys_u32	$s0, [$s0], $s0;
	atomic_dec_rlx_wv_u32	$s0, [$s0], 4294967295;
	atomic_dec_rlx_wv_u32	$s0, [$s0], WAVESIZE;
	atomic_dec_rlx_wv_u32	$s0, [0], $s0;
	atomic_dec_rlx_wv_equiv(1)_u32	$s0, [$s0], $s0;
	atomic_dec_rlx_wv_equiv(2)_u32	$s0, [$s0], $s0;
	atomic_dec_rlx_wv_equiv(255)_u32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	atomic_dec_global_rlx_wv_u32	$s0, [&GlobalVar], $s0;
	// 
	atomic_dec_global_acq_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_dec_global_rel_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_dec_global_ar_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_dec_global_rlx_wg_u32	$s0, [&GlobalVar], $s0;
	atomic_dec_global_rlx_cmp_u32	$s0, [&GlobalVar], $s0;
	atomic_dec_global_rlx_sys_u32	$s0, [&GlobalVar], $s0;
	atomic_dec_global_rlx_wv_u32	$s0, [&GlobalVar], 4294967295;
	atomic_dec_global_rlx_wv_u32	$s0, [&GlobalVar], WAVESIZE;
	atomic_dec_global_rlx_wv_u32	$s0, [&GlobalROImg], $s0;
	atomic_dec_global_rlx_wv_u32	$s0, [&GlobalRWImg], $s0;
	atomic_dec_global_rlx_wv_u32	$s0, [&GlobalSamp], $s0;
	atomic_dec_global_rlx_wv_u32	$s0, [&GlobalSig32], $s0;
	atomic_dec_global_rlx_wv_u32	$s0, [&GlobalSig64], $s0;
	atomic_dec_global_rlx_wv_u32	$s0, [$s0], $s0;
	atomic_dec_global_rlx_wv_u32	$s0, [0], $s0;
	atomic_dec_global_rlx_wv_equiv(1)_u32	$s0, [&GlobalVar], $s0;
	atomic_dec_global_rlx_wv_equiv(2)_u32	$s0, [&GlobalVar], $s0;
	atomic_dec_global_rlx_wv_equiv(255)_u32	$s0, [&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomic_dec_group_rlx_wv_u32	$s0, [&GroupVar], $s0;
	// 
	atomic_dec_group_acq_wv_u32	$s0, [&GroupVar], $s0;
	atomic_dec_group_rel_wv_u32	$s0, [&GroupVar], $s0;
	atomic_dec_group_ar_wv_u32	$s0, [&GroupVar], $s0;
	atomic_dec_group_rlx_wg_u32	$s0, [&GroupVar], $s0;
	atomic_dec_group_rlx_wv_u32	$s0, [&GroupVar], 4294967295;
	atomic_dec_group_rlx_wv_u32	$s0, [&GroupVar], WAVESIZE;
	atomic_dec_group_rlx_wv_u32	$s0, [$s0], $s0;
	atomic_dec_group_rlx_wv_u32	$s0, [0], $s0;
	atomic_dec_group_rlx_wv_equiv(1)_u32	$s0, [&GroupVar], $s0;
	atomic_dec_group_rlx_wv_equiv(2)_u32	$s0, [&GroupVar], $s0;
	atomic_dec_group_rlx_wv_equiv(255)_u32	$s0, [&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomic_inc_rlx_wv_u32	$s0, [$s0], $s0;
	// 
	atomic_inc_acq_wv_u32	$s0, [$s0], $s0;
	atomic_inc_rel_wv_u32	$s0, [$s0], $s0;
	atomic_inc_ar_wv_u32	$s0, [$s0], $s0;
	atomic_inc_rlx_wg_u32	$s0, [$s0], $s0;
	atomic_inc_rlx_cmp_u32	$s0, [$s0], $s0;
	atomic_inc_rlx_sys_u32	$s0, [$s0], $s0;
	atomic_inc_rlx_wv_u32	$s0, [$s0], 4294967295;
	atomic_inc_rlx_wv_u32	$s0, [$s0], WAVESIZE;
	atomic_inc_rlx_wv_u32	$s0, [0], $s0;
	atomic_inc_rlx_wv_equiv(1)_u32	$s0, [$s0], $s0;
	atomic_inc_rlx_wv_equiv(2)_u32	$s0, [$s0], $s0;
	atomic_inc_rlx_wv_equiv(255)_u32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	atomic_inc_global_rlx_wv_u32	$s0, [&GlobalVar], $s0;
	// 
	atomic_inc_global_acq_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_inc_global_rel_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_inc_global_ar_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_inc_global_rlx_wg_u32	$s0, [&GlobalVar], $s0;
	atomic_inc_global_rlx_cmp_u32	$s0, [&GlobalVar], $s0;
	atomic_inc_global_rlx_sys_u32	$s0, [&GlobalVar], $s0;
	atomic_inc_global_rlx_wv_u32	$s0, [&GlobalVar], 4294967295;
	atomic_inc_global_rlx_wv_u32	$s0, [&GlobalVar], WAVESIZE;
	atomic_inc_global_rlx_wv_u32	$s0, [&GlobalROImg], $s0;
	atomic_inc_global_rlx_wv_u32	$s0, [&GlobalRWImg], $s0;
	atomic_inc_global_rlx_wv_u32	$s0, [&GlobalSamp], $s0;
	atomic_inc_global_rlx_wv_u32	$s0, [&GlobalSig32], $s0;
	atomic_inc_global_rlx_wv_u32	$s0, [&GlobalSig64], $s0;
	atomic_inc_global_rlx_wv_u32	$s0, [$s0], $s0;
	atomic_inc_global_rlx_wv_u32	$s0, [0], $s0;
	atomic_inc_global_rlx_wv_equiv(1)_u32	$s0, [&GlobalVar], $s0;
	atomic_inc_global_rlx_wv_equiv(2)_u32	$s0, [&GlobalVar], $s0;
	atomic_inc_global_rlx_wv_equiv(255)_u32	$s0, [&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomic_inc_group_rlx_wv_u32	$s0, [&GroupVar], $s0;
	// 
	atomic_inc_group_acq_wv_u32	$s0, [&GroupVar], $s0;
	atomic_inc_group_rel_wv_u32	$s0, [&GroupVar], $s0;
	atomic_inc_group_ar_wv_u32	$s0, [&GroupVar], $s0;
	atomic_inc_group_rlx_wg_u32	$s0, [&GroupVar], $s0;
	atomic_inc_group_rlx_wv_u32	$s0, [&GroupVar], 4294967295;
	atomic_inc_group_rlx_wv_u32	$s0, [&GroupVar], WAVESIZE;
	atomic_inc_group_rlx_wv_u32	$s0, [$s0], $s0;
	atomic_inc_group_rlx_wv_u32	$s0, [0], $s0;
	atomic_inc_group_rlx_wv_equiv(1)_u32	$s0, [&GroupVar], $s0;
	atomic_inc_group_rlx_wv_equiv(2)_u32	$s0, [&GroupVar], $s0;
	atomic_inc_group_rlx_wv_equiv(255)_u32	$s0, [&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomic_max_rlx_wv_u32	$s0, [$s0], $s0;
	// 
	atomic_max_acq_wv_u32	$s0, [$s0], $s0;
	atomic_max_rel_wv_u32	$s0, [$s0], $s0;
	atomic_max_ar_wv_u32	$s0, [$s0], $s0;
	atomic_max_rlx_wg_u32	$s0, [$s0], $s0;
	atomic_max_rlx_cmp_u32	$s0, [$s0], $s0;
	atomic_max_rlx_sys_u32	$s0, [$s0], $s0;
	atomic_max_rlx_wv_u32	$s0, [$s0], 4294967295;
	atomic_max_rlx_wv_u32	$s0, [$s0], WAVESIZE;
	atomic_max_rlx_wv_u32	$s0, [0], $s0;
	atomic_max_rlx_wv_equiv(1)_u32	$s0, [$s0], $s0;
	atomic_max_rlx_wv_equiv(2)_u32	$s0, [$s0], $s0;
	atomic_max_rlx_wv_equiv(255)_u32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	atomic_max_global_rlx_wv_u32	$s0, [&GlobalVar], $s0;
	// 
	atomic_max_global_acq_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_max_global_rel_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_max_global_ar_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_max_global_rlx_wg_u32	$s0, [&GlobalVar], $s0;
	atomic_max_global_rlx_cmp_u32	$s0, [&GlobalVar], $s0;
	atomic_max_global_rlx_sys_u32	$s0, [&GlobalVar], $s0;
	atomic_max_global_rlx_wv_u32	$s0, [&GlobalVar], 4294967295;
	atomic_max_global_rlx_wv_u32	$s0, [&GlobalVar], WAVESIZE;
	atomic_max_global_rlx_wv_u32	$s0, [&GlobalROImg], $s0;
	atomic_max_global_rlx_wv_u32	$s0, [&GlobalRWImg], $s0;
	atomic_max_global_rlx_wv_u32	$s0, [&GlobalSamp], $s0;
	atomic_max_global_rlx_wv_u32	$s0, [&GlobalSig32], $s0;
	atomic_max_global_rlx_wv_u32	$s0, [&GlobalSig64], $s0;
	atomic_max_global_rlx_wv_u32	$s0, [$s0], $s0;
	atomic_max_global_rlx_wv_u32	$s0, [0], $s0;
	atomic_max_global_rlx_wv_equiv(1)_u32	$s0, [&GlobalVar], $s0;
	atomic_max_global_rlx_wv_equiv(2)_u32	$s0, [&GlobalVar], $s0;
	atomic_max_global_rlx_wv_equiv(255)_u32	$s0, [&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomic_max_group_rlx_wv_u32	$s0, [&GroupVar], $s0;
	// 
	atomic_max_group_acq_wv_u32	$s0, [&GroupVar], $s0;
	atomic_max_group_rel_wv_u32	$s0, [&GroupVar], $s0;
	atomic_max_group_ar_wv_u32	$s0, [&GroupVar], $s0;
	atomic_max_group_rlx_wg_u32	$s0, [&GroupVar], $s0;
	atomic_max_group_rlx_wv_u32	$s0, [&GroupVar], 4294967295;
	atomic_max_group_rlx_wv_u32	$s0, [&GroupVar], WAVESIZE;
	atomic_max_group_rlx_wv_u32	$s0, [$s0], $s0;
	atomic_max_group_rlx_wv_u32	$s0, [0], $s0;
	atomic_max_group_rlx_wv_equiv(1)_u32	$s0, [&GroupVar], $s0;
	atomic_max_group_rlx_wv_equiv(2)_u32	$s0, [&GroupVar], $s0;
	atomic_max_group_rlx_wv_equiv(255)_u32	$s0, [&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomic_min_rlx_wv_u32	$s0, [$s0], $s0;
	// 
	atomic_min_acq_wv_u32	$s0, [$s0], $s0;
	atomic_min_rel_wv_u32	$s0, [$s0], $s0;
	atomic_min_ar_wv_u32	$s0, [$s0], $s0;
	atomic_min_rlx_wg_u32	$s0, [$s0], $s0;
	atomic_min_rlx_cmp_u32	$s0, [$s0], $s0;
	atomic_min_rlx_sys_u32	$s0, [$s0], $s0;
	atomic_min_rlx_wv_u32	$s0, [$s0], 4294967295;
	atomic_min_rlx_wv_u32	$s0, [$s0], WAVESIZE;
	atomic_min_rlx_wv_u32	$s0, [0], $s0;
	atomic_min_rlx_wv_equiv(1)_u32	$s0, [$s0], $s0;
	atomic_min_rlx_wv_equiv(2)_u32	$s0, [$s0], $s0;
	atomic_min_rlx_wv_equiv(255)_u32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	atomic_min_global_rlx_wv_u32	$s0, [&GlobalVar], $s0;
	// 
	atomic_min_global_acq_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_min_global_rel_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_min_global_ar_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_min_global_rlx_wg_u32	$s0, [&GlobalVar], $s0;
	atomic_min_global_rlx_cmp_u32	$s0, [&GlobalVar], $s0;
	atomic_min_global_rlx_sys_u32	$s0, [&GlobalVar], $s0;
	atomic_min_global_rlx_wv_u32	$s0, [&GlobalVar], 4294967295;
	atomic_min_global_rlx_wv_u32	$s0, [&GlobalVar], WAVESIZE;
	atomic_min_global_rlx_wv_u32	$s0, [&GlobalROImg], $s0;
	atomic_min_global_rlx_wv_u32	$s0, [&GlobalRWImg], $s0;
	atomic_min_global_rlx_wv_u32	$s0, [&GlobalSamp], $s0;
	atomic_min_global_rlx_wv_u32	$s0, [&GlobalSig32], $s0;
	atomic_min_global_rlx_wv_u32	$s0, [&GlobalSig64], $s0;
	atomic_min_global_rlx_wv_u32	$s0, [$s0], $s0;
	atomic_min_global_rlx_wv_u32	$s0, [0], $s0;
	atomic_min_global_rlx_wv_equiv(1)_u32	$s0, [&GlobalVar], $s0;
	atomic_min_global_rlx_wv_equiv(2)_u32	$s0, [&GlobalVar], $s0;
	atomic_min_global_rlx_wv_equiv(255)_u32	$s0, [&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomic_min_group_rlx_wv_u32	$s0, [&GroupVar], $s0;
	// 
	atomic_min_group_acq_wv_u32	$s0, [&GroupVar], $s0;
	atomic_min_group_rel_wv_u32	$s0, [&GroupVar], $s0;
	atomic_min_group_ar_wv_u32	$s0, [&GroupVar], $s0;
	atomic_min_group_rlx_wg_u32	$s0, [&GroupVar], $s0;
	atomic_min_group_rlx_wv_u32	$s0, [&GroupVar], 4294967295;
	atomic_min_group_rlx_wv_u32	$s0, [&GroupVar], WAVESIZE;
	atomic_min_group_rlx_wv_u32	$s0, [$s0], $s0;
	atomic_min_group_rlx_wv_u32	$s0, [0], $s0;
	atomic_min_group_rlx_wv_equiv(1)_u32	$s0, [&GroupVar], $s0;
	atomic_min_group_rlx_wv_equiv(2)_u32	$s0, [&GroupVar], $s0;
	atomic_min_group_rlx_wv_equiv(255)_u32	$s0, [&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomic_sub_rlx_wv_u32	$s0, [$s0], $s0;
	// 
	atomic_sub_acq_wv_u32	$s0, [$s0], $s0;
	atomic_sub_rel_wv_u32	$s0, [$s0], $s0;
	atomic_sub_ar_wv_u32	$s0, [$s0], $s0;
	atomic_sub_rlx_wg_u32	$s0, [$s0], $s0;
	atomic_sub_rlx_cmp_u32	$s0, [$s0], $s0;
	atomic_sub_rlx_sys_u32	$s0, [$s0], $s0;
	atomic_sub_rlx_wv_u32	$s0, [$s0], 4294967295;
	atomic_sub_rlx_wv_u32	$s0, [$s0], WAVESIZE;
	atomic_sub_rlx_wv_u32	$s0, [0], $s0;
	atomic_sub_rlx_wv_equiv(1)_u32	$s0, [$s0], $s0;
	atomic_sub_rlx_wv_equiv(2)_u32	$s0, [$s0], $s0;
	atomic_sub_rlx_wv_equiv(255)_u32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	atomic_sub_global_rlx_wv_u32	$s0, [&GlobalVar], $s0;
	// 
	atomic_sub_global_acq_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_rel_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_ar_wv_u32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_rlx_wg_u32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_rlx_cmp_u32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_rlx_sys_u32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_rlx_wv_u32	$s0, [&GlobalVar], 4294967295;
	atomic_sub_global_rlx_wv_u32	$s0, [&GlobalVar], WAVESIZE;
	atomic_sub_global_rlx_wv_u32	$s0, [&GlobalROImg], $s0;
	atomic_sub_global_rlx_wv_u32	$s0, [&GlobalRWImg], $s0;
	atomic_sub_global_rlx_wv_u32	$s0, [&GlobalSamp], $s0;
	atomic_sub_global_rlx_wv_u32	$s0, [&GlobalSig32], $s0;
	atomic_sub_global_rlx_wv_u32	$s0, [&GlobalSig64], $s0;
	atomic_sub_global_rlx_wv_u32	$s0, [$s0], $s0;
	atomic_sub_global_rlx_wv_u32	$s0, [0], $s0;
	atomic_sub_global_rlx_wv_equiv(1)_u32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_rlx_wv_equiv(2)_u32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_rlx_wv_equiv(255)_u32	$s0, [&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomic_sub_group_rlx_wv_u32	$s0, [&GroupVar], $s0;
	// 
	atomic_sub_group_acq_wv_u32	$s0, [&GroupVar], $s0;
	atomic_sub_group_rel_wv_u32	$s0, [&GroupVar], $s0;
	atomic_sub_group_ar_wv_u32	$s0, [&GroupVar], $s0;
	atomic_sub_group_rlx_wg_u32	$s0, [&GroupVar], $s0;
	atomic_sub_group_rlx_wv_u32	$s0, [&GroupVar], 4294967295;
	atomic_sub_group_rlx_wv_u32	$s0, [&GroupVar], WAVESIZE;
	atomic_sub_group_rlx_wv_u32	$s0, [$s0], $s0;
	atomic_sub_group_rlx_wv_u32	$s0, [0], $s0;
	atomic_sub_group_rlx_wv_equiv(1)_u32	$s0, [&GroupVar], $s0;
	atomic_sub_group_rlx_wv_equiv(2)_u32	$s0, [&GroupVar], $s0;
	atomic_sub_group_rlx_wv_equiv(255)_u32	$s0, [&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomic_add_rlx_wv_s32	$s0, [$s0], $s0;
	// 
	atomic_add_acq_wv_s32	$s0, [$s0], $s0;
	atomic_add_rel_wv_s32	$s0, [$s0], $s0;
	atomic_add_ar_wv_s32	$s0, [$s0], $s0;
	atomic_add_rlx_wg_s32	$s0, [$s0], $s0;
	atomic_add_rlx_cmp_s32	$s0, [$s0], $s0;
	atomic_add_rlx_sys_s32	$s0, [$s0], $s0;
	atomic_add_rlx_wv_s32	$s0, [$s0], -1;
	atomic_add_rlx_wv_s32	$s0, [$s0], WAVESIZE;
	atomic_add_rlx_wv_s32	$s0, [0], $s0;
	atomic_add_rlx_wv_equiv(1)_s32	$s0, [$s0], $s0;
	atomic_add_rlx_wv_equiv(2)_s32	$s0, [$s0], $s0;
	atomic_add_rlx_wv_equiv(255)_s32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	atomic_add_global_rlx_wv_s32	$s0, [&GlobalVar], $s0;
	// 
	atomic_add_global_acq_wv_s32	$s0, [&GlobalVar], $s0;
	atomic_add_global_rel_wv_s32	$s0, [&GlobalVar], $s0;
	atomic_add_global_ar_wv_s32	$s0, [&GlobalVar], $s0;
	atomic_add_global_rlx_wg_s32	$s0, [&GlobalVar], $s0;
	atomic_add_global_rlx_cmp_s32	$s0, [&GlobalVar], $s0;
	atomic_add_global_rlx_sys_s32	$s0, [&GlobalVar], $s0;
	atomic_add_global_rlx_wv_s32	$s0, [&GlobalVar], -1;
	atomic_add_global_rlx_wv_s32	$s0, [&GlobalVar], WAVESIZE;
	atomic_add_global_rlx_wv_s32	$s0, [&GlobalROImg], $s0;
	atomic_add_global_rlx_wv_s32	$s0, [&GlobalRWImg], $s0;
	atomic_add_global_rlx_wv_s32	$s0, [&GlobalSamp], $s0;
	atomic_add_global_rlx_wv_s32	$s0, [&GlobalSig32], $s0;
	atomic_add_global_rlx_wv_s32	$s0, [&GlobalSig64], $s0;
	atomic_add_global_rlx_wv_s32	$s0, [$s0], $s0;
	atomic_add_global_rlx_wv_s32	$s0, [0], $s0;
	atomic_add_global_rlx_wv_equiv(1)_s32	$s0, [&GlobalVar], $s0;
	atomic_add_global_rlx_wv_equiv(2)_s32	$s0, [&GlobalVar], $s0;
	atomic_add_global_rlx_wv_equiv(255)_s32	$s0, [&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomic_add_group_rlx_wv_s32	$s0, [&GroupVar], $s0;
	// 
	atomic_add_group_acq_wv_s32	$s0, [&GroupVar], $s0;
	atomic_add_group_rel_wv_s32	$s0, [&GroupVar], $s0;
	atomic_add_group_ar_wv_s32	$s0, [&GroupVar], $s0;
	atomic_add_group_rlx_wg_s32	$s0, [&GroupVar], $s0;
	atomic_add_group_rlx_wv_s32	$s0, [&GroupVar], -1;
	atomic_add_group_rlx_wv_s32	$s0, [&GroupVar], WAVESIZE;
	atomic_add_group_rlx_wv_s32	$s0, [$s0], $s0;
	atomic_add_group_rlx_wv_s32	$s0, [0], $s0;
	atomic_add_group_rlx_wv_equiv(1)_s32	$s0, [&GroupVar], $s0;
	atomic_add_group_rlx_wv_equiv(2)_s32	$s0, [&GroupVar], $s0;
	atomic_add_group_rlx_wv_equiv(255)_s32	$s0, [&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomic_max_rlx_wv_s32	$s0, [$s0], $s0;
	// 
	atomic_max_acq_wv_s32	$s0, [$s0], $s0;
	atomic_max_rel_wv_s32	$s0, [$s0], $s0;
	atomic_max_ar_wv_s32	$s0, [$s0], $s0;
	atomic_max_rlx_wg_s32	$s0, [$s0], $s0;
	atomic_max_rlx_cmp_s32	$s0, [$s0], $s0;
	atomic_max_rlx_sys_s32	$s0, [$s0], $s0;
	atomic_max_rlx_wv_s32	$s0, [$s0], -1;
	atomic_max_rlx_wv_s32	$s0, [$s0], WAVESIZE;
	atomic_max_rlx_wv_s32	$s0, [0], $s0;
	atomic_max_rlx_wv_equiv(1)_s32	$s0, [$s0], $s0;
	atomic_max_rlx_wv_equiv(2)_s32	$s0, [$s0], $s0;
	atomic_max_rlx_wv_equiv(255)_s32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	atomic_max_global_rlx_wv_s32	$s0, [&GlobalVar], $s0;
	// 
	atomic_max_global_acq_wv_s32	$s0, [&GlobalVar], $s0;
	atomic_max_global_rel_wv_s32	$s0, [&GlobalVar], $s0;
	atomic_max_global_ar_wv_s32	$s0, [&GlobalVar], $s0;
	atomic_max_global_rlx_wg_s32	$s0, [&GlobalVar], $s0;
	atomic_max_global_rlx_cmp_s32	$s0, [&GlobalVar], $s0;
	atomic_max_global_rlx_sys_s32	$s0, [&GlobalVar], $s0;
	atomic_max_global_rlx_wv_s32	$s0, [&GlobalVar], -1;
	atomic_max_global_rlx_wv_s32	$s0, [&GlobalVar], WAVESIZE;
	atomic_max_global_rlx_wv_s32	$s0, [&GlobalROImg], $s0;
	atomic_max_global_rlx_wv_s32	$s0, [&GlobalRWImg], $s0;
	atomic_max_global_rlx_wv_s32	$s0, [&GlobalSamp], $s0;
	atomic_max_global_rlx_wv_s32	$s0, [&GlobalSig32], $s0;
	atomic_max_global_rlx_wv_s32	$s0, [&GlobalSig64], $s0;
	atomic_max_global_rlx_wv_s32	$s0, [$s0], $s0;
	atomic_max_global_rlx_wv_s32	$s0, [0], $s0;
	atomic_max_global_rlx_wv_equiv(1)_s32	$s0, [&GlobalVar], $s0;
	atomic_max_global_rlx_wv_equiv(2)_s32	$s0, [&GlobalVar], $s0;
	atomic_max_global_rlx_wv_equiv(255)_s32	$s0, [&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomic_max_group_rlx_wv_s32	$s0, [&GroupVar], $s0;
	// 
	atomic_max_group_acq_wv_s32	$s0, [&GroupVar], $s0;
	atomic_max_group_rel_wv_s32	$s0, [&GroupVar], $s0;
	atomic_max_group_ar_wv_s32	$s0, [&GroupVar], $s0;
	atomic_max_group_rlx_wg_s32	$s0, [&GroupVar], $s0;
	atomic_max_group_rlx_wv_s32	$s0, [&GroupVar], -1;
	atomic_max_group_rlx_wv_s32	$s0, [&GroupVar], WAVESIZE;
	atomic_max_group_rlx_wv_s32	$s0, [$s0], $s0;
	atomic_max_group_rlx_wv_s32	$s0, [0], $s0;
	atomic_max_group_rlx_wv_equiv(1)_s32	$s0, [&GroupVar], $s0;
	atomic_max_group_rlx_wv_equiv(2)_s32	$s0, [&GroupVar], $s0;
	atomic_max_group_rlx_wv_equiv(255)_s32	$s0, [&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomic_min_rlx_wv_s32	$s0, [$s0], $s0;
	// 
	atomic_min_acq_wv_s32	$s0, [$s0], $s0;
	atomic_min_rel_wv_s32	$s0, [$s0], $s0;
	atomic_min_ar_wv_s32	$s0, [$s0], $s0;
	atomic_min_rlx_wg_s32	$s0, [$s0], $s0;
	atomic_min_rlx_cmp_s32	$s0, [$s0], $s0;
	atomic_min_rlx_sys_s32	$s0, [$s0], $s0;
	atomic_min_rlx_wv_s32	$s0, [$s0], -1;
	atomic_min_rlx_wv_s32	$s0, [$s0], WAVESIZE;
	atomic_min_rlx_wv_s32	$s0, [0], $s0;
	atomic_min_rlx_wv_equiv(1)_s32	$s0, [$s0], $s0;
	atomic_min_rlx_wv_equiv(2)_s32	$s0, [$s0], $s0;
	atomic_min_rlx_wv_equiv(255)_s32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	atomic_min_global_rlx_wv_s32	$s0, [&GlobalVar], $s0;
	// 
	atomic_min_global_acq_wv_s32	$s0, [&GlobalVar], $s0;
	atomic_min_global_rel_wv_s32	$s0, [&GlobalVar], $s0;
	atomic_min_global_ar_wv_s32	$s0, [&GlobalVar], $s0;
	atomic_min_global_rlx_wg_s32	$s0, [&GlobalVar], $s0;
	atomic_min_global_rlx_cmp_s32	$s0, [&GlobalVar], $s0;
	atomic_min_global_rlx_sys_s32	$s0, [&GlobalVar], $s0;
	atomic_min_global_rlx_wv_s32	$s0, [&GlobalVar], -1;
	atomic_min_global_rlx_wv_s32	$s0, [&GlobalVar], WAVESIZE;
	atomic_min_global_rlx_wv_s32	$s0, [&GlobalROImg], $s0;
	atomic_min_global_rlx_wv_s32	$s0, [&GlobalRWImg], $s0;
	atomic_min_global_rlx_wv_s32	$s0, [&GlobalSamp], $s0;
	atomic_min_global_rlx_wv_s32	$s0, [&GlobalSig32], $s0;
	atomic_min_global_rlx_wv_s32	$s0, [&GlobalSig64], $s0;
	atomic_min_global_rlx_wv_s32	$s0, [$s0], $s0;
	atomic_min_global_rlx_wv_s32	$s0, [0], $s0;
	atomic_min_global_rlx_wv_equiv(1)_s32	$s0, [&GlobalVar], $s0;
	atomic_min_global_rlx_wv_equiv(2)_s32	$s0, [&GlobalVar], $s0;
	atomic_min_global_rlx_wv_equiv(255)_s32	$s0, [&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomic_min_group_rlx_wv_s32	$s0, [&GroupVar], $s0;
	// 
	atomic_min_group_acq_wv_s32	$s0, [&GroupVar], $s0;
	atomic_min_group_rel_wv_s32	$s0, [&GroupVar], $s0;
	atomic_min_group_ar_wv_s32	$s0, [&GroupVar], $s0;
	atomic_min_group_rlx_wg_s32	$s0, [&GroupVar], $s0;
	atomic_min_group_rlx_wv_s32	$s0, [&GroupVar], -1;
	atomic_min_group_rlx_wv_s32	$s0, [&GroupVar], WAVESIZE;
	atomic_min_group_rlx_wv_s32	$s0, [$s0], $s0;
	atomic_min_group_rlx_wv_s32	$s0, [0], $s0;
	atomic_min_group_rlx_wv_equiv(1)_s32	$s0, [&GroupVar], $s0;
	atomic_min_group_rlx_wv_equiv(2)_s32	$s0, [&GroupVar], $s0;
	atomic_min_group_rlx_wv_equiv(255)_s32	$s0, [&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomic_sub_rlx_wv_s32	$s0, [$s0], $s0;
	// 
	atomic_sub_acq_wv_s32	$s0, [$s0], $s0;
	atomic_sub_rel_wv_s32	$s0, [$s0], $s0;
	atomic_sub_ar_wv_s32	$s0, [$s0], $s0;
	atomic_sub_rlx_wg_s32	$s0, [$s0], $s0;
	atomic_sub_rlx_cmp_s32	$s0, [$s0], $s0;
	atomic_sub_rlx_sys_s32	$s0, [$s0], $s0;
	atomic_sub_rlx_wv_s32	$s0, [$s0], -1;
	atomic_sub_rlx_wv_s32	$s0, [$s0], WAVESIZE;
	atomic_sub_rlx_wv_s32	$s0, [0], $s0;
	atomic_sub_rlx_wv_equiv(1)_s32	$s0, [$s0], $s0;
	atomic_sub_rlx_wv_equiv(2)_s32	$s0, [$s0], $s0;
	atomic_sub_rlx_wv_equiv(255)_s32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	atomic_sub_global_rlx_wv_s32	$s0, [&GlobalVar], $s0;
	// 
	atomic_sub_global_acq_wv_s32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_rel_wv_s32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_ar_wv_s32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_rlx_wg_s32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_rlx_cmp_s32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_rlx_sys_s32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_rlx_wv_s32	$s0, [&GlobalVar], -1;
	atomic_sub_global_rlx_wv_s32	$s0, [&GlobalVar], WAVESIZE;
	atomic_sub_global_rlx_wv_s32	$s0, [&GlobalROImg], $s0;
	atomic_sub_global_rlx_wv_s32	$s0, [&GlobalRWImg], $s0;
	atomic_sub_global_rlx_wv_s32	$s0, [&GlobalSamp], $s0;
	atomic_sub_global_rlx_wv_s32	$s0, [&GlobalSig32], $s0;
	atomic_sub_global_rlx_wv_s32	$s0, [&GlobalSig64], $s0;
	atomic_sub_global_rlx_wv_s32	$s0, [$s0], $s0;
	atomic_sub_global_rlx_wv_s32	$s0, [0], $s0;
	atomic_sub_global_rlx_wv_equiv(1)_s32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_rlx_wv_equiv(2)_s32	$s0, [&GlobalVar], $s0;
	atomic_sub_global_rlx_wv_equiv(255)_s32	$s0, [&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomic_sub_group_rlx_wv_s32	$s0, [&GroupVar], $s0;
	// 
	atomic_sub_group_acq_wv_s32	$s0, [&GroupVar], $s0;
	atomic_sub_group_rel_wv_s32	$s0, [&GroupVar], $s0;
	atomic_sub_group_ar_wv_s32	$s0, [&GroupVar], $s0;
	atomic_sub_group_rlx_wg_s32	$s0, [&GroupVar], $s0;
	atomic_sub_group_rlx_wv_s32	$s0, [&GroupVar], -1;
	atomic_sub_group_rlx_wv_s32	$s0, [&GroupVar], WAVESIZE;
	atomic_sub_group_rlx_wv_s32	$s0, [$s0], $s0;
	atomic_sub_group_rlx_wv_s32	$s0, [0], $s0;
	atomic_sub_group_rlx_wv_equiv(1)_s32	$s0, [&GroupVar], $s0;
	atomic_sub_group_rlx_wv_equiv(2)_s32	$s0, [&GroupVar], $s0;
	atomic_sub_group_rlx_wv_equiv(255)_s32	$s0, [&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomic_and_rlx_wv_b32	$s0, [$s0], $s0;
	// 
	atomic_and_acq_wv_b32	$s0, [$s0], $s0;
	atomic_and_rel_wv_b32	$s0, [$s0], $s0;
	atomic_and_ar_wv_b32	$s0, [$s0], $s0;
	atomic_and_rlx_wg_b32	$s0, [$s0], $s0;
	atomic_and_rlx_cmp_b32	$s0, [$s0], $s0;
	atomic_and_rlx_sys_b32	$s0, [$s0], $s0;
	atomic_and_rlx_wv_b32	$s0, [$s0], 4294967295;
	atomic_and_rlx_wv_b32	$s0, [$s0], WAVESIZE;
	atomic_and_rlx_wv_b32	$s0, [0], $s0;
	atomic_and_rlx_wv_equiv(1)_b32	$s0, [$s0], $s0;
	atomic_and_rlx_wv_equiv(2)_b32	$s0, [$s0], $s0;
	atomic_and_rlx_wv_equiv(255)_b32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	atomic_and_global_rlx_wv_b32	$s0, [&GlobalVar], $s0;
	// 
	atomic_and_global_acq_wv_b32	$s0, [&GlobalVar], $s0;
	atomic_and_global_rel_wv_b32	$s0, [&GlobalVar], $s0;
	atomic_and_global_ar_wv_b32	$s0, [&GlobalVar], $s0;
	atomic_and_global_rlx_wg_b32	$s0, [&GlobalVar], $s0;
	atomic_and_global_rlx_cmp_b32	$s0, [&GlobalVar], $s0;
	atomic_and_global_rlx_sys_b32	$s0, [&GlobalVar], $s0;
	atomic_and_global_rlx_wv_b32	$s0, [&GlobalVar], 4294967295;
	atomic_and_global_rlx_wv_b32	$s0, [&GlobalVar], WAVESIZE;
	atomic_and_global_rlx_wv_b32	$s0, [&GlobalROImg], $s0;
	atomic_and_global_rlx_wv_b32	$s0, [&GlobalRWImg], $s0;
	atomic_and_global_rlx_wv_b32	$s0, [&GlobalSamp], $s0;
	atomic_and_global_rlx_wv_b32	$s0, [&GlobalSig32], $s0;
	atomic_and_global_rlx_wv_b32	$s0, [&GlobalSig64], $s0;
	atomic_and_global_rlx_wv_b32	$s0, [$s0], $s0;
	atomic_and_global_rlx_wv_b32	$s0, [0], $s0;
	atomic_and_global_rlx_wv_equiv(1)_b32	$s0, [&GlobalVar], $s0;
	atomic_and_global_rlx_wv_equiv(2)_b32	$s0, [&GlobalVar], $s0;
	atomic_and_global_rlx_wv_equiv(255)_b32	$s0, [&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomic_and_group_rlx_wv_b32	$s0, [&GroupVar], $s0;
	// 
	atomic_and_group_acq_wv_b32	$s0, [&GroupVar], $s0;
	atomic_and_group_rel_wv_b32	$s0, [&GroupVar], $s0;
	atomic_and_group_ar_wv_b32	$s0, [&GroupVar], $s0;
	atomic_and_group_rlx_wg_b32	$s0, [&GroupVar], $s0;
	atomic_and_group_rlx_wv_b32	$s0, [&GroupVar], 4294967295;
	atomic_and_group_rlx_wv_b32	$s0, [&GroupVar], WAVESIZE;
	atomic_and_group_rlx_wv_b32	$s0, [$s0], $s0;
	atomic_and_group_rlx_wv_b32	$s0, [0], $s0;
	atomic_and_group_rlx_wv_equiv(1)_b32	$s0, [&GroupVar], $s0;
	atomic_and_group_rlx_wv_equiv(2)_b32	$s0, [&GroupVar], $s0;
	atomic_and_group_rlx_wv_equiv(255)_b32	$s0, [&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomic_cas_rlx_wv_b32	$s0, [$s0], $s0, $s0;
	// 
	atomic_cas_acq_wv_b32	$s0, [$s0], $s0, $s0;
	atomic_cas_rel_wv_b32	$s0, [$s0], $s0, $s0;
	atomic_cas_ar_wv_b32	$s0, [$s0], $s0, $s0;
	atomic_cas_rlx_wg_b32	$s0, [$s0], $s0, $s0;
	atomic_cas_rlx_cmp_b32	$s0, [$s0], $s0, $s0;
	atomic_cas_rlx_sys_b32	$s0, [$s0], $s0, $s0;
	atomic_cas_rlx_wv_b32	$s0, [$s0], 4294967295, $s0;
	atomic_cas_rlx_wv_b32	$s0, [$s0], WAVESIZE, $s0;
	atomic_cas_rlx_wv_b32	$s0, [$s0], $s0, 4294967295;
	atomic_cas_rlx_wv_b32	$s0, [$s0], $s0, WAVESIZE;
	atomic_cas_rlx_wv_b32	$s0, [0], $s0, $s0;
	atomic_cas_rlx_wv_equiv(1)_b32	$s0, [$s0], $s0, $s0;
	atomic_cas_rlx_wv_equiv(2)_b32	$s0, [$s0], $s0, $s0;
	atomic_cas_rlx_wv_equiv(255)_b32	$s0, [$s0], $s0, $s0;
	// 
	// Next sample
	// 
	atomic_cas_global_rlx_wv_b32	$s0, [&GlobalVar], $s0, $s0;
	// 
	atomic_cas_global_acq_wv_b32	$s0, [&GlobalVar], $s0, $s0;
	atomic_cas_global_rel_wv_b32	$s0, [&GlobalVar], $s0, $s0;
	atomic_cas_global_ar_wv_b32	$s0, [&GlobalVar], $s0, $s0;
	atomic_cas_global_rlx_wg_b32	$s0, [&GlobalVar], $s0, $s0;
	atomic_cas_global_rlx_cmp_b32	$s0, [&GlobalVar], $s0, $s0;
	atomic_cas_global_rlx_sys_b32	$s0, [&GlobalVar], $s0, $s0;
	atomic_cas_global_rlx_wv_b32	$s0, [&GlobalVar], 4294967295, $s0;
	atomic_cas_global_rlx_wv_b32	$s0, [&GlobalVar], WAVESIZE, $s0;
	atomic_cas_global_rlx_wv_b32	$s0, [&GlobalVar], $s0, 4294967295;
	atomic_cas_global_rlx_wv_b32	$s0, [&GlobalVar], $s0, WAVESIZE;
	atomic_cas_global_rlx_wv_b32	$s0, [&GlobalROImg], $s0, $s0;
	atomic_cas_global_rlx_wv_b32	$s0, [&GlobalRWImg], $s0, $s0;
	atomic_cas_global_rlx_wv_b32	$s0, [&GlobalSamp], $s0, $s0;
	atomic_cas_global_rlx_wv_b32	$s0, [&GlobalSig32], $s0, $s0;
	atomic_cas_global_rlx_wv_b32	$s0, [&GlobalSig64], $s0, $s0;
	atomic_cas_global_rlx_wv_b32	$s0, [$s0], $s0, $s0;
	atomic_cas_global_rlx_wv_b32	$s0, [0], $s0, $s0;
	atomic_cas_global_rlx_wv_equiv(1)_b32	$s0, [&GlobalVar], $s0, $s0;
	atomic_cas_global_rlx_wv_equiv(2)_b32	$s0, [&GlobalVar], $s0, $s0;
	atomic_cas_global_rlx_wv_equiv(255)_b32	$s0, [&GlobalVar], $s0, $s0;
	// 
	// Next sample
	// 
	atomic_cas_group_rlx_wv_b32	$s0, [&GroupVar], $s0, $s0;
	// 
	atomic_cas_group_acq_wv_b32	$s0, [&GroupVar], $s0, $s0;
	atomic_cas_group_rel_wv_b32	$s0, [&GroupVar], $s0, $s0;
	atomic_cas_group_ar_wv_b32	$s0, [&GroupVar], $s0, $s0;
	atomic_cas_group_rlx_wg_b32	$s0, [&GroupVar], $s0, $s0;
	atomic_cas_group_rlx_wv_b32	$s0, [&GroupVar], 4294967295, $s0;
	atomic_cas_group_rlx_wv_b32	$s0, [&GroupVar], WAVESIZE, $s0;
	atomic_cas_group_rlx_wv_b32	$s0, [&GroupVar], $s0, 4294967295;
	atomic_cas_group_rlx_wv_b32	$s0, [&GroupVar], $s0, WAVESIZE;
	atomic_cas_group_rlx_wv_b32	$s0, [$s0], $s0, $s0;
	atomic_cas_group_rlx_wv_b32	$s0, [0], $s0, $s0;
	atomic_cas_group_rlx_wv_equiv(1)_b32	$s0, [&GroupVar], $s0, $s0;
	atomic_cas_group_rlx_wv_equiv(2)_b32	$s0, [&GroupVar], $s0, $s0;
	atomic_cas_group_rlx_wv_equiv(255)_b32	$s0, [&GroupVar], $s0, $s0;
	// 
	// Next sample
	// 
	atomic_exch_rlx_wv_b32	$s0, [$s0], $s0;
	// 
	atomic_exch_acq_wv_b32	$s0, [$s0], $s0;
	atomic_exch_rel_wv_b32	$s0, [$s0], $s0;
	atomic_exch_ar_wv_b32	$s0, [$s0], $s0;
	atomic_exch_rlx_wg_b32	$s0, [$s0], $s0;
	atomic_exch_rlx_cmp_b32	$s0, [$s0], $s0;
	atomic_exch_rlx_sys_b32	$s0, [$s0], $s0;
	atomic_exch_rlx_wv_b32	$s0, [$s0], 4294967295;
	atomic_exch_rlx_wv_b32	$s0, [$s0], WAVESIZE;
	atomic_exch_rlx_wv_b32	$s0, [0], $s0;
	atomic_exch_rlx_wv_equiv(1)_b32	$s0, [$s0], $s0;
	atomic_exch_rlx_wv_equiv(2)_b32	$s0, [$s0], $s0;
	atomic_exch_rlx_wv_equiv(255)_b32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	atomic_exch_global_rlx_wv_b32	$s0, [&GlobalVar], $s0;
	// 
	atomic_exch_global_acq_wv_b32	$s0, [&GlobalVar], $s0;
	atomic_exch_global_rel_wv_b32	$s0, [&GlobalVar], $s0;
	atomic_exch_global_ar_wv_b32	$s0, [&GlobalVar], $s0;
	atomic_exch_global_rlx_wg_b32	$s0, [&GlobalVar], $s0;
	atomic_exch_global_rlx_cmp_b32	$s0, [&GlobalVar], $s0;
	atomic_exch_global_rlx_sys_b32	$s0, [&GlobalVar], $s0;
	atomic_exch_global_rlx_wv_b32	$s0, [&GlobalVar], 4294967295;
	atomic_exch_global_rlx_wv_b32	$s0, [&GlobalVar], WAVESIZE;
	atomic_exch_global_rlx_wv_b32	$s0, [&GlobalROImg], $s0;
	atomic_exch_global_rlx_wv_b32	$s0, [&GlobalRWImg], $s0;
	atomic_exch_global_rlx_wv_b32	$s0, [&GlobalSamp], $s0;
	atomic_exch_global_rlx_wv_b32	$s0, [&GlobalSig32], $s0;
	atomic_exch_global_rlx_wv_b32	$s0, [&GlobalSig64], $s0;
	atomic_exch_global_rlx_wv_b32	$s0, [$s0], $s0;
	atomic_exch_global_rlx_wv_b32	$s0, [0], $s0;
	atomic_exch_global_rlx_wv_equiv(1)_b32	$s0, [&GlobalVar], $s0;
	atomic_exch_global_rlx_wv_equiv(2)_b32	$s0, [&GlobalVar], $s0;
	atomic_exch_global_rlx_wv_equiv(255)_b32	$s0, [&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomic_exch_group_rlx_wv_b32	$s0, [&GroupVar], $s0;
	// 
	atomic_exch_group_acq_wv_b32	$s0, [&GroupVar], $s0;
	atomic_exch_group_rel_wv_b32	$s0, [&GroupVar], $s0;
	atomic_exch_group_ar_wv_b32	$s0, [&GroupVar], $s0;
	atomic_exch_group_rlx_wg_b32	$s0, [&GroupVar], $s0;
	atomic_exch_group_rlx_wv_b32	$s0, [&GroupVar], 4294967295;
	atomic_exch_group_rlx_wv_b32	$s0, [&GroupVar], WAVESIZE;
	atomic_exch_group_rlx_wv_b32	$s0, [$s0], $s0;
	atomic_exch_group_rlx_wv_b32	$s0, [0], $s0;
	atomic_exch_group_rlx_wv_equiv(1)_b32	$s0, [&GroupVar], $s0;
	atomic_exch_group_rlx_wv_equiv(2)_b32	$s0, [&GroupVar], $s0;
	atomic_exch_group_rlx_wv_equiv(255)_b32	$s0, [&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomic_ld_rlx_wv_b32	$s0, [$s0];
	// 
	atomic_ld_acq_wv_b32	$s0, [$s0];
	atomic_ld_rlx_wg_b32	$s0, [$s0];
	atomic_ld_rlx_cmp_b32	$s0, [$s0];
	atomic_ld_rlx_sys_b32	$s0, [$s0];
	atomic_ld_rlx_wv_b32	$s0, [0];
	atomic_ld_rlx_wv_equiv(1)_b32	$s0, [$s0];
	atomic_ld_rlx_wv_equiv(2)_b32	$s0, [$s0];
	atomic_ld_rlx_wv_equiv(255)_b32	$s0, [$s0];
	// 
	// Next sample
	// 
	atomic_ld_global_rlx_wv_b32	$s0, [&GlobalVar];
	// 
	atomic_ld_global_acq_wv_b32	$s0, [&GlobalVar];
	atomic_ld_global_rlx_wg_b32	$s0, [&GlobalVar];
	atomic_ld_global_rlx_cmp_b32	$s0, [&GlobalVar];
	atomic_ld_global_rlx_sys_b32	$s0, [&GlobalVar];
	atomic_ld_global_rlx_wv_b32	$s0, [&GlobalROImg];
	atomic_ld_global_rlx_wv_b32	$s0, [&GlobalRWImg];
	atomic_ld_global_rlx_wv_b32	$s0, [&GlobalSamp];
	atomic_ld_global_rlx_wv_b32	$s0, [&GlobalSig32];
	atomic_ld_global_rlx_wv_b32	$s0, [&GlobalSig64];
	atomic_ld_global_rlx_wv_b32	$s0, [$s0];
	atomic_ld_global_rlx_wv_b32	$s0, [0];
	atomic_ld_global_rlx_wv_equiv(1)_b32	$s0, [&GlobalVar];
	atomic_ld_global_rlx_wv_equiv(2)_b32	$s0, [&GlobalVar];
	atomic_ld_global_rlx_wv_equiv(255)_b32	$s0, [&GlobalVar];
	// 
	// Next sample
	// 
	atomic_ld_group_rlx_wv_b32	$s0, [&GroupVar];
	// 
	atomic_ld_group_acq_wv_b32	$s0, [&GroupVar];
	atomic_ld_group_rlx_wg_b32	$s0, [&GroupVar];
	atomic_ld_group_rlx_wv_b32	$s0, [$s0];
	atomic_ld_group_rlx_wv_b32	$s0, [0];
	atomic_ld_group_rlx_wv_equiv(1)_b32	$s0, [&GroupVar];
	atomic_ld_group_rlx_wv_equiv(2)_b32	$s0, [&GroupVar];
	atomic_ld_group_rlx_wv_equiv(255)_b32	$s0, [&GroupVar];
	// 
	// Next sample
	// 
	atomic_or_rlx_wv_b32	$s0, [$s0], $s0;
	// 
	atomic_or_acq_wv_b32	$s0, [$s0], $s0;
	atomic_or_rel_wv_b32	$s0, [$s0], $s0;
	atomic_or_ar_wv_b32	$s0, [$s0], $s0;
	atomic_or_rlx_wg_b32	$s0, [$s0], $s0;
	atomic_or_rlx_cmp_b32	$s0, [$s0], $s0;
	atomic_or_rlx_sys_b32	$s0, [$s0], $s0;
	atomic_or_rlx_wv_b32	$s0, [$s0], 4294967295;
	atomic_or_rlx_wv_b32	$s0, [$s0], WAVESIZE;
	atomic_or_rlx_wv_b32	$s0, [0], $s0;
	atomic_or_rlx_wv_equiv(1)_b32	$s0, [$s0], $s0;
	atomic_or_rlx_wv_equiv(2)_b32	$s0, [$s0], $s0;
	atomic_or_rlx_wv_equiv(255)_b32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	atomic_or_global_rlx_wv_b32	$s0, [&GlobalVar], $s0;
	// 
	atomic_or_global_acq_wv_b32	$s0, [&GlobalVar], $s0;
	atomic_or_global_rel_wv_b32	$s0, [&GlobalVar], $s0;
	atomic_or_global_ar_wv_b32	$s0, [&GlobalVar], $s0;
	atomic_or_global_rlx_wg_b32	$s0, [&GlobalVar], $s0;
	atomic_or_global_rlx_cmp_b32	$s0, [&GlobalVar], $s0;
	atomic_or_global_rlx_sys_b32	$s0, [&GlobalVar], $s0;
	atomic_or_global_rlx_wv_b32	$s0, [&GlobalVar], 4294967295;
	atomic_or_global_rlx_wv_b32	$s0, [&GlobalVar], WAVESIZE;
	atomic_or_global_rlx_wv_b32	$s0, [&GlobalROImg], $s0;
	atomic_or_global_rlx_wv_b32	$s0, [&GlobalRWImg], $s0;
	atomic_or_global_rlx_wv_b32	$s0, [&GlobalSamp], $s0;
	atomic_or_global_rlx_wv_b32	$s0, [&GlobalSig32], $s0;
	atomic_or_global_rlx_wv_b32	$s0, [&GlobalSig64], $s0;
	atomic_or_global_rlx_wv_b32	$s0, [$s0], $s0;
	atomic_or_global_rlx_wv_b32	$s0, [0], $s0;
	atomic_or_global_rlx_wv_equiv(1)_b32	$s0, [&GlobalVar], $s0;
	atomic_or_global_rlx_wv_equiv(2)_b32	$s0, [&GlobalVar], $s0;
	atomic_or_global_rlx_wv_equiv(255)_b32	$s0, [&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomic_or_group_rlx_wv_b32	$s0, [&GroupVar], $s0;
	// 
	atomic_or_group_acq_wv_b32	$s0, [&GroupVar], $s0;
	atomic_or_group_rel_wv_b32	$s0, [&GroupVar], $s0;
	atomic_or_group_ar_wv_b32	$s0, [&GroupVar], $s0;
	atomic_or_group_rlx_wg_b32	$s0, [&GroupVar], $s0;
	atomic_or_group_rlx_wv_b32	$s0, [&GroupVar], 4294967295;
	atomic_or_group_rlx_wv_b32	$s0, [&GroupVar], WAVESIZE;
	atomic_or_group_rlx_wv_b32	$s0, [$s0], $s0;
	atomic_or_group_rlx_wv_b32	$s0, [0], $s0;
	atomic_or_group_rlx_wv_equiv(1)_b32	$s0, [&GroupVar], $s0;
	atomic_or_group_rlx_wv_equiv(2)_b32	$s0, [&GroupVar], $s0;
	atomic_or_group_rlx_wv_equiv(255)_b32	$s0, [&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomic_xor_rlx_wv_b32	$s0, [$s0], $s0;
	// 
	atomic_xor_acq_wv_b32	$s0, [$s0], $s0;
	atomic_xor_rel_wv_b32	$s0, [$s0], $s0;
	atomic_xor_ar_wv_b32	$s0, [$s0], $s0;
	atomic_xor_rlx_wg_b32	$s0, [$s0], $s0;
	atomic_xor_rlx_cmp_b32	$s0, [$s0], $s0;
	atomic_xor_rlx_sys_b32	$s0, [$s0], $s0;
	atomic_xor_rlx_wv_b32	$s0, [$s0], 4294967295;
	atomic_xor_rlx_wv_b32	$s0, [$s0], WAVESIZE;
	atomic_xor_rlx_wv_b32	$s0, [0], $s0;
	atomic_xor_rlx_wv_equiv(1)_b32	$s0, [$s0], $s0;
	atomic_xor_rlx_wv_equiv(2)_b32	$s0, [$s0], $s0;
	atomic_xor_rlx_wv_equiv(255)_b32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	atomic_xor_global_rlx_wv_b32	$s0, [&GlobalVar], $s0;
	// 
	atomic_xor_global_acq_wv_b32	$s0, [&GlobalVar], $s0;
	atomic_xor_global_rel_wv_b32	$s0, [&GlobalVar], $s0;
	atomic_xor_global_ar_wv_b32	$s0, [&GlobalVar], $s0;
	atomic_xor_global_rlx_wg_b32	$s0, [&GlobalVar], $s0;
	atomic_xor_global_rlx_cmp_b32	$s0, [&GlobalVar], $s0;
	atomic_xor_global_rlx_sys_b32	$s0, [&GlobalVar], $s0;
	atomic_xor_global_rlx_wv_b32	$s0, [&GlobalVar], 4294967295;
	atomic_xor_global_rlx_wv_b32	$s0, [&GlobalVar], WAVESIZE;
	atomic_xor_global_rlx_wv_b32	$s0, [&GlobalROImg], $s0;
	atomic_xor_global_rlx_wv_b32	$s0, [&GlobalRWImg], $s0;
	atomic_xor_global_rlx_wv_b32	$s0, [&GlobalSamp], $s0;
	atomic_xor_global_rlx_wv_b32	$s0, [&GlobalSig32], $s0;
	atomic_xor_global_rlx_wv_b32	$s0, [&GlobalSig64], $s0;
	atomic_xor_global_rlx_wv_b32	$s0, [$s0], $s0;
	atomic_xor_global_rlx_wv_b32	$s0, [0], $s0;
	atomic_xor_global_rlx_wv_equiv(1)_b32	$s0, [&GlobalVar], $s0;
	atomic_xor_global_rlx_wv_equiv(2)_b32	$s0, [&GlobalVar], $s0;
	atomic_xor_global_rlx_wv_equiv(255)_b32	$s0, [&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomic_xor_group_rlx_wv_b32	$s0, [&GroupVar], $s0;
	// 
	atomic_xor_group_acq_wv_b32	$s0, [&GroupVar], $s0;
	atomic_xor_group_rel_wv_b32	$s0, [&GroupVar], $s0;
	atomic_xor_group_ar_wv_b32	$s0, [&GroupVar], $s0;
	atomic_xor_group_rlx_wg_b32	$s0, [&GroupVar], $s0;
	atomic_xor_group_rlx_wv_b32	$s0, [&GroupVar], 4294967295;
	atomic_xor_group_rlx_wv_b32	$s0, [&GroupVar], WAVESIZE;
	atomic_xor_group_rlx_wv_b32	$s0, [$s0], $s0;
	atomic_xor_group_rlx_wv_b32	$s0, [0], $s0;
	atomic_xor_group_rlx_wv_equiv(1)_b32	$s0, [&GroupVar], $s0;
	atomic_xor_group_rlx_wv_equiv(2)_b32	$s0, [&GroupVar], $s0;
	atomic_xor_group_rlx_wv_equiv(255)_b32	$s0, [&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_add_rlx_wv_u32	[$s0], $s0;
	// 
	atomicnoret_add_acq_wv_u32	[$s0], $s0;
	atomicnoret_add_rel_wv_u32	[$s0], $s0;
	atomicnoret_add_ar_wv_u32	[$s0], $s0;
	atomicnoret_add_rlx_wg_u32	[$s0], $s0;
	atomicnoret_add_rlx_cmp_u32	[$s0], $s0;
	atomicnoret_add_rlx_sys_u32	[$s0], $s0;
	atomicnoret_add_rlx_wv_u32	[0], $s0;
	atomicnoret_add_rlx_wv_u32	[$s0], 4294967295;
	atomicnoret_add_rlx_wv_u32	[$s0], WAVESIZE;
	atomicnoret_add_rlx_wv_equiv(1)_u32	[$s0], $s0;
	atomicnoret_add_rlx_wv_equiv(2)_u32	[$s0], $s0;
	atomicnoret_add_rlx_wv_equiv(255)_u32	[$s0], $s0;
	// 
	// Next sample
	// 
	atomicnoret_add_global_rlx_wv_u32	[&GlobalVar], $s0;
	// 
	atomicnoret_add_global_acq_wv_u32	[&GlobalVar], $s0;
	atomicnoret_add_global_rel_wv_u32	[&GlobalVar], $s0;
	atomicnoret_add_global_ar_wv_u32	[&GlobalVar], $s0;
	atomicnoret_add_global_rlx_wg_u32	[&GlobalVar], $s0;
	atomicnoret_add_global_rlx_cmp_u32	[&GlobalVar], $s0;
	atomicnoret_add_global_rlx_sys_u32	[&GlobalVar], $s0;
	atomicnoret_add_global_rlx_wv_u32	[&GlobalROImg], $s0;
	atomicnoret_add_global_rlx_wv_u32	[&GlobalRWImg], $s0;
	atomicnoret_add_global_rlx_wv_u32	[&GlobalSamp], $s0;
	atomicnoret_add_global_rlx_wv_u32	[&GlobalSig32], $s0;
	atomicnoret_add_global_rlx_wv_u32	[&GlobalSig64], $s0;
	atomicnoret_add_global_rlx_wv_u32	[$s0], $s0;
	atomicnoret_add_global_rlx_wv_u32	[0], $s0;
	atomicnoret_add_global_rlx_wv_u32	[&GlobalVar], 4294967295;
	atomicnoret_add_global_rlx_wv_u32	[&GlobalVar], WAVESIZE;
	atomicnoret_add_global_rlx_wv_equiv(1)_u32	[&GlobalVar], $s0;
	atomicnoret_add_global_rlx_wv_equiv(2)_u32	[&GlobalVar], $s0;
	atomicnoret_add_global_rlx_wv_equiv(255)_u32	[&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_add_group_rlx_wv_u32	[&GroupVar], $s0;
	// 
	atomicnoret_add_group_acq_wv_u32	[&GroupVar], $s0;
	atomicnoret_add_group_rel_wv_u32	[&GroupVar], $s0;
	atomicnoret_add_group_ar_wv_u32	[&GroupVar], $s0;
	atomicnoret_add_group_rlx_wg_u32	[&GroupVar], $s0;
	atomicnoret_add_group_rlx_wv_u32	[$s0], $s0;
	atomicnoret_add_group_rlx_wv_u32	[0], $s0;
	atomicnoret_add_group_rlx_wv_u32	[&GroupVar], 4294967295;
	atomicnoret_add_group_rlx_wv_u32	[&GroupVar], WAVESIZE;
	atomicnoret_add_group_rlx_wv_equiv(1)_u32	[&GroupVar], $s0;
	atomicnoret_add_group_rlx_wv_equiv(2)_u32	[&GroupVar], $s0;
	atomicnoret_add_group_rlx_wv_equiv(255)_u32	[&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_dec_rlx_wv_u32	[$s0], $s0;
	// 
	atomicnoret_dec_acq_wv_u32	[$s0], $s0;
	atomicnoret_dec_rel_wv_u32	[$s0], $s0;
	atomicnoret_dec_ar_wv_u32	[$s0], $s0;
	atomicnoret_dec_rlx_wg_u32	[$s0], $s0;
	atomicnoret_dec_rlx_cmp_u32	[$s0], $s0;
	atomicnoret_dec_rlx_sys_u32	[$s0], $s0;
	atomicnoret_dec_rlx_wv_u32	[0], $s0;
	atomicnoret_dec_rlx_wv_u32	[$s0], 4294967295;
	atomicnoret_dec_rlx_wv_u32	[$s0], WAVESIZE;
	atomicnoret_dec_rlx_wv_equiv(1)_u32	[$s0], $s0;
	atomicnoret_dec_rlx_wv_equiv(2)_u32	[$s0], $s0;
	atomicnoret_dec_rlx_wv_equiv(255)_u32	[$s0], $s0;
	// 
	// Next sample
	// 
	atomicnoret_dec_global_rlx_wv_u32	[&GlobalVar], $s0;
	// 
	atomicnoret_dec_global_acq_wv_u32	[&GlobalVar], $s0;
	atomicnoret_dec_global_rel_wv_u32	[&GlobalVar], $s0;
	atomicnoret_dec_global_ar_wv_u32	[&GlobalVar], $s0;
	atomicnoret_dec_global_rlx_wg_u32	[&GlobalVar], $s0;
	atomicnoret_dec_global_rlx_cmp_u32	[&GlobalVar], $s0;
	atomicnoret_dec_global_rlx_sys_u32	[&GlobalVar], $s0;
	atomicnoret_dec_global_rlx_wv_u32	[&GlobalROImg], $s0;
	atomicnoret_dec_global_rlx_wv_u32	[&GlobalRWImg], $s0;
	atomicnoret_dec_global_rlx_wv_u32	[&GlobalSamp], $s0;
	atomicnoret_dec_global_rlx_wv_u32	[&GlobalSig32], $s0;
	atomicnoret_dec_global_rlx_wv_u32	[&GlobalSig64], $s0;
	atomicnoret_dec_global_rlx_wv_u32	[$s0], $s0;
	atomicnoret_dec_global_rlx_wv_u32	[0], $s0;
	atomicnoret_dec_global_rlx_wv_u32	[&GlobalVar], 4294967295;
	atomicnoret_dec_global_rlx_wv_u32	[&GlobalVar], WAVESIZE;
	atomicnoret_dec_global_rlx_wv_equiv(1)_u32	[&GlobalVar], $s0;
	atomicnoret_dec_global_rlx_wv_equiv(2)_u32	[&GlobalVar], $s0;
	atomicnoret_dec_global_rlx_wv_equiv(255)_u32	[&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_dec_group_rlx_wv_u32	[&GroupVar], $s0;
	// 
	atomicnoret_dec_group_acq_wv_u32	[&GroupVar], $s0;
	atomicnoret_dec_group_rel_wv_u32	[&GroupVar], $s0;
	atomicnoret_dec_group_ar_wv_u32	[&GroupVar], $s0;
	atomicnoret_dec_group_rlx_wg_u32	[&GroupVar], $s0;
	atomicnoret_dec_group_rlx_wv_u32	[$s0], $s0;
	atomicnoret_dec_group_rlx_wv_u32	[0], $s0;
	atomicnoret_dec_group_rlx_wv_u32	[&GroupVar], 4294967295;
	atomicnoret_dec_group_rlx_wv_u32	[&GroupVar], WAVESIZE;
	atomicnoret_dec_group_rlx_wv_equiv(1)_u32	[&GroupVar], $s0;
	atomicnoret_dec_group_rlx_wv_equiv(2)_u32	[&GroupVar], $s0;
	atomicnoret_dec_group_rlx_wv_equiv(255)_u32	[&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_inc_rlx_wv_u32	[$s0], $s0;
	// 
	atomicnoret_inc_acq_wv_u32	[$s0], $s0;
	atomicnoret_inc_rel_wv_u32	[$s0], $s0;
	atomicnoret_inc_ar_wv_u32	[$s0], $s0;
	atomicnoret_inc_rlx_wg_u32	[$s0], $s0;
	atomicnoret_inc_rlx_cmp_u32	[$s0], $s0;
	atomicnoret_inc_rlx_sys_u32	[$s0], $s0;
	atomicnoret_inc_rlx_wv_u32	[0], $s0;
	atomicnoret_inc_rlx_wv_u32	[$s0], 4294967295;
	atomicnoret_inc_rlx_wv_u32	[$s0], WAVESIZE;
	atomicnoret_inc_rlx_wv_equiv(1)_u32	[$s0], $s0;
	atomicnoret_inc_rlx_wv_equiv(2)_u32	[$s0], $s0;
	atomicnoret_inc_rlx_wv_equiv(255)_u32	[$s0], $s0;
	// 
	// Next sample
	// 
	atomicnoret_inc_global_rlx_wv_u32	[&GlobalVar], $s0;
	// 
	atomicnoret_inc_global_acq_wv_u32	[&GlobalVar], $s0;
	atomicnoret_inc_global_rel_wv_u32	[&GlobalVar], $s0;
	atomicnoret_inc_global_ar_wv_u32	[&GlobalVar], $s0;
	atomicnoret_inc_global_rlx_wg_u32	[&GlobalVar], $s0;
	atomicnoret_inc_global_rlx_cmp_u32	[&GlobalVar], $s0;
	atomicnoret_inc_global_rlx_sys_u32	[&GlobalVar], $s0;
	atomicnoret_inc_global_rlx_wv_u32	[&GlobalROImg], $s0;
	atomicnoret_inc_global_rlx_wv_u32	[&GlobalRWImg], $s0;
	atomicnoret_inc_global_rlx_wv_u32	[&GlobalSamp], $s0;
	atomicnoret_inc_global_rlx_wv_u32	[&GlobalSig32], $s0;
	atomicnoret_inc_global_rlx_wv_u32	[&GlobalSig64], $s0;
	atomicnoret_inc_global_rlx_wv_u32	[$s0], $s0;
	atomicnoret_inc_global_rlx_wv_u32	[0], $s0;
	atomicnoret_inc_global_rlx_wv_u32	[&GlobalVar], 4294967295;
	atomicnoret_inc_global_rlx_wv_u32	[&GlobalVar], WAVESIZE;
	atomicnoret_inc_global_rlx_wv_equiv(1)_u32	[&GlobalVar], $s0;
	atomicnoret_inc_global_rlx_wv_equiv(2)_u32	[&GlobalVar], $s0;
	atomicnoret_inc_global_rlx_wv_equiv(255)_u32	[&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_inc_group_rlx_wv_u32	[&GroupVar], $s0;
	// 
	atomicnoret_inc_group_acq_wv_u32	[&GroupVar], $s0;
	atomicnoret_inc_group_rel_wv_u32	[&GroupVar], $s0;
	atomicnoret_inc_group_ar_wv_u32	[&GroupVar], $s0;
	atomicnoret_inc_group_rlx_wg_u32	[&GroupVar], $s0;
	atomicnoret_inc_group_rlx_wv_u32	[$s0], $s0;
	atomicnoret_inc_group_rlx_wv_u32	[0], $s0;
	atomicnoret_inc_group_rlx_wv_u32	[&GroupVar], 4294967295;
	atomicnoret_inc_group_rlx_wv_u32	[&GroupVar], WAVESIZE;
	atomicnoret_inc_group_rlx_wv_equiv(1)_u32	[&GroupVar], $s0;
	atomicnoret_inc_group_rlx_wv_equiv(2)_u32	[&GroupVar], $s0;
	atomicnoret_inc_group_rlx_wv_equiv(255)_u32	[&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_max_rlx_wv_u32	[$s0], $s0;
	// 
	atomicnoret_max_acq_wv_u32	[$s0], $s0;
	atomicnoret_max_rel_wv_u32	[$s0], $s0;
	atomicnoret_max_ar_wv_u32	[$s0], $s0;
	atomicnoret_max_rlx_wg_u32	[$s0], $s0;
	atomicnoret_max_rlx_cmp_u32	[$s0], $s0;
	atomicnoret_max_rlx_sys_u32	[$s0], $s0;
	atomicnoret_max_rlx_wv_u32	[0], $s0;
	atomicnoret_max_rlx_wv_u32	[$s0], 4294967295;
	atomicnoret_max_rlx_wv_u32	[$s0], WAVESIZE;
	atomicnoret_max_rlx_wv_equiv(1)_u32	[$s0], $s0;
	atomicnoret_max_rlx_wv_equiv(2)_u32	[$s0], $s0;
	atomicnoret_max_rlx_wv_equiv(255)_u32	[$s0], $s0;
	// 
	// Next sample
	// 
	atomicnoret_max_global_rlx_wv_u32	[&GlobalVar], $s0;
	// 
	atomicnoret_max_global_acq_wv_u32	[&GlobalVar], $s0;
	atomicnoret_max_global_rel_wv_u32	[&GlobalVar], $s0;
	atomicnoret_max_global_ar_wv_u32	[&GlobalVar], $s0;
	atomicnoret_max_global_rlx_wg_u32	[&GlobalVar], $s0;
	atomicnoret_max_global_rlx_cmp_u32	[&GlobalVar], $s0;
	atomicnoret_max_global_rlx_sys_u32	[&GlobalVar], $s0;
	atomicnoret_max_global_rlx_wv_u32	[&GlobalROImg], $s0;
	atomicnoret_max_global_rlx_wv_u32	[&GlobalRWImg], $s0;
	atomicnoret_max_global_rlx_wv_u32	[&GlobalSamp], $s0;
	atomicnoret_max_global_rlx_wv_u32	[&GlobalSig32], $s0;
	atomicnoret_max_global_rlx_wv_u32	[&GlobalSig64], $s0;
	atomicnoret_max_global_rlx_wv_u32	[$s0], $s0;
	atomicnoret_max_global_rlx_wv_u32	[0], $s0;
	atomicnoret_max_global_rlx_wv_u32	[&GlobalVar], 4294967295;
	atomicnoret_max_global_rlx_wv_u32	[&GlobalVar], WAVESIZE;
	atomicnoret_max_global_rlx_wv_equiv(1)_u32	[&GlobalVar], $s0;
	atomicnoret_max_global_rlx_wv_equiv(2)_u32	[&GlobalVar], $s0;
	atomicnoret_max_global_rlx_wv_equiv(255)_u32	[&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_max_group_rlx_wv_u32	[&GroupVar], $s0;
	// 
	atomicnoret_max_group_acq_wv_u32	[&GroupVar], $s0;
	atomicnoret_max_group_rel_wv_u32	[&GroupVar], $s0;
	atomicnoret_max_group_ar_wv_u32	[&GroupVar], $s0;
	atomicnoret_max_group_rlx_wg_u32	[&GroupVar], $s0;
	atomicnoret_max_group_rlx_wv_u32	[$s0], $s0;
	atomicnoret_max_group_rlx_wv_u32	[0], $s0;
	atomicnoret_max_group_rlx_wv_u32	[&GroupVar], 4294967295;
	atomicnoret_max_group_rlx_wv_u32	[&GroupVar], WAVESIZE;
	atomicnoret_max_group_rlx_wv_equiv(1)_u32	[&GroupVar], $s0;
	atomicnoret_max_group_rlx_wv_equiv(2)_u32	[&GroupVar], $s0;
	atomicnoret_max_group_rlx_wv_equiv(255)_u32	[&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_min_rlx_wv_u32	[$s0], $s0;
	// 
	atomicnoret_min_acq_wv_u32	[$s0], $s0;
	atomicnoret_min_rel_wv_u32	[$s0], $s0;
	atomicnoret_min_ar_wv_u32	[$s0], $s0;
	atomicnoret_min_rlx_wg_u32	[$s0], $s0;
	atomicnoret_min_rlx_cmp_u32	[$s0], $s0;
	atomicnoret_min_rlx_sys_u32	[$s0], $s0;
	atomicnoret_min_rlx_wv_u32	[0], $s0;
	atomicnoret_min_rlx_wv_u32	[$s0], 4294967295;
	atomicnoret_min_rlx_wv_u32	[$s0], WAVESIZE;
	atomicnoret_min_rlx_wv_equiv(1)_u32	[$s0], $s0;
	atomicnoret_min_rlx_wv_equiv(2)_u32	[$s0], $s0;
	atomicnoret_min_rlx_wv_equiv(255)_u32	[$s0], $s0;
	// 
	// Next sample
	// 
	atomicnoret_min_global_rlx_wv_u32	[&GlobalVar], $s0;
	// 
	atomicnoret_min_global_acq_wv_u32	[&GlobalVar], $s0;
	atomicnoret_min_global_rel_wv_u32	[&GlobalVar], $s0;
	atomicnoret_min_global_ar_wv_u32	[&GlobalVar], $s0;
	atomicnoret_min_global_rlx_wg_u32	[&GlobalVar], $s0;
	atomicnoret_min_global_rlx_cmp_u32	[&GlobalVar], $s0;
	atomicnoret_min_global_rlx_sys_u32	[&GlobalVar], $s0;
	atomicnoret_min_global_rlx_wv_u32	[&GlobalROImg], $s0;
	atomicnoret_min_global_rlx_wv_u32	[&GlobalRWImg], $s0;
	atomicnoret_min_global_rlx_wv_u32	[&GlobalSamp], $s0;
	atomicnoret_min_global_rlx_wv_u32	[&GlobalSig32], $s0;
	atomicnoret_min_global_rlx_wv_u32	[&GlobalSig64], $s0;
	atomicnoret_min_global_rlx_wv_u32	[$s0], $s0;
	atomicnoret_min_global_rlx_wv_u32	[0], $s0;
	atomicnoret_min_global_rlx_wv_u32	[&GlobalVar], 4294967295;
	atomicnoret_min_global_rlx_wv_u32	[&GlobalVar], WAVESIZE;
	atomicnoret_min_global_rlx_wv_equiv(1)_u32	[&GlobalVar], $s0;
	atomicnoret_min_global_rlx_wv_equiv(2)_u32	[&GlobalVar], $s0;
	atomicnoret_min_global_rlx_wv_equiv(255)_u32	[&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_min_group_rlx_wv_u32	[&GroupVar], $s0;
	// 
	atomicnoret_min_group_acq_wv_u32	[&GroupVar], $s0;
	atomicnoret_min_group_rel_wv_u32	[&GroupVar], $s0;
	atomicnoret_min_group_ar_wv_u32	[&GroupVar], $s0;
	atomicnoret_min_group_rlx_wg_u32	[&GroupVar], $s0;
	atomicnoret_min_group_rlx_wv_u32	[$s0], $s0;
	atomicnoret_min_group_rlx_wv_u32	[0], $s0;
	atomicnoret_min_group_rlx_wv_u32	[&GroupVar], 4294967295;
	atomicnoret_min_group_rlx_wv_u32	[&GroupVar], WAVESIZE;
	atomicnoret_min_group_rlx_wv_equiv(1)_u32	[&GroupVar], $s0;
	atomicnoret_min_group_rlx_wv_equiv(2)_u32	[&GroupVar], $s0;
	atomicnoret_min_group_rlx_wv_equiv(255)_u32	[&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_sub_rlx_wv_u32	[$s0], $s0;
	// 
	atomicnoret_sub_acq_wv_u32	[$s0], $s0;
	atomicnoret_sub_rel_wv_u32	[$s0], $s0;
	atomicnoret_sub_ar_wv_u32	[$s0], $s0;
	atomicnoret_sub_rlx_wg_u32	[$s0], $s0;
	atomicnoret_sub_rlx_cmp_u32	[$s0], $s0;
	atomicnoret_sub_rlx_sys_u32	[$s0], $s0;
	atomicnoret_sub_rlx_wv_u32	[0], $s0;
	atomicnoret_sub_rlx_wv_u32	[$s0], 4294967295;
	atomicnoret_sub_rlx_wv_u32	[$s0], WAVESIZE;
	atomicnoret_sub_rlx_wv_equiv(1)_u32	[$s0], $s0;
	atomicnoret_sub_rlx_wv_equiv(2)_u32	[$s0], $s0;
	atomicnoret_sub_rlx_wv_equiv(255)_u32	[$s0], $s0;
	// 
	// Next sample
	// 
	atomicnoret_sub_global_rlx_wv_u32	[&GlobalVar], $s0;
	// 
	atomicnoret_sub_global_acq_wv_u32	[&GlobalVar], $s0;
	atomicnoret_sub_global_rel_wv_u32	[&GlobalVar], $s0;
	atomicnoret_sub_global_ar_wv_u32	[&GlobalVar], $s0;
	atomicnoret_sub_global_rlx_wg_u32	[&GlobalVar], $s0;
	atomicnoret_sub_global_rlx_cmp_u32	[&GlobalVar], $s0;
	atomicnoret_sub_global_rlx_sys_u32	[&GlobalVar], $s0;
	atomicnoret_sub_global_rlx_wv_u32	[&GlobalROImg], $s0;
	atomicnoret_sub_global_rlx_wv_u32	[&GlobalRWImg], $s0;
	atomicnoret_sub_global_rlx_wv_u32	[&GlobalSamp], $s0;
	atomicnoret_sub_global_rlx_wv_u32	[&GlobalSig32], $s0;
	atomicnoret_sub_global_rlx_wv_u32	[&GlobalSig64], $s0;
	atomicnoret_sub_global_rlx_wv_u32	[$s0], $s0;
	atomicnoret_sub_global_rlx_wv_u32	[0], $s0;
	atomicnoret_sub_global_rlx_wv_u32	[&GlobalVar], 4294967295;
	atomicnoret_sub_global_rlx_wv_u32	[&GlobalVar], WAVESIZE;
	atomicnoret_sub_global_rlx_wv_equiv(1)_u32	[&GlobalVar], $s0;
	atomicnoret_sub_global_rlx_wv_equiv(2)_u32	[&GlobalVar], $s0;
	atomicnoret_sub_global_rlx_wv_equiv(255)_u32	[&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_sub_group_rlx_wv_u32	[&GroupVar], $s0;
	// 
	atomicnoret_sub_group_acq_wv_u32	[&GroupVar], $s0;
	atomicnoret_sub_group_rel_wv_u32	[&GroupVar], $s0;
	atomicnoret_sub_group_ar_wv_u32	[&GroupVar], $s0;
	atomicnoret_sub_group_rlx_wg_u32	[&GroupVar], $s0;
	atomicnoret_sub_group_rlx_wv_u32	[$s0], $s0;
	atomicnoret_sub_group_rlx_wv_u32	[0], $s0;
	atomicnoret_sub_group_rlx_wv_u32	[&GroupVar], 4294967295;
	atomicnoret_sub_group_rlx_wv_u32	[&GroupVar], WAVESIZE;
	atomicnoret_sub_group_rlx_wv_equiv(1)_u32	[&GroupVar], $s0;
	atomicnoret_sub_group_rlx_wv_equiv(2)_u32	[&GroupVar], $s0;
	atomicnoret_sub_group_rlx_wv_equiv(255)_u32	[&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_add_rlx_wv_s32	[$s0], $s0;
	// 
	atomicnoret_add_acq_wv_s32	[$s0], $s0;
	atomicnoret_add_rel_wv_s32	[$s0], $s0;
	atomicnoret_add_ar_wv_s32	[$s0], $s0;
	atomicnoret_add_rlx_wg_s32	[$s0], $s0;
	atomicnoret_add_rlx_cmp_s32	[$s0], $s0;
	atomicnoret_add_rlx_sys_s32	[$s0], $s0;
	atomicnoret_add_rlx_wv_s32	[0], $s0;
	atomicnoret_add_rlx_wv_s32	[$s0], -1;
	atomicnoret_add_rlx_wv_s32	[$s0], WAVESIZE;
	atomicnoret_add_rlx_wv_equiv(1)_s32	[$s0], $s0;
	atomicnoret_add_rlx_wv_equiv(2)_s32	[$s0], $s0;
	atomicnoret_add_rlx_wv_equiv(255)_s32	[$s0], $s0;
	// 
	// Next sample
	// 
	atomicnoret_add_global_rlx_wv_s32	[&GlobalVar], $s0;
	// 
	atomicnoret_add_global_acq_wv_s32	[&GlobalVar], $s0;
	atomicnoret_add_global_rel_wv_s32	[&GlobalVar], $s0;
	atomicnoret_add_global_ar_wv_s32	[&GlobalVar], $s0;
	atomicnoret_add_global_rlx_wg_s32	[&GlobalVar], $s0;
	atomicnoret_add_global_rlx_cmp_s32	[&GlobalVar], $s0;
	atomicnoret_add_global_rlx_sys_s32	[&GlobalVar], $s0;
	atomicnoret_add_global_rlx_wv_s32	[&GlobalROImg], $s0;
	atomicnoret_add_global_rlx_wv_s32	[&GlobalRWImg], $s0;
	atomicnoret_add_global_rlx_wv_s32	[&GlobalSamp], $s0;
	atomicnoret_add_global_rlx_wv_s32	[&GlobalSig32], $s0;
	atomicnoret_add_global_rlx_wv_s32	[&GlobalSig64], $s0;
	atomicnoret_add_global_rlx_wv_s32	[$s0], $s0;
	atomicnoret_add_global_rlx_wv_s32	[0], $s0;
	atomicnoret_add_global_rlx_wv_s32	[&GlobalVar], -1;
	atomicnoret_add_global_rlx_wv_s32	[&GlobalVar], WAVESIZE;
	atomicnoret_add_global_rlx_wv_equiv(1)_s32	[&GlobalVar], $s0;
	atomicnoret_add_global_rlx_wv_equiv(2)_s32	[&GlobalVar], $s0;
	atomicnoret_add_global_rlx_wv_equiv(255)_s32	[&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_add_group_rlx_wv_s32	[&GroupVar], $s0;
	// 
	atomicnoret_add_group_acq_wv_s32	[&GroupVar], $s0;
	atomicnoret_add_group_rel_wv_s32	[&GroupVar], $s0;
	atomicnoret_add_group_ar_wv_s32	[&GroupVar], $s0;
	atomicnoret_add_group_rlx_wg_s32	[&GroupVar], $s0;
	atomicnoret_add_group_rlx_wv_s32	[$s0], $s0;
	atomicnoret_add_group_rlx_wv_s32	[0], $s0;
	atomicnoret_add_group_rlx_wv_s32	[&GroupVar], -1;
	atomicnoret_add_group_rlx_wv_s32	[&GroupVar], WAVESIZE;
	atomicnoret_add_group_rlx_wv_equiv(1)_s32	[&GroupVar], $s0;
	atomicnoret_add_group_rlx_wv_equiv(2)_s32	[&GroupVar], $s0;
	atomicnoret_add_group_rlx_wv_equiv(255)_s32	[&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_max_rlx_wv_s32	[$s0], $s0;
	// 
	atomicnoret_max_acq_wv_s32	[$s0], $s0;
	atomicnoret_max_rel_wv_s32	[$s0], $s0;
	atomicnoret_max_ar_wv_s32	[$s0], $s0;
	atomicnoret_max_rlx_wg_s32	[$s0], $s0;
	atomicnoret_max_rlx_cmp_s32	[$s0], $s0;
	atomicnoret_max_rlx_sys_s32	[$s0], $s0;
	atomicnoret_max_rlx_wv_s32	[0], $s0;
	atomicnoret_max_rlx_wv_s32	[$s0], -1;
	atomicnoret_max_rlx_wv_s32	[$s0], WAVESIZE;
	atomicnoret_max_rlx_wv_equiv(1)_s32	[$s0], $s0;
	atomicnoret_max_rlx_wv_equiv(2)_s32	[$s0], $s0;
	atomicnoret_max_rlx_wv_equiv(255)_s32	[$s0], $s0;
	// 
	// Next sample
	// 
	atomicnoret_max_global_rlx_wv_s32	[&GlobalVar], $s0;
	// 
	atomicnoret_max_global_acq_wv_s32	[&GlobalVar], $s0;
	atomicnoret_max_global_rel_wv_s32	[&GlobalVar], $s0;
	atomicnoret_max_global_ar_wv_s32	[&GlobalVar], $s0;
	atomicnoret_max_global_rlx_wg_s32	[&GlobalVar], $s0;
	atomicnoret_max_global_rlx_cmp_s32	[&GlobalVar], $s0;
	atomicnoret_max_global_rlx_sys_s32	[&GlobalVar], $s0;
	atomicnoret_max_global_rlx_wv_s32	[&GlobalROImg], $s0;
	atomicnoret_max_global_rlx_wv_s32	[&GlobalRWImg], $s0;
	atomicnoret_max_global_rlx_wv_s32	[&GlobalSamp], $s0;
	atomicnoret_max_global_rlx_wv_s32	[&GlobalSig32], $s0;
	atomicnoret_max_global_rlx_wv_s32	[&GlobalSig64], $s0;
	atomicnoret_max_global_rlx_wv_s32	[$s0], $s0;
	atomicnoret_max_global_rlx_wv_s32	[0], $s0;
	atomicnoret_max_global_rlx_wv_s32	[&GlobalVar], -1;
	atomicnoret_max_global_rlx_wv_s32	[&GlobalVar], WAVESIZE;
	atomicnoret_max_global_rlx_wv_equiv(1)_s32	[&GlobalVar], $s0;
	atomicnoret_max_global_rlx_wv_equiv(2)_s32	[&GlobalVar], $s0;
	atomicnoret_max_global_rlx_wv_equiv(255)_s32	[&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_max_group_rlx_wv_s32	[&GroupVar], $s0;
	// 
	atomicnoret_max_group_acq_wv_s32	[&GroupVar], $s0;
	atomicnoret_max_group_rel_wv_s32	[&GroupVar], $s0;
	atomicnoret_max_group_ar_wv_s32	[&GroupVar], $s0;
	atomicnoret_max_group_rlx_wg_s32	[&GroupVar], $s0;
	atomicnoret_max_group_rlx_wv_s32	[$s0], $s0;
	atomicnoret_max_group_rlx_wv_s32	[0], $s0;
	atomicnoret_max_group_rlx_wv_s32	[&GroupVar], -1;
	atomicnoret_max_group_rlx_wv_s32	[&GroupVar], WAVESIZE;
	atomicnoret_max_group_rlx_wv_equiv(1)_s32	[&GroupVar], $s0;
	atomicnoret_max_group_rlx_wv_equiv(2)_s32	[&GroupVar], $s0;
	atomicnoret_max_group_rlx_wv_equiv(255)_s32	[&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_min_rlx_wv_s32	[$s0], $s0;
	// 
	atomicnoret_min_acq_wv_s32	[$s0], $s0;
	atomicnoret_min_rel_wv_s32	[$s0], $s0;
	atomicnoret_min_ar_wv_s32	[$s0], $s0;
	atomicnoret_min_rlx_wg_s32	[$s0], $s0;
	atomicnoret_min_rlx_cmp_s32	[$s0], $s0;
	atomicnoret_min_rlx_sys_s32	[$s0], $s0;
	atomicnoret_min_rlx_wv_s32	[0], $s0;
	atomicnoret_min_rlx_wv_s32	[$s0], -1;
	atomicnoret_min_rlx_wv_s32	[$s0], WAVESIZE;
	atomicnoret_min_rlx_wv_equiv(1)_s32	[$s0], $s0;
	atomicnoret_min_rlx_wv_equiv(2)_s32	[$s0], $s0;
	atomicnoret_min_rlx_wv_equiv(255)_s32	[$s0], $s0;
	// 
	// Next sample
	// 
	atomicnoret_min_global_rlx_wv_s32	[&GlobalVar], $s0;
	// 
	atomicnoret_min_global_acq_wv_s32	[&GlobalVar], $s0;
	atomicnoret_min_global_rel_wv_s32	[&GlobalVar], $s0;
	atomicnoret_min_global_ar_wv_s32	[&GlobalVar], $s0;
	atomicnoret_min_global_rlx_wg_s32	[&GlobalVar], $s0;
	atomicnoret_min_global_rlx_cmp_s32	[&GlobalVar], $s0;
	atomicnoret_min_global_rlx_sys_s32	[&GlobalVar], $s0;
	atomicnoret_min_global_rlx_wv_s32	[&GlobalROImg], $s0;
	atomicnoret_min_global_rlx_wv_s32	[&GlobalRWImg], $s0;
	atomicnoret_min_global_rlx_wv_s32	[&GlobalSamp], $s0;
	atomicnoret_min_global_rlx_wv_s32	[&GlobalSig32], $s0;
	atomicnoret_min_global_rlx_wv_s32	[&GlobalSig64], $s0;
	atomicnoret_min_global_rlx_wv_s32	[$s0], $s0;
	atomicnoret_min_global_rlx_wv_s32	[0], $s0;
	atomicnoret_min_global_rlx_wv_s32	[&GlobalVar], -1;
	atomicnoret_min_global_rlx_wv_s32	[&GlobalVar], WAVESIZE;
	atomicnoret_min_global_rlx_wv_equiv(1)_s32	[&GlobalVar], $s0;
	atomicnoret_min_global_rlx_wv_equiv(2)_s32	[&GlobalVar], $s0;
	atomicnoret_min_global_rlx_wv_equiv(255)_s32	[&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_min_group_rlx_wv_s32	[&GroupVar], $s0;
	// 
	atomicnoret_min_group_acq_wv_s32	[&GroupVar], $s0;
	atomicnoret_min_group_rel_wv_s32	[&GroupVar], $s0;
	atomicnoret_min_group_ar_wv_s32	[&GroupVar], $s0;
	atomicnoret_min_group_rlx_wg_s32	[&GroupVar], $s0;
	atomicnoret_min_group_rlx_wv_s32	[$s0], $s0;
	atomicnoret_min_group_rlx_wv_s32	[0], $s0;
	atomicnoret_min_group_rlx_wv_s32	[&GroupVar], -1;
	atomicnoret_min_group_rlx_wv_s32	[&GroupVar], WAVESIZE;
	atomicnoret_min_group_rlx_wv_equiv(1)_s32	[&GroupVar], $s0;
	atomicnoret_min_group_rlx_wv_equiv(2)_s32	[&GroupVar], $s0;
	atomicnoret_min_group_rlx_wv_equiv(255)_s32	[&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_sub_rlx_wv_s32	[$s0], $s0;
	// 
	atomicnoret_sub_acq_wv_s32	[$s0], $s0;
	atomicnoret_sub_rel_wv_s32	[$s0], $s0;
	atomicnoret_sub_ar_wv_s32	[$s0], $s0;
	atomicnoret_sub_rlx_wg_s32	[$s0], $s0;
	atomicnoret_sub_rlx_cmp_s32	[$s0], $s0;
	atomicnoret_sub_rlx_sys_s32	[$s0], $s0;
	atomicnoret_sub_rlx_wv_s32	[0], $s0;
	atomicnoret_sub_rlx_wv_s32	[$s0], -1;
	atomicnoret_sub_rlx_wv_s32	[$s0], WAVESIZE;
	atomicnoret_sub_rlx_wv_equiv(1)_s32	[$s0], $s0;
	atomicnoret_sub_rlx_wv_equiv(2)_s32	[$s0], $s0;
	atomicnoret_sub_rlx_wv_equiv(255)_s32	[$s0], $s0;
	// 
	// Next sample
	// 
	atomicnoret_sub_global_rlx_wv_s32	[&GlobalVar], $s0;
	// 
	atomicnoret_sub_global_acq_wv_s32	[&GlobalVar], $s0;
	atomicnoret_sub_global_rel_wv_s32	[&GlobalVar], $s0;
	atomicnoret_sub_global_ar_wv_s32	[&GlobalVar], $s0;
	atomicnoret_sub_global_rlx_wg_s32	[&GlobalVar], $s0;
	atomicnoret_sub_global_rlx_cmp_s32	[&GlobalVar], $s0;
	atomicnoret_sub_global_rlx_sys_s32	[&GlobalVar], $s0;
	atomicnoret_sub_global_rlx_wv_s32	[&GlobalROImg], $s0;
	atomicnoret_sub_global_rlx_wv_s32	[&GlobalRWImg], $s0;
	atomicnoret_sub_global_rlx_wv_s32	[&GlobalSamp], $s0;
	atomicnoret_sub_global_rlx_wv_s32	[&GlobalSig32], $s0;
	atomicnoret_sub_global_rlx_wv_s32	[&GlobalSig64], $s0;
	atomicnoret_sub_global_rlx_wv_s32	[$s0], $s0;
	atomicnoret_sub_global_rlx_wv_s32	[0], $s0;
	atomicnoret_sub_global_rlx_wv_s32	[&GlobalVar], -1;
	atomicnoret_sub_global_rlx_wv_s32	[&GlobalVar], WAVESIZE;
	atomicnoret_sub_global_rlx_wv_equiv(1)_s32	[&GlobalVar], $s0;
	atomicnoret_sub_global_rlx_wv_equiv(2)_s32	[&GlobalVar], $s0;
	atomicnoret_sub_global_rlx_wv_equiv(255)_s32	[&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_sub_group_rlx_wv_s32	[&GroupVar], $s0;
	// 
	atomicnoret_sub_group_acq_wv_s32	[&GroupVar], $s0;
	atomicnoret_sub_group_rel_wv_s32	[&GroupVar], $s0;
	atomicnoret_sub_group_ar_wv_s32	[&GroupVar], $s0;
	atomicnoret_sub_group_rlx_wg_s32	[&GroupVar], $s0;
	atomicnoret_sub_group_rlx_wv_s32	[$s0], $s0;
	atomicnoret_sub_group_rlx_wv_s32	[0], $s0;
	atomicnoret_sub_group_rlx_wv_s32	[&GroupVar], -1;
	atomicnoret_sub_group_rlx_wv_s32	[&GroupVar], WAVESIZE;
	atomicnoret_sub_group_rlx_wv_equiv(1)_s32	[&GroupVar], $s0;
	atomicnoret_sub_group_rlx_wv_equiv(2)_s32	[&GroupVar], $s0;
	atomicnoret_sub_group_rlx_wv_equiv(255)_s32	[&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_and_rlx_wv_b32	[$s0], $s0;
	// 
	atomicnoret_and_acq_wv_b32	[$s0], $s0;
	atomicnoret_and_rel_wv_b32	[$s0], $s0;
	atomicnoret_and_ar_wv_b32	[$s0], $s0;
	atomicnoret_and_rlx_wg_b32	[$s0], $s0;
	atomicnoret_and_rlx_cmp_b32	[$s0], $s0;
	atomicnoret_and_rlx_sys_b32	[$s0], $s0;
	atomicnoret_and_rlx_wv_b32	[0], $s0;
	atomicnoret_and_rlx_wv_b32	[$s0], 4294967295;
	atomicnoret_and_rlx_wv_b32	[$s0], WAVESIZE;
	atomicnoret_and_rlx_wv_equiv(1)_b32	[$s0], $s0;
	atomicnoret_and_rlx_wv_equiv(2)_b32	[$s0], $s0;
	atomicnoret_and_rlx_wv_equiv(255)_b32	[$s0], $s0;
	// 
	// Next sample
	// 
	atomicnoret_and_global_rlx_wv_b32	[&GlobalVar], $s0;
	// 
	atomicnoret_and_global_acq_wv_b32	[&GlobalVar], $s0;
	atomicnoret_and_global_rel_wv_b32	[&GlobalVar], $s0;
	atomicnoret_and_global_ar_wv_b32	[&GlobalVar], $s0;
	atomicnoret_and_global_rlx_wg_b32	[&GlobalVar], $s0;
	atomicnoret_and_global_rlx_cmp_b32	[&GlobalVar], $s0;
	atomicnoret_and_global_rlx_sys_b32	[&GlobalVar], $s0;
	atomicnoret_and_global_rlx_wv_b32	[&GlobalROImg], $s0;
	atomicnoret_and_global_rlx_wv_b32	[&GlobalRWImg], $s0;
	atomicnoret_and_global_rlx_wv_b32	[&GlobalSamp], $s0;
	atomicnoret_and_global_rlx_wv_b32	[&GlobalSig32], $s0;
	atomicnoret_and_global_rlx_wv_b32	[&GlobalSig64], $s0;
	atomicnoret_and_global_rlx_wv_b32	[$s0], $s0;
	atomicnoret_and_global_rlx_wv_b32	[0], $s0;
	atomicnoret_and_global_rlx_wv_b32	[&GlobalVar], 4294967295;
	atomicnoret_and_global_rlx_wv_b32	[&GlobalVar], WAVESIZE;
	atomicnoret_and_global_rlx_wv_equiv(1)_b32	[&GlobalVar], $s0;
	atomicnoret_and_global_rlx_wv_equiv(2)_b32	[&GlobalVar], $s0;
	atomicnoret_and_global_rlx_wv_equiv(255)_b32	[&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_and_group_rlx_wv_b32	[&GroupVar], $s0;
	// 
	atomicnoret_and_group_acq_wv_b32	[&GroupVar], $s0;
	atomicnoret_and_group_rel_wv_b32	[&GroupVar], $s0;
	atomicnoret_and_group_ar_wv_b32	[&GroupVar], $s0;
	atomicnoret_and_group_rlx_wg_b32	[&GroupVar], $s0;
	atomicnoret_and_group_rlx_wv_b32	[$s0], $s0;
	atomicnoret_and_group_rlx_wv_b32	[0], $s0;
	atomicnoret_and_group_rlx_wv_b32	[&GroupVar], 4294967295;
	atomicnoret_and_group_rlx_wv_b32	[&GroupVar], WAVESIZE;
	atomicnoret_and_group_rlx_wv_equiv(1)_b32	[&GroupVar], $s0;
	atomicnoret_and_group_rlx_wv_equiv(2)_b32	[&GroupVar], $s0;
	atomicnoret_and_group_rlx_wv_equiv(255)_b32	[&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_cas_rlx_wv_b32	[$s0], $s0, $s0;
	// 
	atomicnoret_cas_acq_wv_b32	[$s0], $s0, $s0;
	atomicnoret_cas_rel_wv_b32	[$s0], $s0, $s0;
	atomicnoret_cas_ar_wv_b32	[$s0], $s0, $s0;
	atomicnoret_cas_rlx_wg_b32	[$s0], $s0, $s0;
	atomicnoret_cas_rlx_cmp_b32	[$s0], $s0, $s0;
	atomicnoret_cas_rlx_sys_b32	[$s0], $s0, $s0;
	atomicnoret_cas_rlx_wv_b32	[$s0], $s0, 4294967295;
	atomicnoret_cas_rlx_wv_b32	[$s0], $s0, WAVESIZE;
	atomicnoret_cas_rlx_wv_b32	[0], $s0, $s0;
	atomicnoret_cas_rlx_wv_b32	[$s0], 4294967295, $s0;
	atomicnoret_cas_rlx_wv_b32	[$s0], WAVESIZE, $s0;
	atomicnoret_cas_rlx_wv_equiv(1)_b32	[$s0], $s0, $s0;
	atomicnoret_cas_rlx_wv_equiv(2)_b32	[$s0], $s0, $s0;
	atomicnoret_cas_rlx_wv_equiv(255)_b32	[$s0], $s0, $s0;
	// 
	// Next sample
	// 
	atomicnoret_cas_global_rlx_wv_b32	[&GlobalVar], $s0, $s0;
	// 
	atomicnoret_cas_global_acq_wv_b32	[&GlobalVar], $s0, $s0;
	atomicnoret_cas_global_rel_wv_b32	[&GlobalVar], $s0, $s0;
	atomicnoret_cas_global_ar_wv_b32	[&GlobalVar], $s0, $s0;
	atomicnoret_cas_global_rlx_wg_b32	[&GlobalVar], $s0, $s0;
	atomicnoret_cas_global_rlx_cmp_b32	[&GlobalVar], $s0, $s0;
	atomicnoret_cas_global_rlx_sys_b32	[&GlobalVar], $s0, $s0;
	atomicnoret_cas_global_rlx_wv_b32	[&GlobalVar], $s0, 4294967295;
	atomicnoret_cas_global_rlx_wv_b32	[&GlobalVar], $s0, WAVESIZE;
	atomicnoret_cas_global_rlx_wv_b32	[&GlobalROImg], $s0, $s0;
	atomicnoret_cas_global_rlx_wv_b32	[&GlobalRWImg], $s0, $s0;
	atomicnoret_cas_global_rlx_wv_b32	[&GlobalSamp], $s0, $s0;
	atomicnoret_cas_global_rlx_wv_b32	[&GlobalSig32], $s0, $s0;
	atomicnoret_cas_global_rlx_wv_b32	[&GlobalSig64], $s0, $s0;
	atomicnoret_cas_global_rlx_wv_b32	[$s0], $s0, $s0;
	atomicnoret_cas_global_rlx_wv_b32	[0], $s0, $s0;
	atomicnoret_cas_global_rlx_wv_b32	[&GlobalVar], 4294967295, $s0;
	atomicnoret_cas_global_rlx_wv_b32	[&GlobalVar], WAVESIZE, $s0;
	atomicnoret_cas_global_rlx_wv_equiv(1)_b32	[&GlobalVar], $s0, $s0;
	atomicnoret_cas_global_rlx_wv_equiv(2)_b32	[&GlobalVar], $s0, $s0;
	atomicnoret_cas_global_rlx_wv_equiv(255)_b32	[&GlobalVar], $s0, $s0;
	// 
	// Next sample
	// 
	atomicnoret_cas_group_rlx_wv_b32	[&GroupVar], $s0, $s0;
	// 
	atomicnoret_cas_group_acq_wv_b32	[&GroupVar], $s0, $s0;
	atomicnoret_cas_group_rel_wv_b32	[&GroupVar], $s0, $s0;
	atomicnoret_cas_group_ar_wv_b32	[&GroupVar], $s0, $s0;
	atomicnoret_cas_group_rlx_wg_b32	[&GroupVar], $s0, $s0;
	atomicnoret_cas_group_rlx_wv_b32	[&GroupVar], $s0, 4294967295;
	atomicnoret_cas_group_rlx_wv_b32	[&GroupVar], $s0, WAVESIZE;
	atomicnoret_cas_group_rlx_wv_b32	[$s0], $s0, $s0;
	atomicnoret_cas_group_rlx_wv_b32	[0], $s0, $s0;
	atomicnoret_cas_group_rlx_wv_b32	[&GroupVar], 4294967295, $s0;
	atomicnoret_cas_group_rlx_wv_b32	[&GroupVar], WAVESIZE, $s0;
	atomicnoret_cas_group_rlx_wv_equiv(1)_b32	[&GroupVar], $s0, $s0;
	atomicnoret_cas_group_rlx_wv_equiv(2)_b32	[&GroupVar], $s0, $s0;
	atomicnoret_cas_group_rlx_wv_equiv(255)_b32	[&GroupVar], $s0, $s0;
	// 
	// Next sample
	// 
	atomicnoret_or_rlx_wv_b32	[$s0], $s0;
	// 
	atomicnoret_or_acq_wv_b32	[$s0], $s0;
	atomicnoret_or_rel_wv_b32	[$s0], $s0;
	atomicnoret_or_ar_wv_b32	[$s0], $s0;
	atomicnoret_or_rlx_wg_b32	[$s0], $s0;
	atomicnoret_or_rlx_cmp_b32	[$s0], $s0;
	atomicnoret_or_rlx_sys_b32	[$s0], $s0;
	atomicnoret_or_rlx_wv_b32	[0], $s0;
	atomicnoret_or_rlx_wv_b32	[$s0], 4294967295;
	atomicnoret_or_rlx_wv_b32	[$s0], WAVESIZE;
	atomicnoret_or_rlx_wv_equiv(1)_b32	[$s0], $s0;
	atomicnoret_or_rlx_wv_equiv(2)_b32	[$s0], $s0;
	atomicnoret_or_rlx_wv_equiv(255)_b32	[$s0], $s0;
	// 
	// Next sample
	// 
	atomicnoret_or_global_rlx_wv_b32	[&GlobalVar], $s0;
	// 
	atomicnoret_or_global_acq_wv_b32	[&GlobalVar], $s0;
	atomicnoret_or_global_rel_wv_b32	[&GlobalVar], $s0;
	atomicnoret_or_global_ar_wv_b32	[&GlobalVar], $s0;
	atomicnoret_or_global_rlx_wg_b32	[&GlobalVar], $s0;
	atomicnoret_or_global_rlx_cmp_b32	[&GlobalVar], $s0;
	atomicnoret_or_global_rlx_sys_b32	[&GlobalVar], $s0;
	atomicnoret_or_global_rlx_wv_b32	[&GlobalROImg], $s0;
	atomicnoret_or_global_rlx_wv_b32	[&GlobalRWImg], $s0;
	atomicnoret_or_global_rlx_wv_b32	[&GlobalSamp], $s0;
	atomicnoret_or_global_rlx_wv_b32	[&GlobalSig32], $s0;
	atomicnoret_or_global_rlx_wv_b32	[&GlobalSig64], $s0;
	atomicnoret_or_global_rlx_wv_b32	[$s0], $s0;
	atomicnoret_or_global_rlx_wv_b32	[0], $s0;
	atomicnoret_or_global_rlx_wv_b32	[&GlobalVar], 4294967295;
	atomicnoret_or_global_rlx_wv_b32	[&GlobalVar], WAVESIZE;
	atomicnoret_or_global_rlx_wv_equiv(1)_b32	[&GlobalVar], $s0;
	atomicnoret_or_global_rlx_wv_equiv(2)_b32	[&GlobalVar], $s0;
	atomicnoret_or_global_rlx_wv_equiv(255)_b32	[&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_or_group_rlx_wv_b32	[&GroupVar], $s0;
	// 
	atomicnoret_or_group_acq_wv_b32	[&GroupVar], $s0;
	atomicnoret_or_group_rel_wv_b32	[&GroupVar], $s0;
	atomicnoret_or_group_ar_wv_b32	[&GroupVar], $s0;
	atomicnoret_or_group_rlx_wg_b32	[&GroupVar], $s0;
	atomicnoret_or_group_rlx_wv_b32	[$s0], $s0;
	atomicnoret_or_group_rlx_wv_b32	[0], $s0;
	atomicnoret_or_group_rlx_wv_b32	[&GroupVar], 4294967295;
	atomicnoret_or_group_rlx_wv_b32	[&GroupVar], WAVESIZE;
	atomicnoret_or_group_rlx_wv_equiv(1)_b32	[&GroupVar], $s0;
	atomicnoret_or_group_rlx_wv_equiv(2)_b32	[&GroupVar], $s0;
	atomicnoret_or_group_rlx_wv_equiv(255)_b32	[&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_st_rlx_wv_b32	[$s0], $s0;
	// 
	atomicnoret_st_rel_wv_b32	[$s0], $s0;
	atomicnoret_st_rlx_wg_b32	[$s0], $s0;
	atomicnoret_st_rlx_cmp_b32	[$s0], $s0;
	atomicnoret_st_rlx_sys_b32	[$s0], $s0;
	atomicnoret_st_rlx_wv_b32	[0], $s0;
	atomicnoret_st_rlx_wv_b32	[$s0], 4294967295;
	atomicnoret_st_rlx_wv_b32	[$s0], WAVESIZE;
	atomicnoret_st_rlx_wv_equiv(1)_b32	[$s0], $s0;
	atomicnoret_st_rlx_wv_equiv(2)_b32	[$s0], $s0;
	atomicnoret_st_rlx_wv_equiv(255)_b32	[$s0], $s0;
	// 
	// Next sample
	// 
	atomicnoret_st_global_rlx_wv_b32	[&GlobalVar], $s0;
	// 
	atomicnoret_st_global_rel_wv_b32	[&GlobalVar], $s0;
	atomicnoret_st_global_rlx_wg_b32	[&GlobalVar], $s0;
	atomicnoret_st_global_rlx_cmp_b32	[&GlobalVar], $s0;
	atomicnoret_st_global_rlx_sys_b32	[&GlobalVar], $s0;
	atomicnoret_st_global_rlx_wv_b32	[&GlobalROImg], $s0;
	atomicnoret_st_global_rlx_wv_b32	[&GlobalRWImg], $s0;
	atomicnoret_st_global_rlx_wv_b32	[&GlobalSamp], $s0;
	atomicnoret_st_global_rlx_wv_b32	[&GlobalSig32], $s0;
	atomicnoret_st_global_rlx_wv_b32	[&GlobalSig64], $s0;
	atomicnoret_st_global_rlx_wv_b32	[$s0], $s0;
	atomicnoret_st_global_rlx_wv_b32	[0], $s0;
	atomicnoret_st_global_rlx_wv_b32	[&GlobalVar], 4294967295;
	atomicnoret_st_global_rlx_wv_b32	[&GlobalVar], WAVESIZE;
	atomicnoret_st_global_rlx_wv_equiv(1)_b32	[&GlobalVar], $s0;
	atomicnoret_st_global_rlx_wv_equiv(2)_b32	[&GlobalVar], $s0;
	atomicnoret_st_global_rlx_wv_equiv(255)_b32	[&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_st_group_rlx_wv_b32	[&GroupVar], $s0;
	// 
	atomicnoret_st_group_rel_wv_b32	[&GroupVar], $s0;
	atomicnoret_st_group_rlx_wg_b32	[&GroupVar], $s0;
	atomicnoret_st_group_rlx_wv_b32	[$s0], $s0;
	atomicnoret_st_group_rlx_wv_b32	[0], $s0;
	atomicnoret_st_group_rlx_wv_b32	[&GroupVar], 4294967295;
	atomicnoret_st_group_rlx_wv_b32	[&GroupVar], WAVESIZE;
	atomicnoret_st_group_rlx_wv_equiv(1)_b32	[&GroupVar], $s0;
	atomicnoret_st_group_rlx_wv_equiv(2)_b32	[&GroupVar], $s0;
	atomicnoret_st_group_rlx_wv_equiv(255)_b32	[&GroupVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_xor_rlx_wv_b32	[$s0], $s0;
	// 
	atomicnoret_xor_acq_wv_b32	[$s0], $s0;
	atomicnoret_xor_rel_wv_b32	[$s0], $s0;
	atomicnoret_xor_ar_wv_b32	[$s0], $s0;
	atomicnoret_xor_rlx_wg_b32	[$s0], $s0;
	atomicnoret_xor_rlx_cmp_b32	[$s0], $s0;
	atomicnoret_xor_rlx_sys_b32	[$s0], $s0;
	atomicnoret_xor_rlx_wv_b32	[0], $s0;
	atomicnoret_xor_rlx_wv_b32	[$s0], 4294967295;
	atomicnoret_xor_rlx_wv_b32	[$s0], WAVESIZE;
	atomicnoret_xor_rlx_wv_equiv(1)_b32	[$s0], $s0;
	atomicnoret_xor_rlx_wv_equiv(2)_b32	[$s0], $s0;
	atomicnoret_xor_rlx_wv_equiv(255)_b32	[$s0], $s0;
	// 
	// Next sample
	// 
	atomicnoret_xor_global_rlx_wv_b32	[&GlobalVar], $s0;
	// 
	atomicnoret_xor_global_acq_wv_b32	[&GlobalVar], $s0;
	atomicnoret_xor_global_rel_wv_b32	[&GlobalVar], $s0;
	atomicnoret_xor_global_ar_wv_b32	[&GlobalVar], $s0;
	atomicnoret_xor_global_rlx_wg_b32	[&GlobalVar], $s0;
	atomicnoret_xor_global_rlx_cmp_b32	[&GlobalVar], $s0;
	atomicnoret_xor_global_rlx_sys_b32	[&GlobalVar], $s0;
	atomicnoret_xor_global_rlx_wv_b32	[&GlobalROImg], $s0;
	atomicnoret_xor_global_rlx_wv_b32	[&GlobalRWImg], $s0;
	atomicnoret_xor_global_rlx_wv_b32	[&GlobalSamp], $s0;
	atomicnoret_xor_global_rlx_wv_b32	[&GlobalSig32], $s0;
	atomicnoret_xor_global_rlx_wv_b32	[&GlobalSig64], $s0;
	atomicnoret_xor_global_rlx_wv_b32	[$s0], $s0;
	atomicnoret_xor_global_rlx_wv_b32	[0], $s0;
	atomicnoret_xor_global_rlx_wv_b32	[&GlobalVar], 4294967295;
	atomicnoret_xor_global_rlx_wv_b32	[&GlobalVar], WAVESIZE;
	atomicnoret_xor_global_rlx_wv_equiv(1)_b32	[&GlobalVar], $s0;
	atomicnoret_xor_global_rlx_wv_equiv(2)_b32	[&GlobalVar], $s0;
	atomicnoret_xor_global_rlx_wv_equiv(255)_b32	[&GlobalVar], $s0;
	// 
	// Next sample
	// 
	atomicnoret_xor_group_rlx_wv_b32	[&GroupVar], $s0;
	// 
	atomicnoret_xor_group_acq_wv_b32	[&GroupVar], $s0;
	atomicnoret_xor_group_rel_wv_b32	[&GroupVar], $s0;
	atomicnoret_xor_group_ar_wv_b32	[&GroupVar], $s0;
	atomicnoret_xor_group_rlx_wg_b32	[&GroupVar], $s0;
	atomicnoret_xor_group_rlx_wv_b32	[$s0], $s0;
	atomicnoret_xor_group_rlx_wv_b32	[0], $s0;
	atomicnoret_xor_group_rlx_wv_b32	[&GroupVar], 4294967295;
	atomicnoret_xor_group_rlx_wv_b32	[&GroupVar], WAVESIZE;
	atomicnoret_xor_group_rlx_wv_equiv(1)_b32	[&GroupVar], $s0;
	atomicnoret_xor_group_rlx_wv_equiv(2)_b32	[&GroupVar], $s0;
	atomicnoret_xor_group_rlx_wv_equiv(255)_b32	[&GroupVar], $s0;
	// 
	// Next sample
	// 
	signal_add_rlx_u32_sig32	$s0, $d0, $s0;
	// 
	signal_add_acq_u32_sig32	$s0, $d0, $s0;
	signal_add_rel_u32_sig32	$s0, $d0, $s0;
	signal_add_ar_u32_sig32	$s0, $d0, $s0;
	signal_add_rlx_u32_sig32	$s0, $d0, 4294967295;
	signal_add_rlx_u32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_dec_rlx_u32_sig32	$s0, $d0, $s0;
	// 
	signal_dec_acq_u32_sig32	$s0, $d0, $s0;
	signal_dec_rel_u32_sig32	$s0, $d0, $s0;
	signal_dec_ar_u32_sig32	$s0, $d0, $s0;
	signal_dec_rlx_u32_sig32	$s0, $d0, 4294967295;
	signal_dec_rlx_u32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_inc_rlx_u32_sig32	$s0, $d0, $s0;
	// 
	signal_inc_acq_u32_sig32	$s0, $d0, $s0;
	signal_inc_rel_u32_sig32	$s0, $d0, $s0;
	signal_inc_ar_u32_sig32	$s0, $d0, $s0;
	signal_inc_rlx_u32_sig32	$s0, $d0, 4294967295;
	signal_inc_rlx_u32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_max_rlx_u32_sig32	$s0, $d0, $s0;
	// 
	signal_max_acq_u32_sig32	$s0, $d0, $s0;
	signal_max_rel_u32_sig32	$s0, $d0, $s0;
	signal_max_ar_u32_sig32	$s0, $d0, $s0;
	signal_max_rlx_u32_sig32	$s0, $d0, 4294967295;
	signal_max_rlx_u32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_min_rlx_u32_sig32	$s0, $d0, $s0;
	// 
	signal_min_acq_u32_sig32	$s0, $d0, $s0;
	signal_min_rel_u32_sig32	$s0, $d0, $s0;
	signal_min_ar_u32_sig32	$s0, $d0, $s0;
	signal_min_rlx_u32_sig32	$s0, $d0, 4294967295;
	signal_min_rlx_u32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_sub_rlx_u32_sig32	$s0, $d0, $s0;
	// 
	signal_sub_acq_u32_sig32	$s0, $d0, $s0;
	signal_sub_rel_u32_sig32	$s0, $d0, $s0;
	signal_sub_ar_u32_sig32	$s0, $d0, $s0;
	signal_sub_rlx_u32_sig32	$s0, $d0, 4294967295;
	signal_sub_rlx_u32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_add_rlx_s32_sig32	$s0, $d0, $s0;
	// 
	signal_add_acq_s32_sig32	$s0, $d0, $s0;
	signal_add_rel_s32_sig32	$s0, $d0, $s0;
	signal_add_ar_s32_sig32	$s0, $d0, $s0;
	signal_add_rlx_s32_sig32	$s0, $d0, -1;
	signal_add_rlx_s32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_max_rlx_s32_sig32	$s0, $d0, $s0;
	// 
	signal_max_acq_s32_sig32	$s0, $d0, $s0;
	signal_max_rel_s32_sig32	$s0, $d0, $s0;
	signal_max_ar_s32_sig32	$s0, $d0, $s0;
	signal_max_rlx_s32_sig32	$s0, $d0, -1;
	signal_max_rlx_s32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_min_rlx_s32_sig32	$s0, $d0, $s0;
	// 
	signal_min_acq_s32_sig32	$s0, $d0, $s0;
	signal_min_rel_s32_sig32	$s0, $d0, $s0;
	signal_min_ar_s32_sig32	$s0, $d0, $s0;
	signal_min_rlx_s32_sig32	$s0, $d0, -1;
	signal_min_rlx_s32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_sub_rlx_s32_sig32	$s0, $d0, $s0;
	// 
	signal_sub_acq_s32_sig32	$s0, $d0, $s0;
	signal_sub_rel_s32_sig32	$s0, $d0, $s0;
	signal_sub_ar_s32_sig32	$s0, $d0, $s0;
	signal_sub_rlx_s32_sig32	$s0, $d0, -1;
	signal_sub_rlx_s32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_wait_eq_rlx_s32_sig32	$s0, $d0, $s0;
	// 
	signal_wait_eq_acq_s32_sig32	$s0, $d0, $s0;
	signal_wait_eq_rlx_s32_sig32	$s0, $d0, -1;
	signal_wait_eq_rlx_s32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_wait_ne_rlx_s32_sig32	$s0, $d0, $s0;
	// 
	signal_wait_ne_acq_s32_sig32	$s0, $d0, $s0;
	signal_wait_ne_rlx_s32_sig32	$s0, $d0, -1;
	signal_wait_ne_rlx_s32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_wait_lt_rlx_s32_sig32	$s0, $d0, $s0;
	// 
	signal_wait_lt_acq_s32_sig32	$s0, $d0, $s0;
	signal_wait_lt_rlx_s32_sig32	$s0, $d0, -1;
	signal_wait_lt_rlx_s32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_wait_gte_rlx_s32_sig32	$s0, $d0, $s0;
	// 
	signal_wait_gte_acq_s32_sig32	$s0, $d0, $s0;
	signal_wait_gte_rlx_s32_sig32	$s0, $d0, -1;
	signal_wait_gte_rlx_s32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_waittimeout_eq_rlx_s32_sig32	$s0, $d0, $s0, $d0;
	// 
	signal_waittimeout_eq_acq_s32_sig32	$s0, $d0, $s0, $d0;
	signal_waittimeout_eq_rlx_s32_sig32	$s0, $d0, -1, $d0;
	signal_waittimeout_eq_rlx_s32_sig32	$s0, $d0, WAVESIZE, $d0;
	signal_waittimeout_eq_rlx_s32_sig32	$s0, $d0, $s0, 18446744073709551615;
	signal_waittimeout_eq_rlx_s32_sig32	$s0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_waittimeout_ne_rlx_s32_sig32	$s0, $d0, $s0, $d0;
	// 
	signal_waittimeout_ne_acq_s32_sig32	$s0, $d0, $s0, $d0;
	signal_waittimeout_ne_rlx_s32_sig32	$s0, $d0, -1, $d0;
	signal_waittimeout_ne_rlx_s32_sig32	$s0, $d0, WAVESIZE, $d0;
	signal_waittimeout_ne_rlx_s32_sig32	$s0, $d0, $s0, 18446744073709551615;
	signal_waittimeout_ne_rlx_s32_sig32	$s0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_waittimeout_lt_rlx_s32_sig32	$s0, $d0, $s0, $d0;
	// 
	signal_waittimeout_lt_acq_s32_sig32	$s0, $d0, $s0, $d0;
	signal_waittimeout_lt_rlx_s32_sig32	$s0, $d0, -1, $d0;
	signal_waittimeout_lt_rlx_s32_sig32	$s0, $d0, WAVESIZE, $d0;
	signal_waittimeout_lt_rlx_s32_sig32	$s0, $d0, $s0, 18446744073709551615;
	signal_waittimeout_lt_rlx_s32_sig32	$s0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_waittimeout_gte_rlx_s32_sig32	$s0, $d0, $s0, $d0;
	// 
	signal_waittimeout_gte_acq_s32_sig32	$s0, $d0, $s0, $d0;
	signal_waittimeout_gte_rlx_s32_sig32	$s0, $d0, -1, $d0;
	signal_waittimeout_gte_rlx_s32_sig32	$s0, $d0, WAVESIZE, $d0;
	signal_waittimeout_gte_rlx_s32_sig32	$s0, $d0, $s0, 18446744073709551615;
	signal_waittimeout_gte_rlx_s32_sig32	$s0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_and_rlx_b32_sig32	$s0, $d0, $s0;
	// 
	signal_and_acq_b32_sig32	$s0, $d0, $s0;
	signal_and_rel_b32_sig32	$s0, $d0, $s0;
	signal_and_ar_b32_sig32	$s0, $d0, $s0;
	signal_and_rlx_b32_sig32	$s0, $d0, 4294967295;
	signal_and_rlx_b32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_cas_rlx_b32_sig32	$s0, $d0, $s0, $s0;
	// 
	signal_cas_acq_b32_sig32	$s0, $d0, $s0, $s0;
	signal_cas_rel_b32_sig32	$s0, $d0, $s0, $s0;
	signal_cas_ar_b32_sig32	$s0, $d0, $s0, $s0;
	signal_cas_rlx_b32_sig32	$s0, $d0, 4294967295, $s0;
	signal_cas_rlx_b32_sig32	$s0, $d0, WAVESIZE, $s0;
	signal_cas_rlx_b32_sig32	$s0, $d0, $s0, 4294967295;
	signal_cas_rlx_b32_sig32	$s0, $d0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_exch_rlx_b32_sig32	$s0, $d0, $s0;
	// 
	signal_exch_acq_b32_sig32	$s0, $d0, $s0;
	signal_exch_rel_b32_sig32	$s0, $d0, $s0;
	signal_exch_ar_b32_sig32	$s0, $d0, $s0;
	signal_exch_rlx_b32_sig32	$s0, $d0, 4294967295;
	signal_exch_rlx_b32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_ld_rlx_b32_sig32	$s0, $d0;
	// 
	signal_ld_acq_b32_sig32	$s0, $d0;
	// 
	// Next sample
	// 
	signal_or_rlx_b32_sig32	$s0, $d0, $s0;
	// 
	signal_or_acq_b32_sig32	$s0, $d0, $s0;
	signal_or_rel_b32_sig32	$s0, $d0, $s0;
	signal_or_ar_b32_sig32	$s0, $d0, $s0;
	signal_or_rlx_b32_sig32	$s0, $d0, 4294967295;
	signal_or_rlx_b32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signal_xor_rlx_b32_sig32	$s0, $d0, $s0;
	// 
	signal_xor_acq_b32_sig32	$s0, $d0, $s0;
	signal_xor_rel_b32_sig32	$s0, $d0, $s0;
	signal_xor_ar_b32_sig32	$s0, $d0, $s0;
	signal_xor_rlx_b32_sig32	$s0, $d0, 4294967295;
	signal_xor_rlx_b32_sig32	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	signalnoret_add_rlx_u32_sig32	$d0, $s0;
	// 
	signalnoret_add_acq_u32_sig32	$d0, $s0;
	signalnoret_add_rel_u32_sig32	$d0, $s0;
	signalnoret_add_ar_u32_sig32	$d0, $s0;
	signalnoret_add_rlx_u32_sig32	$d0, 4294967295;
	signalnoret_add_rlx_u32_sig32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	signalnoret_dec_rlx_u32_sig32	$d0, $s0;
	// 
	signalnoret_dec_acq_u32_sig32	$d0, $s0;
	signalnoret_dec_rel_u32_sig32	$d0, $s0;
	signalnoret_dec_ar_u32_sig32	$d0, $s0;
	signalnoret_dec_rlx_u32_sig32	$d0, 4294967295;
	signalnoret_dec_rlx_u32_sig32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	signalnoret_inc_rlx_u32_sig32	$d0, $s0;
	// 
	signalnoret_inc_acq_u32_sig32	$d0, $s0;
	signalnoret_inc_rel_u32_sig32	$d0, $s0;
	signalnoret_inc_ar_u32_sig32	$d0, $s0;
	signalnoret_inc_rlx_u32_sig32	$d0, 4294967295;
	signalnoret_inc_rlx_u32_sig32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	signalnoret_max_rlx_u32_sig32	$d0, $s0;
	// 
	signalnoret_max_acq_u32_sig32	$d0, $s0;
	signalnoret_max_rel_u32_sig32	$d0, $s0;
	signalnoret_max_ar_u32_sig32	$d0, $s0;
	signalnoret_max_rlx_u32_sig32	$d0, 4294967295;
	signalnoret_max_rlx_u32_sig32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	signalnoret_min_rlx_u32_sig32	$d0, $s0;
	// 
	signalnoret_min_acq_u32_sig32	$d0, $s0;
	signalnoret_min_rel_u32_sig32	$d0, $s0;
	signalnoret_min_ar_u32_sig32	$d0, $s0;
	signalnoret_min_rlx_u32_sig32	$d0, 4294967295;
	signalnoret_min_rlx_u32_sig32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	signalnoret_sub_rlx_u32_sig32	$d0, $s0;
	// 
	signalnoret_sub_acq_u32_sig32	$d0, $s0;
	signalnoret_sub_rel_u32_sig32	$d0, $s0;
	signalnoret_sub_ar_u32_sig32	$d0, $s0;
	signalnoret_sub_rlx_u32_sig32	$d0, 4294967295;
	signalnoret_sub_rlx_u32_sig32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	signalnoret_add_rlx_s32_sig32	$d0, $s0;
	// 
	signalnoret_add_acq_s32_sig32	$d0, $s0;
	signalnoret_add_rel_s32_sig32	$d0, $s0;
	signalnoret_add_ar_s32_sig32	$d0, $s0;
	signalnoret_add_rlx_s32_sig32	$d0, -1;
	signalnoret_add_rlx_s32_sig32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	signalnoret_max_rlx_s32_sig32	$d0, $s0;
	// 
	signalnoret_max_acq_s32_sig32	$d0, $s0;
	signalnoret_max_rel_s32_sig32	$d0, $s0;
	signalnoret_max_ar_s32_sig32	$d0, $s0;
	signalnoret_max_rlx_s32_sig32	$d0, -1;
	signalnoret_max_rlx_s32_sig32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	signalnoret_min_rlx_s32_sig32	$d0, $s0;
	// 
	signalnoret_min_acq_s32_sig32	$d0, $s0;
	signalnoret_min_rel_s32_sig32	$d0, $s0;
	signalnoret_min_ar_s32_sig32	$d0, $s0;
	signalnoret_min_rlx_s32_sig32	$d0, -1;
	signalnoret_min_rlx_s32_sig32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	signalnoret_sub_rlx_s32_sig32	$d0, $s0;
	// 
	signalnoret_sub_acq_s32_sig32	$d0, $s0;
	signalnoret_sub_rel_s32_sig32	$d0, $s0;
	signalnoret_sub_ar_s32_sig32	$d0, $s0;
	signalnoret_sub_rlx_s32_sig32	$d0, -1;
	signalnoret_sub_rlx_s32_sig32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	signalnoret_and_rlx_b32_sig32	$d0, $s0;
	// 
	signalnoret_and_acq_b32_sig32	$d0, $s0;
	signalnoret_and_rel_b32_sig32	$d0, $s0;
	signalnoret_and_ar_b32_sig32	$d0, $s0;
	signalnoret_and_rlx_b32_sig32	$d0, 4294967295;
	signalnoret_and_rlx_b32_sig32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	signalnoret_cas_rlx_b32_sig32	$d0, $s0, $s0;
	// 
	signalnoret_cas_acq_b32_sig32	$d0, $s0, $s0;
	signalnoret_cas_rel_b32_sig32	$d0, $s0, $s0;
	signalnoret_cas_ar_b32_sig32	$d0, $s0, $s0;
	signalnoret_cas_rlx_b32_sig32	$d0, $s0, 4294967295;
	signalnoret_cas_rlx_b32_sig32	$d0, $s0, WAVESIZE;
	signalnoret_cas_rlx_b32_sig32	$d0, 4294967295, $s0;
	signalnoret_cas_rlx_b32_sig32	$d0, WAVESIZE, $s0;
	// 
	// Next sample
	// 
	signalnoret_or_rlx_b32_sig32	$d0, $s0;
	// 
	signalnoret_or_acq_b32_sig32	$d0, $s0;
	signalnoret_or_rel_b32_sig32	$d0, $s0;
	signalnoret_or_ar_b32_sig32	$d0, $s0;
	signalnoret_or_rlx_b32_sig32	$d0, 4294967295;
	signalnoret_or_rlx_b32_sig32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	signalnoret_st_rlx_b32_sig32	$d0, $s0;
	// 
	signalnoret_st_rel_b32_sig32	$d0, $s0;
	signalnoret_st_rlx_b32_sig32	$d0, 4294967295;
	signalnoret_st_rlx_b32_sig32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	signalnoret_xor_rlx_b32_sig32	$d0, $s0;
	// 
	signalnoret_xor_acq_b32_sig32	$d0, $s0;
	signalnoret_xor_rel_b32_sig32	$d0, $s0;
	signalnoret_xor_ar_b32_sig32	$d0, $s0;
	signalnoret_xor_rlx_b32_sig32	$d0, 4294967295;
	signalnoret_xor_rlx_b32_sig32	$d0, WAVESIZE;
	// 
	// Next sample
	// 
	rdimage_v4_1d_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	rdimage_v4_1d_u32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, $s0;
	rdimage_v4_1d_u32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, $s0;
	rdimage_v4_1d_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], $s0;
	rdimage_v4_1d_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], $s0;
	rdimage_v4_1d_equiv(1)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(2)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(255)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	// Next sample
	// 
	rdimage_v4_2d_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_2d_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_2d_u32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0);
	rdimage_v4_2d_u32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0);
	rdimage_v4_2d_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_2d_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_2d_equiv(1)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(2)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(255)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_3d_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_3d_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_3d_u32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_u32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_3d_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(1)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(2)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(255)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1da_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_1da_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_1da_u32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0);
	rdimage_v4_1da_u32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0);
	rdimage_v4_1da_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_1da_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_1da_equiv(1)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(2)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(255)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_2da_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_2da_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_2da_u32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_u32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_2da_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(1)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(2)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(255)_u32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1d_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	rdimage_v4_1d_s32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, $s0;
	rdimage_v4_1d_s32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, $s0;
	rdimage_v4_1d_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], $s0;
	rdimage_v4_1d_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], $s0;
	rdimage_v4_1d_equiv(1)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(2)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(255)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	// Next sample
	// 
	rdimage_v4_2d_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_2d_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_2d_s32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0);
	rdimage_v4_2d_s32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0);
	rdimage_v4_2d_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_2d_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_2d_equiv(1)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(2)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(255)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_3d_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_3d_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_3d_s32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_s32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_3d_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(1)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(2)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(255)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1da_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_1da_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_1da_s32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0);
	rdimage_v4_1da_s32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0);
	rdimage_v4_1da_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_1da_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_1da_equiv(1)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(2)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(255)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_2da_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_2da_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_2da_s32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_s32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_2da_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(1)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(2)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(255)_s32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1d_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	rdimage_v4_1d_f32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, $s0;
	rdimage_v4_1d_f32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, $s0;
	rdimage_v4_1d_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], $s0;
	rdimage_v4_1d_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], $s0;
	rdimage_v4_1d_equiv(1)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(2)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(255)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	// Next sample
	// 
	rdimage_v4_2d_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_2d_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_2d_f32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0);
	rdimage_v4_2d_f32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0);
	rdimage_v4_2d_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_2d_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_2d_equiv(1)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(2)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(255)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_3d_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_3d_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_3d_f32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_f32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_3d_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(1)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(2)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(255)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1da_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_1da_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_1da_f32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0);
	rdimage_v4_1da_f32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0);
	rdimage_v4_1da_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_1da_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_1da_equiv(1)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(2)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(255)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_2da_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_2da_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_2da_f32_roimg_s32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_f32_roimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_2da_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(1)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(2)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(255)_f32_roimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1d_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	rdimage_v4_1d_u32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, $s0;
	rdimage_v4_1d_u32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, $s0;
	rdimage_v4_1d_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], $s0;
	rdimage_v4_1d_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], $s0;
	rdimage_v4_1d_equiv(1)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(2)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(255)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	// Next sample
	// 
	rdimage_v4_2d_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_2d_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_2d_u32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0);
	rdimage_v4_2d_u32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0);
	rdimage_v4_2d_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_2d_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_2d_equiv(1)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(2)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(255)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_3d_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_3d_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_3d_u32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_u32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_3d_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(1)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(2)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(255)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1da_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_1da_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_1da_u32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0);
	rdimage_v4_1da_u32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0);
	rdimage_v4_1da_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_1da_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_1da_equiv(1)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(2)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(255)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_2da_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_2da_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_2da_u32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_u32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_2da_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(1)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(2)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(255)_u32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1d_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	rdimage_v4_1d_s32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, $s0;
	rdimage_v4_1d_s32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, $s0;
	rdimage_v4_1d_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], $s0;
	rdimage_v4_1d_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], $s0;
	rdimage_v4_1d_equiv(1)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(2)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(255)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	// Next sample
	// 
	rdimage_v4_2d_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_2d_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_2d_s32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0);
	rdimage_v4_2d_s32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0);
	rdimage_v4_2d_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_2d_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_2d_equiv(1)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(2)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(255)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_3d_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_3d_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_3d_s32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_s32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_3d_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(1)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(2)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(255)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1da_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_1da_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_1da_s32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0);
	rdimage_v4_1da_s32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0);
	rdimage_v4_1da_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_1da_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_1da_equiv(1)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(2)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(255)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_2da_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_2da_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_2da_s32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_s32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_2da_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(1)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(2)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(255)_s32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1d_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	rdimage_v4_1d_f32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, $s0;
	rdimage_v4_1d_f32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, $s0;
	rdimage_v4_1d_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], $s0;
	rdimage_v4_1d_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], $s0;
	rdimage_v4_1d_equiv(1)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(2)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(255)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	// Next sample
	// 
	rdimage_v4_2d_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_2d_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_2d_f32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0);
	rdimage_v4_2d_f32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0);
	rdimage_v4_2d_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_2d_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_2d_equiv(1)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(2)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(255)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_3d_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_3d_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_3d_f32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_f32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_3d_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(1)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(2)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(255)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1da_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_1da_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_1da_f32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0);
	rdimage_v4_1da_f32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0);
	rdimage_v4_1da_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_1da_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_1da_equiv(1)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(2)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(255)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_2da_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_2da_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_2da_f32_rwimg_s32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_f32_rwimg_s32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_2da_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(1)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(2)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(255)_f32_rwimg_s32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1d_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	rdimage_v4_1d_u32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, $s0;
	rdimage_v4_1d_u32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, $s0;
	rdimage_v4_1d_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], $s0;
	rdimage_v4_1d_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], $s0;
	rdimage_v4_1d_equiv(1)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(2)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(255)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	// Next sample
	// 
	rdimage_v4_2d_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_2d_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_2d_u32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0);
	rdimage_v4_2d_u32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0);
	rdimage_v4_2d_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_2d_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_2d_equiv(1)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(2)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(255)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_3d_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_3d_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_3d_u32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_u32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_3d_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(1)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(2)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(255)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1da_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_1da_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_1da_u32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0);
	rdimage_v4_1da_u32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0);
	rdimage_v4_1da_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_1da_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_1da_equiv(1)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(2)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(255)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_2da_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_2da_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_2da_u32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_u32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_2da_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(1)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(2)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(255)_u32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1d_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	rdimage_v4_1d_s32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, $s0;
	rdimage_v4_1d_s32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, $s0;
	rdimage_v4_1d_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], $s0;
	rdimage_v4_1d_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], $s0;
	rdimage_v4_1d_equiv(1)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(2)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(255)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	// Next sample
	// 
	rdimage_v4_2d_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_2d_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_2d_s32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0);
	rdimage_v4_2d_s32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0);
	rdimage_v4_2d_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_2d_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_2d_equiv(1)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(2)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(255)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_3d_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_3d_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_3d_s32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_s32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_3d_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(1)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(2)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(255)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1da_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_1da_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_1da_s32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0);
	rdimage_v4_1da_s32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0);
	rdimage_v4_1da_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_1da_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_1da_equiv(1)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(2)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(255)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_2da_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_2da_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_2da_s32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_s32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_2da_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(1)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(2)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(255)_s32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1d_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	rdimage_v4_1d_f32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, $s0;
	rdimage_v4_1d_f32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, $s0;
	rdimage_v4_1d_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], $s0;
	rdimage_v4_1d_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], $s0;
	rdimage_v4_1d_equiv(1)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(2)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(255)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	// Next sample
	// 
	rdimage_v4_2d_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_2d_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_2d_f32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0);
	rdimage_v4_2d_f32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0);
	rdimage_v4_2d_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_2d_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_2d_equiv(1)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(2)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(255)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_3d_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_3d_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_3d_f32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_f32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_3d_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(1)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(2)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(255)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1da_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_1da_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_1da_f32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0);
	rdimage_v4_1da_f32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0);
	rdimage_v4_1da_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_1da_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_1da_equiv(1)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(2)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(255)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_2da_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_2da_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_2da_f32_roimg_f32	($s0,$s1,$s2,$s3), [&GlobalROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_f32_roimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_2da_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(1)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(2)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(255)_f32_roimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1d_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	rdimage_v4_1d_u32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, $s0;
	rdimage_v4_1d_u32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, $s0;
	rdimage_v4_1d_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], $s0;
	rdimage_v4_1d_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], $s0;
	rdimage_v4_1d_equiv(1)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(2)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(255)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	// Next sample
	// 
	rdimage_v4_2d_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_2d_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_2d_u32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0);
	rdimage_v4_2d_u32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0);
	rdimage_v4_2d_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_2d_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_2d_equiv(1)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(2)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(255)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_3d_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_3d_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_3d_u32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_u32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_3d_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(1)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(2)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(255)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1da_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_1da_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_1da_u32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0);
	rdimage_v4_1da_u32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0);
	rdimage_v4_1da_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_1da_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_1da_equiv(1)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(2)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(255)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_2da_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_2da_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_2da_u32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_u32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_2da_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(1)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(2)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(255)_u32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1d_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	rdimage_v4_1d_s32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, $s0;
	rdimage_v4_1d_s32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, $s0;
	rdimage_v4_1d_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], $s0;
	rdimage_v4_1d_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], $s0;
	rdimage_v4_1d_equiv(1)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(2)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(255)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	// Next sample
	// 
	rdimage_v4_2d_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_2d_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_2d_s32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0);
	rdimage_v4_2d_s32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0);
	rdimage_v4_2d_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_2d_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_2d_equiv(1)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(2)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(255)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_3d_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_3d_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_3d_s32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_s32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_3d_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(1)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(2)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(255)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1da_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_1da_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_1da_s32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0);
	rdimage_v4_1da_s32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0);
	rdimage_v4_1da_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_1da_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_1da_equiv(1)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(2)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(255)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_2da_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_2da_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_2da_s32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_s32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_2da_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(1)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(2)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(255)_s32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1d_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	rdimage_v4_1d_f32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, $s0;
	rdimage_v4_1d_f32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, $s0;
	rdimage_v4_1d_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], $s0;
	rdimage_v4_1d_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], $s0;
	rdimage_v4_1d_equiv(1)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(2)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	rdimage_v4_1d_equiv(255)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, $s0;
	// 
	// Next sample
	// 
	rdimage_v4_2d_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_2d_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_2d_f32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0);
	rdimage_v4_2d_f32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0);
	rdimage_v4_2d_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_2d_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_2d_equiv(1)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(2)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_2d_equiv(255)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_3d_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_3d_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_3d_f32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_f32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_3d_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(1)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(2)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_3d_equiv(255)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_1da_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	rdimage_v4_1da_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1);
	rdimage_v4_1da_f32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0);
	rdimage_v4_1da_f32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0);
	rdimage_v4_1da_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0);
	rdimage_v4_1da_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0);
	rdimage_v4_1da_equiv(1)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(2)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	rdimage_v4_1da_equiv(255)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	rdimage_v4_2da_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	rdimage_v4_2da_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s1,$s2);
	rdimage_v4_2da_f32_rwimg_f32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_f32_rwimg_f32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&GlobalSamp], ($s0,$s0,$s0);
	rdimage_v4_2da_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, [&ReadonlySamp], ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(1)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(2)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	rdimage_v4_2da_equiv(255)_f32_rwimg_f32	($s0,$s1,$s2,$s3), $d0, $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1d_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	ldimage_v4_1d_u32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], $s0;
	ldimage_v4_1d_u32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $s0;
	ldimage_v4_1d_equiv(1)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1d_equiv(2)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1d_equiv(255)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	// Next sample
	// 
	ldimage_v4_2d_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	ldimage_v4_2d_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1);
	ldimage_v4_2d_u32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], ($s0,$s0);
	ldimage_v4_2d_u32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], ($s0,$s0);
	ldimage_v4_2d_equiv(1)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_2d_equiv(2)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_2d_equiv(255)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_3d_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	ldimage_v4_3d_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1,$s2);
	ldimage_v4_3d_u32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], ($s0,$s0,$s0);
	ldimage_v4_3d_u32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(1)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(2)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(255)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1da_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	ldimage_v4_1da_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1);
	ldimage_v4_1da_u32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], ($s0,$s0);
	ldimage_v4_1da_u32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], ($s0,$s0);
	ldimage_v4_1da_equiv(1)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_1da_equiv(2)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_1da_equiv(255)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1db_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	ldimage_v4_1db_u32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], $s0;
	ldimage_v4_1db_u32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $s0;
	ldimage_v4_1db_equiv(1)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1db_equiv(2)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1db_equiv(255)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	// Next sample
	// 
	ldimage_v4_2da_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	ldimage_v4_2da_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1,$s2);
	ldimage_v4_2da_u32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], ($s0,$s0,$s0);
	ldimage_v4_2da_u32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(1)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(2)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(255)_u32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1d_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	ldimage_v4_1d_s32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], $s0;
	ldimage_v4_1d_s32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $s0;
	ldimage_v4_1d_equiv(1)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1d_equiv(2)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1d_equiv(255)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	// Next sample
	// 
	ldimage_v4_2d_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	ldimage_v4_2d_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1);
	ldimage_v4_2d_s32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], ($s0,$s0);
	ldimage_v4_2d_s32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], ($s0,$s0);
	ldimage_v4_2d_equiv(1)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_2d_equiv(2)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_2d_equiv(255)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_3d_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	ldimage_v4_3d_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1,$s2);
	ldimage_v4_3d_s32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], ($s0,$s0,$s0);
	ldimage_v4_3d_s32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(1)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(2)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(255)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1da_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	ldimage_v4_1da_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1);
	ldimage_v4_1da_s32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], ($s0,$s0);
	ldimage_v4_1da_s32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], ($s0,$s0);
	ldimage_v4_1da_equiv(1)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_1da_equiv(2)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_1da_equiv(255)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1db_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	ldimage_v4_1db_s32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], $s0;
	ldimage_v4_1db_s32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $s0;
	ldimage_v4_1db_equiv(1)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1db_equiv(2)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1db_equiv(255)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	// Next sample
	// 
	ldimage_v4_2da_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	ldimage_v4_2da_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1,$s2);
	ldimage_v4_2da_s32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], ($s0,$s0,$s0);
	ldimage_v4_2da_s32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(1)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(2)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(255)_s32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1d_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	ldimage_v4_1d_f32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], $s0;
	ldimage_v4_1d_f32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $s0;
	ldimage_v4_1d_equiv(1)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1d_equiv(2)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1d_equiv(255)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	// Next sample
	// 
	ldimage_v4_2d_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	ldimage_v4_2d_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1);
	ldimage_v4_2d_f32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], ($s0,$s0);
	ldimage_v4_2d_f32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], ($s0,$s0);
	ldimage_v4_2d_equiv(1)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_2d_equiv(2)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_2d_equiv(255)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_3d_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	ldimage_v4_3d_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1,$s2);
	ldimage_v4_3d_f32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], ($s0,$s0,$s0);
	ldimage_v4_3d_f32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(1)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(2)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(255)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1da_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	ldimage_v4_1da_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1);
	ldimage_v4_1da_f32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], ($s0,$s0);
	ldimage_v4_1da_f32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], ($s0,$s0);
	ldimage_v4_1da_equiv(1)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_1da_equiv(2)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_1da_equiv(255)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1db_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	ldimage_v4_1db_f32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], $s0;
	ldimage_v4_1db_f32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], $s0;
	ldimage_v4_1db_equiv(1)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1db_equiv(2)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1db_equiv(255)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	// Next sample
	// 
	ldimage_v4_2da_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	ldimage_v4_2da_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1,$s2);
	ldimage_v4_2da_f32_roimg_u32	($s0,$s1,$s2,$s3), [&GlobalROImg], ($s0,$s0,$s0);
	ldimage_v4_2da_f32_roimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyROImg], ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(1)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(2)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(255)_f32_roimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1d_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	ldimage_v4_1d_u32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $s0;
	ldimage_v4_1d_u32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $s0;
	ldimage_v4_1d_equiv(1)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1d_equiv(2)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1d_equiv(255)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	// Next sample
	// 
	ldimage_v4_2d_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	ldimage_v4_2d_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1);
	ldimage_v4_2d_u32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], ($s0,$s0);
	ldimage_v4_2d_u32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], ($s0,$s0);
	ldimage_v4_2d_equiv(1)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_2d_equiv(2)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_2d_equiv(255)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_3d_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	ldimage_v4_3d_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1,$s2);
	ldimage_v4_3d_u32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], ($s0,$s0,$s0);
	ldimage_v4_3d_u32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(1)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(2)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(255)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1da_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	ldimage_v4_1da_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1);
	ldimage_v4_1da_u32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], ($s0,$s0);
	ldimage_v4_1da_u32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], ($s0,$s0);
	ldimage_v4_1da_equiv(1)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_1da_equiv(2)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_1da_equiv(255)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1db_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	ldimage_v4_1db_u32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $s0;
	ldimage_v4_1db_u32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $s0;
	ldimage_v4_1db_equiv(1)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1db_equiv(2)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1db_equiv(255)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	// Next sample
	// 
	ldimage_v4_2da_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	ldimage_v4_2da_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1,$s2);
	ldimage_v4_2da_u32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], ($s0,$s0,$s0);
	ldimage_v4_2da_u32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(1)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(2)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(255)_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1d_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	ldimage_v4_1d_s32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $s0;
	ldimage_v4_1d_s32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $s0;
	ldimage_v4_1d_equiv(1)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1d_equiv(2)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1d_equiv(255)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	// Next sample
	// 
	ldimage_v4_2d_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	ldimage_v4_2d_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1);
	ldimage_v4_2d_s32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], ($s0,$s0);
	ldimage_v4_2d_s32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], ($s0,$s0);
	ldimage_v4_2d_equiv(1)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_2d_equiv(2)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_2d_equiv(255)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_3d_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	ldimage_v4_3d_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1,$s2);
	ldimage_v4_3d_s32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], ($s0,$s0,$s0);
	ldimage_v4_3d_s32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(1)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(2)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(255)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1da_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	ldimage_v4_1da_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1);
	ldimage_v4_1da_s32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], ($s0,$s0);
	ldimage_v4_1da_s32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], ($s0,$s0);
	ldimage_v4_1da_equiv(1)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_1da_equiv(2)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_1da_equiv(255)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1db_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	ldimage_v4_1db_s32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $s0;
	ldimage_v4_1db_s32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $s0;
	ldimage_v4_1db_equiv(1)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1db_equiv(2)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1db_equiv(255)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	// Next sample
	// 
	ldimage_v4_2da_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	ldimage_v4_2da_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1,$s2);
	ldimage_v4_2da_s32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], ($s0,$s0,$s0);
	ldimage_v4_2da_s32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(1)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(2)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(255)_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1d_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	ldimage_v4_1d_f32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $s0;
	ldimage_v4_1d_f32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $s0;
	ldimage_v4_1d_equiv(1)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1d_equiv(2)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1d_equiv(255)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	// Next sample
	// 
	ldimage_v4_2d_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	ldimage_v4_2d_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1);
	ldimage_v4_2d_f32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], ($s0,$s0);
	ldimage_v4_2d_f32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], ($s0,$s0);
	ldimage_v4_2d_equiv(1)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_2d_equiv(2)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_2d_equiv(255)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_3d_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	ldimage_v4_3d_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1,$s2);
	ldimage_v4_3d_f32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], ($s0,$s0,$s0);
	ldimage_v4_3d_f32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(1)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(2)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_3d_equiv(255)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1da_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	ldimage_v4_1da_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1);
	ldimage_v4_1da_f32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], ($s0,$s0);
	ldimage_v4_1da_f32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], ($s0,$s0);
	ldimage_v4_1da_equiv(1)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_1da_equiv(2)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	ldimage_v4_1da_equiv(255)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	ldimage_v4_1db_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	ldimage_v4_1db_f32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], $s0;
	ldimage_v4_1db_f32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], $s0;
	ldimage_v4_1db_equiv(1)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1db_equiv(2)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	ldimage_v4_1db_equiv(255)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	// 
	// Next sample
	// 
	ldimage_v4_2da_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	ldimage_v4_2da_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s1,$s2);
	ldimage_v4_2da_f32_rwimg_u32	($s0,$s1,$s2,$s3), [&GlobalRWImg], ($s0,$s0,$s0);
	ldimage_v4_2da_f32_rwimg_u32	($s0,$s1,$s2,$s3), [&ReadonlyRWImg], ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(1)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(2)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	ldimage_v4_2da_equiv(255)_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	stimage_v4_1d_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	// 
	stimage_v4_1d_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	stimage_v4_1d_u32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], $s0;
	stimage_v4_1d_u32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], $s0;
	stimage_v4_1d_equiv(1)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	stimage_v4_1d_equiv(2)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	stimage_v4_1d_equiv(255)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	// 
	// Next sample
	// 
	stimage_v4_2d_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	// 
	stimage_v4_2d_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s1);
	stimage_v4_2d_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	stimage_v4_2d_u32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], ($s0,$s0);
	stimage_v4_2d_u32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], ($s0,$s0);
	stimage_v4_2d_equiv(1)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	stimage_v4_2d_equiv(2)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	stimage_v4_2d_equiv(255)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	stimage_v4_3d_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	// 
	stimage_v4_3d_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s1,$s2);
	stimage_v4_3d_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	stimage_v4_3d_u32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], ($s0,$s0,$s0);
	stimage_v4_3d_u32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], ($s0,$s0,$s0);
	stimage_v4_3d_equiv(1)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	stimage_v4_3d_equiv(2)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	stimage_v4_3d_equiv(255)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	stimage_v4_1da_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	// 
	stimage_v4_1da_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s1);
	stimage_v4_1da_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	stimage_v4_1da_u32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], ($s0,$s0);
	stimage_v4_1da_u32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], ($s0,$s0);
	stimage_v4_1da_equiv(1)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	stimage_v4_1da_equiv(2)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	stimage_v4_1da_equiv(255)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	stimage_v4_1db_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	// 
	stimage_v4_1db_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	stimage_v4_1db_u32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], $s0;
	stimage_v4_1db_u32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], $s0;
	stimage_v4_1db_equiv(1)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	stimage_v4_1db_equiv(2)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	stimage_v4_1db_equiv(255)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	// 
	// Next sample
	// 
	stimage_v4_2da_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	// 
	stimage_v4_2da_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s1,$s2);
	stimage_v4_2da_u32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	stimage_v4_2da_u32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], ($s0,$s0,$s0);
	stimage_v4_2da_u32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], ($s0,$s0,$s0);
	stimage_v4_2da_equiv(1)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	stimage_v4_2da_equiv(2)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	stimage_v4_2da_equiv(255)_u32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	stimage_v4_1d_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	// 
	stimage_v4_1d_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	stimage_v4_1d_s32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], $s0;
	stimage_v4_1d_s32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], $s0;
	stimage_v4_1d_equiv(1)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	stimage_v4_1d_equiv(2)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	stimage_v4_1d_equiv(255)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	// 
	// Next sample
	// 
	stimage_v4_2d_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	// 
	stimage_v4_2d_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s1);
	stimage_v4_2d_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	stimage_v4_2d_s32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], ($s0,$s0);
	stimage_v4_2d_s32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], ($s0,$s0);
	stimage_v4_2d_equiv(1)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	stimage_v4_2d_equiv(2)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	stimage_v4_2d_equiv(255)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	stimage_v4_3d_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	// 
	stimage_v4_3d_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s1,$s2);
	stimage_v4_3d_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	stimage_v4_3d_s32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], ($s0,$s0,$s0);
	stimage_v4_3d_s32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], ($s0,$s0,$s0);
	stimage_v4_3d_equiv(1)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	stimage_v4_3d_equiv(2)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	stimage_v4_3d_equiv(255)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	stimage_v4_1da_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	// 
	stimage_v4_1da_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s1);
	stimage_v4_1da_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	stimage_v4_1da_s32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], ($s0,$s0);
	stimage_v4_1da_s32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], ($s0,$s0);
	stimage_v4_1da_equiv(1)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	stimage_v4_1da_equiv(2)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	stimage_v4_1da_equiv(255)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	stimage_v4_1db_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	// 
	stimage_v4_1db_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	stimage_v4_1db_s32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], $s0;
	stimage_v4_1db_s32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], $s0;
	stimage_v4_1db_equiv(1)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	stimage_v4_1db_equiv(2)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	stimage_v4_1db_equiv(255)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	// 
	// Next sample
	// 
	stimage_v4_2da_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	// 
	stimage_v4_2da_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s1,$s2);
	stimage_v4_2da_s32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	stimage_v4_2da_s32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], ($s0,$s0,$s0);
	stimage_v4_2da_s32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], ($s0,$s0,$s0);
	stimage_v4_2da_equiv(1)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	stimage_v4_2da_equiv(2)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	stimage_v4_2da_equiv(255)_s32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	stimage_v4_1d_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	// 
	stimage_v4_1d_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	stimage_v4_1d_f32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], $s0;
	stimage_v4_1d_f32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], $s0;
	stimage_v4_1d_equiv(1)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	stimage_v4_1d_equiv(2)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	stimage_v4_1d_equiv(255)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	// 
	// Next sample
	// 
	stimage_v4_2d_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	// 
	stimage_v4_2d_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s1);
	stimage_v4_2d_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	stimage_v4_2d_f32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], ($s0,$s0);
	stimage_v4_2d_f32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], ($s0,$s0);
	stimage_v4_2d_equiv(1)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	stimage_v4_2d_equiv(2)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	stimage_v4_2d_equiv(255)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	stimage_v4_3d_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	// 
	stimage_v4_3d_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s1,$s2);
	stimage_v4_3d_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	stimage_v4_3d_f32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], ($s0,$s0,$s0);
	stimage_v4_3d_f32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], ($s0,$s0,$s0);
	stimage_v4_3d_equiv(1)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	stimage_v4_3d_equiv(2)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	stimage_v4_3d_equiv(255)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	stimage_v4_1da_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	// 
	stimage_v4_1da_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s1);
	stimage_v4_1da_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0);
	stimage_v4_1da_f32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], ($s0,$s0);
	stimage_v4_1da_f32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], ($s0,$s0);
	stimage_v4_1da_equiv(1)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	stimage_v4_1da_equiv(2)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	stimage_v4_1da_equiv(255)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0);
	// 
	// Next sample
	// 
	stimage_v4_1db_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	// 
	stimage_v4_1db_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, $s0;
	stimage_v4_1db_f32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], $s0;
	stimage_v4_1db_f32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], $s0;
	stimage_v4_1db_equiv(1)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	stimage_v4_1db_equiv(2)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	stimage_v4_1db_equiv(255)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, $s0;
	// 
	// Next sample
	// 
	stimage_v4_2da_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	// 
	stimage_v4_2da_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s1,$s2);
	stimage_v4_2da_f32_rwimg_u32	($s0,$s1,$s2,$s3), $d0, ($s0,$s0,$s0);
	stimage_v4_2da_f32_rwimg_u32	($s0,$s0,$s0,$s0), [&GlobalRWImg], ($s0,$s0,$s0);
	stimage_v4_2da_f32_rwimg_u32	($s0,$s0,$s0,$s0), [&ReadonlyRWImg], ($s0,$s0,$s0);
	stimage_v4_2da_equiv(1)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	stimage_v4_2da_equiv(2)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	stimage_v4_2da_equiv(255)_f32_rwimg_u32	($s0,$s0,$s0,$s0), $d0, ($s0,$s0,$s0);
	// 
	// Next sample
	// 
	atomicimage_add_1d_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_add_1d_u32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_add_1d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_add_1d_u32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_add_1d_u32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_add_1d_equiv(1)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_add_1d_equiv(2)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_add_1d_equiv(255)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_add_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_add_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_add_2d_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_add_2d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_add_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_add_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_add_2d_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_add_2d_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_add_2d_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_add_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_add_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_add_3d_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_add_3d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_add_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_add_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_add_3d_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_add_3d_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_add_3d_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_add_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_add_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_add_1da_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_add_1da_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_add_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_add_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_add_1da_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_add_1da_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_add_1da_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_add_1db_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_add_1db_u32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_add_1db_u32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_add_1db_u32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_add_1db_u32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_add_1db_equiv(1)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_add_1db_equiv(2)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_add_1db_equiv(255)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_add_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_add_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_add_2da_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_add_2da_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_add_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_add_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_add_2da_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_add_2da_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_add_2da_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_dec_1d_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_dec_1d_u32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_dec_1d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_dec_1d_u32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_dec_1d_u32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_dec_1d_equiv(1)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_dec_1d_equiv(2)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_dec_1d_equiv(255)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_dec_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_dec_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_dec_2d_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_dec_2d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_dec_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_dec_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_dec_2d_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_dec_2d_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_dec_2d_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_dec_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_dec_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_dec_3d_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_dec_3d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_dec_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_dec_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_dec_3d_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_dec_3d_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_dec_3d_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_dec_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_dec_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_dec_1da_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_dec_1da_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_dec_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_dec_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_dec_1da_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_dec_1da_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_dec_1da_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_dec_1db_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_dec_1db_u32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_dec_1db_u32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_dec_1db_u32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_dec_1db_u32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_dec_1db_equiv(1)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_dec_1db_equiv(2)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_dec_1db_equiv(255)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_dec_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_dec_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_dec_2da_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_dec_2da_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_dec_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_dec_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_dec_2da_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_dec_2da_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_dec_2da_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_inc_1d_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_inc_1d_u32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_inc_1d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_inc_1d_u32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_inc_1d_u32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_inc_1d_equiv(1)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_inc_1d_equiv(2)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_inc_1d_equiv(255)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_inc_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_inc_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_inc_2d_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_inc_2d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_inc_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_inc_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_inc_2d_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_inc_2d_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_inc_2d_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_inc_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_inc_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_inc_3d_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_inc_3d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_inc_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_inc_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_inc_3d_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_inc_3d_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_inc_3d_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_inc_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_inc_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_inc_1da_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_inc_1da_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_inc_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_inc_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_inc_1da_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_inc_1da_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_inc_1da_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_inc_1db_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_inc_1db_u32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_inc_1db_u32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_inc_1db_u32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_inc_1db_u32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_inc_1db_equiv(1)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_inc_1db_equiv(2)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_inc_1db_equiv(255)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_inc_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_inc_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_inc_2da_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_inc_2da_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_inc_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_inc_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_inc_2da_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_inc_2da_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_inc_2da_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_max_1d_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_max_1d_u32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_max_1d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_max_1d_u32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_max_1d_u32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_max_1d_equiv(1)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_max_1d_equiv(2)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_max_1d_equiv(255)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_max_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_max_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_max_2d_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_max_2d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_max_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_max_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_max_2d_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_max_2d_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_max_2d_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_max_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_max_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_max_3d_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_max_3d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_max_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_max_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_max_3d_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_max_3d_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_max_3d_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_max_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_max_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_max_1da_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_max_1da_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_max_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_max_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_max_1da_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_max_1da_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_max_1da_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_max_1db_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_max_1db_u32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_max_1db_u32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_max_1db_u32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_max_1db_u32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_max_1db_equiv(1)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_max_1db_equiv(2)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_max_1db_equiv(255)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_max_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_max_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_max_2da_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_max_2da_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_max_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_max_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_max_2da_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_max_2da_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_max_2da_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_min_1d_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_min_1d_u32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_min_1d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_min_1d_u32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_min_1d_u32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_min_1d_equiv(1)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_min_1d_equiv(2)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_min_1d_equiv(255)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_min_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_min_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_min_2d_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_min_2d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_min_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_min_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_min_2d_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_min_2d_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_min_2d_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_min_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_min_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_min_3d_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_min_3d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_min_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_min_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_min_3d_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_min_3d_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_min_3d_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_min_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_min_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_min_1da_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_min_1da_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_min_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_min_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_min_1da_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_min_1da_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_min_1da_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_min_1db_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_min_1db_u32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_min_1db_u32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_min_1db_u32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_min_1db_u32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_min_1db_equiv(1)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_min_1db_equiv(2)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_min_1db_equiv(255)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_min_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_min_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_min_2da_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_min_2da_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_min_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_min_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_min_2da_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_min_2da_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_min_2da_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_sub_1d_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_sub_1d_u32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_sub_1d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_sub_1d_u32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_sub_1d_u32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_sub_1d_equiv(1)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_sub_1d_equiv(2)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_sub_1d_equiv(255)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_sub_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_sub_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_sub_2d_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_sub_2d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_sub_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_sub_2d_u32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_sub_2d_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_sub_2d_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_sub_2d_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_sub_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_sub_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_sub_3d_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_sub_3d_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_sub_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_sub_3d_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_sub_3d_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_sub_3d_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_sub_3d_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_sub_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_sub_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_sub_1da_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_sub_1da_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_sub_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_sub_1da_u32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_sub_1da_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_sub_1da_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_sub_1da_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_sub_1db_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_sub_1db_u32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_sub_1db_u32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_sub_1db_u32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_sub_1db_u32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_sub_1db_equiv(1)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_sub_1db_equiv(2)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_sub_1db_equiv(255)_u32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_sub_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_sub_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_sub_2da_u32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_sub_2da_u32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_sub_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_sub_2da_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_sub_2da_equiv(1)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_sub_2da_equiv(2)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_sub_2da_equiv(255)_u32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_add_1d_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_add_1d_s32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_add_1d_s32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_add_1d_s32_rwimg_u32	$s0, $d0, $s0, -1;
	atomicimage_add_1d_s32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_add_1d_equiv(1)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_add_1d_equiv(2)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_add_1d_equiv(255)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_add_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_add_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_add_2d_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_add_2d_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_add_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s0), -1;
	atomicimage_add_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_add_2d_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_add_2d_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_add_2d_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_add_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_add_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_add_3d_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_add_3d_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_add_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), -1;
	atomicimage_add_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_add_3d_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_add_3d_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_add_3d_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_add_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_add_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_add_1da_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_add_1da_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_add_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s0), -1;
	atomicimage_add_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_add_1da_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_add_1da_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_add_1da_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_add_1db_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_add_1db_s32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_add_1db_s32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_add_1db_s32_rwimg_u32	$s0, $d0, $s0, -1;
	atomicimage_add_1db_s32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_add_1db_equiv(1)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_add_1db_equiv(2)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_add_1db_equiv(255)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_add_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_add_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_add_2da_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_add_2da_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_add_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), -1;
	atomicimage_add_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_add_2da_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_add_2da_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_add_2da_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_max_1d_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_max_1d_s32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_max_1d_s32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_max_1d_s32_rwimg_u32	$s0, $d0, $s0, -1;
	atomicimage_max_1d_s32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_max_1d_equiv(1)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_max_1d_equiv(2)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_max_1d_equiv(255)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_max_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_max_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_max_2d_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_max_2d_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_max_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s0), -1;
	atomicimage_max_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_max_2d_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_max_2d_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_max_2d_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_max_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_max_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_max_3d_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_max_3d_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_max_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), -1;
	atomicimage_max_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_max_3d_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_max_3d_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_max_3d_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_max_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_max_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_max_1da_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_max_1da_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_max_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s0), -1;
	atomicimage_max_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_max_1da_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_max_1da_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_max_1da_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_max_1db_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_max_1db_s32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_max_1db_s32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_max_1db_s32_rwimg_u32	$s0, $d0, $s0, -1;
	atomicimage_max_1db_s32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_max_1db_equiv(1)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_max_1db_equiv(2)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_max_1db_equiv(255)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_max_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_max_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_max_2da_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_max_2da_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_max_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), -1;
	atomicimage_max_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_max_2da_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_max_2da_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_max_2da_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_min_1d_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_min_1d_s32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_min_1d_s32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_min_1d_s32_rwimg_u32	$s0, $d0, $s0, -1;
	atomicimage_min_1d_s32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_min_1d_equiv(1)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_min_1d_equiv(2)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_min_1d_equiv(255)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_min_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_min_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_min_2d_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_min_2d_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_min_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s0), -1;
	atomicimage_min_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_min_2d_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_min_2d_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_min_2d_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_min_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_min_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_min_3d_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_min_3d_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_min_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), -1;
	atomicimage_min_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_min_3d_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_min_3d_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_min_3d_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_min_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_min_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_min_1da_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_min_1da_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_min_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s0), -1;
	atomicimage_min_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_min_1da_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_min_1da_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_min_1da_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_min_1db_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_min_1db_s32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_min_1db_s32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_min_1db_s32_rwimg_u32	$s0, $d0, $s0, -1;
	atomicimage_min_1db_s32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_min_1db_equiv(1)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_min_1db_equiv(2)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_min_1db_equiv(255)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_min_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_min_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_min_2da_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_min_2da_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_min_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), -1;
	atomicimage_min_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_min_2da_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_min_2da_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_min_2da_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_sub_1d_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_sub_1d_s32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_sub_1d_s32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_sub_1d_s32_rwimg_u32	$s0, $d0, $s0, -1;
	atomicimage_sub_1d_s32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_sub_1d_equiv(1)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_sub_1d_equiv(2)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_sub_1d_equiv(255)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_sub_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_sub_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_sub_2d_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_sub_2d_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_sub_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s0), -1;
	atomicimage_sub_2d_s32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_sub_2d_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_sub_2d_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_sub_2d_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_sub_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_sub_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_sub_3d_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_sub_3d_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_sub_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), -1;
	atomicimage_sub_3d_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_sub_3d_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_sub_3d_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_sub_3d_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_sub_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_sub_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_sub_1da_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_sub_1da_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_sub_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s0), -1;
	atomicimage_sub_1da_s32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_sub_1da_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_sub_1da_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_sub_1da_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_sub_1db_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_sub_1db_s32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_sub_1db_s32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_sub_1db_s32_rwimg_u32	$s0, $d0, $s0, -1;
	atomicimage_sub_1db_s32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_sub_1db_equiv(1)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_sub_1db_equiv(2)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_sub_1db_equiv(255)_s32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_sub_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_sub_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_sub_2da_s32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_sub_2da_s32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_sub_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), -1;
	atomicimage_sub_2da_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_sub_2da_equiv(1)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_sub_2da_equiv(2)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_sub_2da_equiv(255)_s32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_and_1d_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_and_1d_b32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_and_1d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_and_1d_b32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_and_1d_b32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_and_1d_equiv(1)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_and_1d_equiv(2)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_and_1d_equiv(255)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_and_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_and_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_and_2d_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_and_2d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_and_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_and_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_and_2d_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_and_2d_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_and_2d_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_and_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_and_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_and_3d_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_and_3d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_and_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_and_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_and_3d_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_and_3d_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_and_3d_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_and_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_and_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_and_1da_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_and_1da_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_and_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_and_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_and_1da_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_and_1da_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_and_1da_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_and_1db_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_and_1db_b32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_and_1db_b32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_and_1db_b32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_and_1db_b32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_and_1db_equiv(1)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_and_1db_equiv(2)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_and_1db_equiv(255)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_and_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_and_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_and_2da_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_and_2da_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_and_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_and_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_and_2da_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_and_2da_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_and_2da_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_cas_1d_b32_rwimg_u32	$s0, $d0, $s0, $s0, $s0;
	// 
	atomicimage_cas_1d_b32_rwimg_u32	$s0, $d0, $s0, $s0, 4294967295;
	atomicimage_cas_1d_b32_rwimg_u32	$s0, $d0, $s0, $s0, WAVESIZE;
	atomicimage_cas_1d_b32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0, $s0;
	atomicimage_cas_1d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0, $s0;
	atomicimage_cas_1d_b32_rwimg_u32	$s0, $d0, $s0, 4294967295, $s0;
	atomicimage_cas_1d_b32_rwimg_u32	$s0, $d0, $s0, WAVESIZE, $s0;
	atomicimage_cas_1d_equiv(1)_b32_rwimg_u32	$s0, $d0, $s0, $s0, $s0;
	atomicimage_cas_1d_equiv(2)_b32_rwimg_u32	$s0, $d0, $s0, $s0, $s0;
	atomicimage_cas_1d_equiv(255)_b32_rwimg_u32	$s0, $d0, $s0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_cas_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0, $s0;
	// 
	atomicimage_cas_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0, $s0;
	atomicimage_cas_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0, 4294967295;
	atomicimage_cas_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0, WAVESIZE;
	atomicimage_cas_2d_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0, $s0;
	atomicimage_cas_2d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0, $s0;
	atomicimage_cas_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295, $s0;
	atomicimage_cas_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE, $s0;
	atomicimage_cas_2d_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0, $s0;
	atomicimage_cas_2d_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0, $s0;
	atomicimage_cas_2d_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_cas_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0, $s0;
	// 
	atomicimage_cas_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0, $s0;
	atomicimage_cas_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0, 4294967295;
	atomicimage_cas_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0, WAVESIZE;
	atomicimage_cas_3d_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0, $s0;
	atomicimage_cas_3d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0, $s0;
	atomicimage_cas_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295, $s0;
	atomicimage_cas_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE, $s0;
	atomicimage_cas_3d_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0, $s0;
	atomicimage_cas_3d_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0, $s0;
	atomicimage_cas_3d_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_cas_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0, $s0;
	// 
	atomicimage_cas_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0, $s0;
	atomicimage_cas_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0, 4294967295;
	atomicimage_cas_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0, WAVESIZE;
	atomicimage_cas_1da_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0, $s0;
	atomicimage_cas_1da_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0, $s0;
	atomicimage_cas_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295, $s0;
	atomicimage_cas_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE, $s0;
	atomicimage_cas_1da_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0, $s0;
	atomicimage_cas_1da_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0, $s0;
	atomicimage_cas_1da_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_cas_1db_b32_rwimg_u32	$s0, $d0, $s0, $s0, $s0;
	// 
	atomicimage_cas_1db_b32_rwimg_u32	$s0, $d0, $s0, $s0, 4294967295;
	atomicimage_cas_1db_b32_rwimg_u32	$s0, $d0, $s0, $s0, WAVESIZE;
	atomicimage_cas_1db_b32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0, $s0;
	atomicimage_cas_1db_b32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0, $s0;
	atomicimage_cas_1db_b32_rwimg_u32	$s0, $d0, $s0, 4294967295, $s0;
	atomicimage_cas_1db_b32_rwimg_u32	$s0, $d0, $s0, WAVESIZE, $s0;
	atomicimage_cas_1db_equiv(1)_b32_rwimg_u32	$s0, $d0, $s0, $s0, $s0;
	atomicimage_cas_1db_equiv(2)_b32_rwimg_u32	$s0, $d0, $s0, $s0, $s0;
	atomicimage_cas_1db_equiv(255)_b32_rwimg_u32	$s0, $d0, $s0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_cas_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0, $s0;
	// 
	atomicimage_cas_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0, $s0;
	atomicimage_cas_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0, 4294967295;
	atomicimage_cas_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0, WAVESIZE;
	atomicimage_cas_2da_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0, $s0;
	atomicimage_cas_2da_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0, $s0;
	atomicimage_cas_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295, $s0;
	atomicimage_cas_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE, $s0;
	atomicimage_cas_2da_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0, $s0;
	atomicimage_cas_2da_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0, $s0;
	atomicimage_cas_2da_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_exch_1d_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_exch_1d_b32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_exch_1d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_exch_1d_b32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_exch_1d_b32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_exch_1d_equiv(1)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_exch_1d_equiv(2)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_exch_1d_equiv(255)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_exch_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_exch_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_exch_2d_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_exch_2d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_exch_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_exch_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_exch_2d_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_exch_2d_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_exch_2d_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_exch_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_exch_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_exch_3d_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_exch_3d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_exch_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_exch_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_exch_3d_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_exch_3d_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_exch_3d_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_exch_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_exch_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_exch_1da_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_exch_1da_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_exch_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_exch_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_exch_1da_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_exch_1da_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_exch_1da_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_exch_1db_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_exch_1db_b32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_exch_1db_b32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_exch_1db_b32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_exch_1db_b32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_exch_1db_equiv(1)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_exch_1db_equiv(2)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_exch_1db_equiv(255)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_exch_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_exch_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_exch_2da_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_exch_2da_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_exch_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_exch_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_exch_2da_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_exch_2da_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_exch_2da_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_or_1d_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_or_1d_b32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_or_1d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_or_1d_b32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_or_1d_b32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_or_1d_equiv(1)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_or_1d_equiv(2)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_or_1d_equiv(255)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_or_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_or_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_or_2d_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_or_2d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_or_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_or_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_or_2d_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_or_2d_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_or_2d_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_or_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_or_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_or_3d_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_or_3d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_or_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_or_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_or_3d_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_or_3d_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_or_3d_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_or_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_or_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_or_1da_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_or_1da_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_or_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_or_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_or_1da_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_or_1da_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_or_1da_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_or_1db_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_or_1db_b32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_or_1db_b32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_or_1db_b32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_or_1db_b32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_or_1db_equiv(1)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_or_1db_equiv(2)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_or_1db_equiv(255)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_or_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_or_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_or_2da_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_or_2da_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_or_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_or_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_or_2da_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_or_2da_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_or_2da_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_xor_1d_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_xor_1d_b32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_xor_1d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_xor_1d_b32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_xor_1d_b32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_xor_1d_equiv(1)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_xor_1d_equiv(2)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_xor_1d_equiv(255)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_xor_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_xor_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_xor_2d_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_xor_2d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_xor_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_xor_2d_b32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_xor_2d_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_xor_2d_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_xor_2d_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_xor_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_xor_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_xor_3d_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_xor_3d_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_xor_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_xor_3d_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_xor_3d_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_xor_3d_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_xor_3d_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_xor_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	atomicimage_xor_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s1), $s0;
	atomicimage_xor_1da_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0), $s0;
	atomicimage_xor_1da_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimage_xor_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), 4294967295;
	atomicimage_xor_1da_b32_rwimg_u32	$s0, $d0, ($s0,$s0), WAVESIZE;
	atomicimage_xor_1da_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_xor_1da_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	atomicimage_xor_1da_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimage_xor_1db_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	atomicimage_xor_1db_b32_rwimg_u32	$s0, [&GlobalRWImg], $s0, $s0;
	atomicimage_xor_1db_b32_rwimg_u32	$s0, [&ReadonlyRWImg], $s0, $s0;
	atomicimage_xor_1db_b32_rwimg_u32	$s0, $d0, $s0, 4294967295;
	atomicimage_xor_1db_b32_rwimg_u32	$s0, $d0, $s0, WAVESIZE;
	atomicimage_xor_1db_equiv(1)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_xor_1db_equiv(2)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	atomicimage_xor_1db_equiv(255)_b32_rwimg_u32	$s0, $d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimage_xor_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimage_xor_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s1,$s2), $s0;
	atomicimage_xor_2da_b32_rwimg_u32	$s0, [&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_xor_2da_b32_rwimg_u32	$s0, [&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimage_xor_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), 4294967295;
	atomicimage_xor_2da_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimage_xor_2da_equiv(1)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_xor_2da_equiv(2)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	atomicimage_xor_2da_equiv(255)_b32_rwimg_u32	$s0, $d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_add_1d_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_add_1d_u32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_add_1d_u32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_add_1d_u32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_add_1d_u32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_add_1d_equiv(1)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_add_1d_equiv(2)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_add_1d_equiv(255)_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_add_2d_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_add_2d_u32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_add_2d_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_add_2d_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_add_2d_u32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_add_2d_u32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_add_2d_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_add_2d_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_add_2d_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_add_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_add_3d_u32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_add_3d_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_3d_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_add_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_add_3d_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_3d_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_3d_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_add_1da_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_add_1da_u32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_add_1da_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_add_1da_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_add_1da_u32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_add_1da_u32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_add_1da_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_add_1da_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_add_1da_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_add_1db_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_add_1db_u32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_add_1db_u32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_add_1db_u32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_add_1db_u32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_add_1db_equiv(1)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_add_1db_equiv(2)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_add_1db_equiv(255)_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_add_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_add_2da_u32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_add_2da_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_2da_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_add_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_add_2da_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_2da_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_2da_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_dec_1d_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_dec_1d_u32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_dec_1d_u32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_dec_1d_u32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_dec_1d_u32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_dec_1d_equiv(1)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_dec_1d_equiv(2)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_dec_1d_equiv(255)_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_dec_2d_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_dec_2d_u32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_dec_2d_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_dec_2d_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_dec_2d_u32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_dec_2d_u32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_dec_2d_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_dec_2d_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_dec_2d_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_dec_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_dec_3d_u32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_dec_3d_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_dec_3d_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_dec_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_dec_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_dec_3d_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_dec_3d_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_dec_3d_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_dec_1da_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_dec_1da_u32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_dec_1da_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_dec_1da_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_dec_1da_u32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_dec_1da_u32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_dec_1da_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_dec_1da_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_dec_1da_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_dec_1db_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_dec_1db_u32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_dec_1db_u32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_dec_1db_u32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_dec_1db_u32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_dec_1db_equiv(1)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_dec_1db_equiv(2)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_dec_1db_equiv(255)_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_dec_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_dec_2da_u32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_dec_2da_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_dec_2da_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_dec_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_dec_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_dec_2da_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_dec_2da_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_dec_2da_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_inc_1d_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_inc_1d_u32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_inc_1d_u32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_inc_1d_u32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_inc_1d_u32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_inc_1d_equiv(1)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_inc_1d_equiv(2)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_inc_1d_equiv(255)_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_inc_2d_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_inc_2d_u32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_inc_2d_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_inc_2d_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_inc_2d_u32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_inc_2d_u32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_inc_2d_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_inc_2d_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_inc_2d_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_inc_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_inc_3d_u32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_inc_3d_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_inc_3d_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_inc_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_inc_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_inc_3d_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_inc_3d_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_inc_3d_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_inc_1da_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_inc_1da_u32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_inc_1da_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_inc_1da_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_inc_1da_u32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_inc_1da_u32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_inc_1da_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_inc_1da_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_inc_1da_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_inc_1db_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_inc_1db_u32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_inc_1db_u32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_inc_1db_u32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_inc_1db_u32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_inc_1db_equiv(1)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_inc_1db_equiv(2)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_inc_1db_equiv(255)_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_inc_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_inc_2da_u32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_inc_2da_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_inc_2da_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_inc_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_inc_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_inc_2da_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_inc_2da_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_inc_2da_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_max_1d_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_max_1d_u32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_max_1d_u32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_max_1d_u32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_max_1d_u32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_max_1d_equiv(1)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_max_1d_equiv(2)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_max_1d_equiv(255)_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_max_2d_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_max_2d_u32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_max_2d_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_max_2d_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_max_2d_u32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_max_2d_u32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_max_2d_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_max_2d_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_max_2d_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_max_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_max_3d_u32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_max_3d_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_3d_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_max_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_max_3d_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_3d_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_3d_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_max_1da_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_max_1da_u32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_max_1da_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_max_1da_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_max_1da_u32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_max_1da_u32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_max_1da_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_max_1da_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_max_1da_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_max_1db_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_max_1db_u32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_max_1db_u32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_max_1db_u32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_max_1db_u32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_max_1db_equiv(1)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_max_1db_equiv(2)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_max_1db_equiv(255)_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_max_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_max_2da_u32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_max_2da_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_2da_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_max_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_max_2da_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_2da_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_2da_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_min_1d_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_min_1d_u32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_min_1d_u32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_min_1d_u32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_min_1d_u32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_min_1d_equiv(1)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_min_1d_equiv(2)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_min_1d_equiv(255)_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_min_2d_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_min_2d_u32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_min_2d_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_min_2d_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_min_2d_u32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_min_2d_u32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_min_2d_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_min_2d_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_min_2d_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_min_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_min_3d_u32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_min_3d_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_3d_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_min_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_min_3d_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_3d_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_3d_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_min_1da_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_min_1da_u32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_min_1da_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_min_1da_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_min_1da_u32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_min_1da_u32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_min_1da_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_min_1da_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_min_1da_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_min_1db_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_min_1db_u32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_min_1db_u32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_min_1db_u32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_min_1db_u32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_min_1db_equiv(1)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_min_1db_equiv(2)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_min_1db_equiv(255)_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_min_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_min_2da_u32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_min_2da_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_2da_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_min_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_min_2da_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_2da_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_2da_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_sub_1d_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_sub_1d_u32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_sub_1d_u32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_sub_1d_u32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_sub_1d_u32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_sub_1d_equiv(1)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_sub_1d_equiv(2)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_sub_1d_equiv(255)_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_sub_2d_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_sub_2d_u32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_sub_2d_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_sub_2d_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_sub_2d_u32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_sub_2d_u32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_sub_2d_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_sub_2d_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_sub_2d_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_sub_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_sub_3d_u32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_sub_3d_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_3d_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_sub_3d_u32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_sub_3d_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_3d_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_3d_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_sub_1da_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_sub_1da_u32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_sub_1da_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_sub_1da_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_sub_1da_u32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_sub_1da_u32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_sub_1da_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_sub_1da_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_sub_1da_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_sub_1db_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_sub_1db_u32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_sub_1db_u32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_sub_1db_u32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_sub_1db_u32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_sub_1db_equiv(1)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_sub_1db_equiv(2)_u32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_sub_1db_equiv(255)_u32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_sub_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_sub_2da_u32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_sub_2da_u32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_2da_u32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_sub_2da_u32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_sub_2da_equiv(1)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_2da_equiv(2)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_2da_equiv(255)_u32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_add_1d_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_add_1d_s32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_add_1d_s32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_add_1d_s32_rwimg_u32	$d0, $s0, -1;
	atomicimagenoret_add_1d_s32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_add_1d_equiv(1)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_add_1d_equiv(2)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_add_1d_equiv(255)_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_add_2d_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_add_2d_s32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_add_2d_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_add_2d_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_add_2d_s32_rwimg_u32	$d0, ($s0,$s0), -1;
	atomicimagenoret_add_2d_s32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_add_2d_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_add_2d_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_add_2d_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_add_3d_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_add_3d_s32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_add_3d_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_3d_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_3d_s32_rwimg_u32	$d0, ($s0,$s0,$s0), -1;
	atomicimagenoret_add_3d_s32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_add_3d_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_3d_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_3d_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_add_1da_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_add_1da_s32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_add_1da_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_add_1da_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_add_1da_s32_rwimg_u32	$d0, ($s0,$s0), -1;
	atomicimagenoret_add_1da_s32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_add_1da_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_add_1da_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_add_1da_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_add_1db_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_add_1db_s32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_add_1db_s32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_add_1db_s32_rwimg_u32	$d0, $s0, -1;
	atomicimagenoret_add_1db_s32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_add_1db_equiv(1)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_add_1db_equiv(2)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_add_1db_equiv(255)_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_add_2da_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_add_2da_s32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_add_2da_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_2da_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_2da_s32_rwimg_u32	$d0, ($s0,$s0,$s0), -1;
	atomicimagenoret_add_2da_s32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_add_2da_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_2da_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_add_2da_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_max_1d_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_max_1d_s32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_max_1d_s32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_max_1d_s32_rwimg_u32	$d0, $s0, -1;
	atomicimagenoret_max_1d_s32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_max_1d_equiv(1)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_max_1d_equiv(2)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_max_1d_equiv(255)_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_max_2d_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_max_2d_s32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_max_2d_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_max_2d_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_max_2d_s32_rwimg_u32	$d0, ($s0,$s0), -1;
	atomicimagenoret_max_2d_s32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_max_2d_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_max_2d_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_max_2d_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_max_3d_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_max_3d_s32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_max_3d_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_3d_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_3d_s32_rwimg_u32	$d0, ($s0,$s0,$s0), -1;
	atomicimagenoret_max_3d_s32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_max_3d_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_3d_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_3d_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_max_1da_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_max_1da_s32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_max_1da_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_max_1da_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_max_1da_s32_rwimg_u32	$d0, ($s0,$s0), -1;
	atomicimagenoret_max_1da_s32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_max_1da_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_max_1da_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_max_1da_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_max_1db_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_max_1db_s32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_max_1db_s32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_max_1db_s32_rwimg_u32	$d0, $s0, -1;
	atomicimagenoret_max_1db_s32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_max_1db_equiv(1)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_max_1db_equiv(2)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_max_1db_equiv(255)_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_max_2da_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_max_2da_s32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_max_2da_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_2da_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_2da_s32_rwimg_u32	$d0, ($s0,$s0,$s0), -1;
	atomicimagenoret_max_2da_s32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_max_2da_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_2da_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_max_2da_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_min_1d_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_min_1d_s32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_min_1d_s32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_min_1d_s32_rwimg_u32	$d0, $s0, -1;
	atomicimagenoret_min_1d_s32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_min_1d_equiv(1)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_min_1d_equiv(2)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_min_1d_equiv(255)_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_min_2d_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_min_2d_s32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_min_2d_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_min_2d_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_min_2d_s32_rwimg_u32	$d0, ($s0,$s0), -1;
	atomicimagenoret_min_2d_s32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_min_2d_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_min_2d_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_min_2d_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_min_3d_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_min_3d_s32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_min_3d_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_3d_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_3d_s32_rwimg_u32	$d0, ($s0,$s0,$s0), -1;
	atomicimagenoret_min_3d_s32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_min_3d_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_3d_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_3d_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_min_1da_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_min_1da_s32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_min_1da_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_min_1da_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_min_1da_s32_rwimg_u32	$d0, ($s0,$s0), -1;
	atomicimagenoret_min_1da_s32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_min_1da_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_min_1da_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_min_1da_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_min_1db_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_min_1db_s32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_min_1db_s32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_min_1db_s32_rwimg_u32	$d0, $s0, -1;
	atomicimagenoret_min_1db_s32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_min_1db_equiv(1)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_min_1db_equiv(2)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_min_1db_equiv(255)_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_min_2da_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_min_2da_s32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_min_2da_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_2da_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_2da_s32_rwimg_u32	$d0, ($s0,$s0,$s0), -1;
	atomicimagenoret_min_2da_s32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_min_2da_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_2da_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_min_2da_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_sub_1d_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_sub_1d_s32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_sub_1d_s32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_sub_1d_s32_rwimg_u32	$d0, $s0, -1;
	atomicimagenoret_sub_1d_s32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_sub_1d_equiv(1)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_sub_1d_equiv(2)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_sub_1d_equiv(255)_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_sub_2d_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_sub_2d_s32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_sub_2d_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_sub_2d_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_sub_2d_s32_rwimg_u32	$d0, ($s0,$s0), -1;
	atomicimagenoret_sub_2d_s32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_sub_2d_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_sub_2d_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_sub_2d_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_sub_3d_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_sub_3d_s32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_sub_3d_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_3d_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_3d_s32_rwimg_u32	$d0, ($s0,$s0,$s0), -1;
	atomicimagenoret_sub_3d_s32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_sub_3d_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_3d_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_3d_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_sub_1da_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_sub_1da_s32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_sub_1da_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_sub_1da_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_sub_1da_s32_rwimg_u32	$d0, ($s0,$s0), -1;
	atomicimagenoret_sub_1da_s32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_sub_1da_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_sub_1da_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_sub_1da_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_sub_1db_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_sub_1db_s32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_sub_1db_s32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_sub_1db_s32_rwimg_u32	$d0, $s0, -1;
	atomicimagenoret_sub_1db_s32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_sub_1db_equiv(1)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_sub_1db_equiv(2)_s32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_sub_1db_equiv(255)_s32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_sub_2da_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_sub_2da_s32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_sub_2da_s32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_2da_s32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_2da_s32_rwimg_u32	$d0, ($s0,$s0,$s0), -1;
	atomicimagenoret_sub_2da_s32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_sub_2da_equiv(1)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_2da_equiv(2)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_sub_2da_equiv(255)_s32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_and_1d_b32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_and_1d_b32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_and_1d_b32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_and_1d_b32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_and_1d_b32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_and_1d_equiv(1)_b32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_and_1d_equiv(2)_b32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_and_1d_equiv(255)_b32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_and_2d_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_and_2d_b32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_and_2d_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_and_2d_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_and_2d_b32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_and_2d_b32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_and_2d_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_and_2d_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_and_2d_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_and_3d_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_and_3d_b32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_and_3d_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_and_3d_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_and_3d_b32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_and_3d_b32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_and_3d_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_and_3d_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_and_3d_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_and_1da_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_and_1da_b32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_and_1da_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_and_1da_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_and_1da_b32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_and_1da_b32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_and_1da_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_and_1da_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_and_1da_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_and_1db_b32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_and_1db_b32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_and_1db_b32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_and_1db_b32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_and_1db_b32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_and_1db_equiv(1)_b32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_and_1db_equiv(2)_b32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_and_1db_equiv(255)_b32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_and_2da_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_and_2da_b32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_and_2da_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_and_2da_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_and_2da_b32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_and_2da_b32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_and_2da_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_and_2da_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_and_2da_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_cas_1d_b32_rwimg_u32	$d0, $s0, $s0, $s0;
	// 
	atomicimagenoret_cas_1d_b32_rwimg_u32	$d0, $s0, $s0, 4294967295;
	atomicimagenoret_cas_1d_b32_rwimg_u32	$d0, $s0, $s0, WAVESIZE;
	atomicimagenoret_cas_1d_b32_rwimg_u32	[&GlobalRWImg], $s0, $s0, $s0;
	atomicimagenoret_cas_1d_b32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0, $s0;
	atomicimagenoret_cas_1d_b32_rwimg_u32	$d0, $s0, 4294967295, $s0;
	atomicimagenoret_cas_1d_b32_rwimg_u32	$d0, $s0, WAVESIZE, $s0;
	atomicimagenoret_cas_1d_equiv(1)_b32_rwimg_u32	$d0, $s0, $s0, $s0;
	atomicimagenoret_cas_1d_equiv(2)_b32_rwimg_u32	$d0, $s0, $s0, $s0;
	atomicimagenoret_cas_1d_equiv(255)_b32_rwimg_u32	$d0, $s0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_cas_2d_b32_rwimg_u32	$d0, ($s0,$s0), $s0, $s0;
	// 
	atomicimagenoret_cas_2d_b32_rwimg_u32	$d0, ($s0,$s1), $s0, $s0;
	atomicimagenoret_cas_2d_b32_rwimg_u32	$d0, ($s0,$s0), $s0, 4294967295;
	atomicimagenoret_cas_2d_b32_rwimg_u32	$d0, ($s0,$s0), $s0, WAVESIZE;
	atomicimagenoret_cas_2d_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0, $s0;
	atomicimagenoret_cas_2d_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0, $s0;
	atomicimagenoret_cas_2d_b32_rwimg_u32	$d0, ($s0,$s0), 4294967295, $s0;
	atomicimagenoret_cas_2d_b32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE, $s0;
	atomicimagenoret_cas_2d_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0), $s0, $s0;
	atomicimagenoret_cas_2d_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0), $s0, $s0;
	atomicimagenoret_cas_2d_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0), $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_cas_3d_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0, $s0;
	// 
	atomicimagenoret_cas_3d_b32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0, $s0;
	atomicimagenoret_cas_3d_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0, 4294967295;
	atomicimagenoret_cas_3d_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0, WAVESIZE;
	atomicimagenoret_cas_3d_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0, $s0;
	atomicimagenoret_cas_3d_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0, $s0;
	atomicimagenoret_cas_3d_b32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295, $s0;
	atomicimagenoret_cas_3d_b32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE, $s0;
	atomicimagenoret_cas_3d_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0, $s0;
	atomicimagenoret_cas_3d_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0, $s0;
	atomicimagenoret_cas_3d_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_cas_1da_b32_rwimg_u32	$d0, ($s0,$s0), $s0, $s0;
	// 
	atomicimagenoret_cas_1da_b32_rwimg_u32	$d0, ($s0,$s1), $s0, $s0;
	atomicimagenoret_cas_1da_b32_rwimg_u32	$d0, ($s0,$s0), $s0, 4294967295;
	atomicimagenoret_cas_1da_b32_rwimg_u32	$d0, ($s0,$s0), $s0, WAVESIZE;
	atomicimagenoret_cas_1da_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0, $s0;
	atomicimagenoret_cas_1da_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0, $s0;
	atomicimagenoret_cas_1da_b32_rwimg_u32	$d0, ($s0,$s0), 4294967295, $s0;
	atomicimagenoret_cas_1da_b32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE, $s0;
	atomicimagenoret_cas_1da_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0), $s0, $s0;
	atomicimagenoret_cas_1da_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0), $s0, $s0;
	atomicimagenoret_cas_1da_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0), $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_cas_1db_b32_rwimg_u32	$d0, $s0, $s0, $s0;
	// 
	atomicimagenoret_cas_1db_b32_rwimg_u32	$d0, $s0, $s0, 4294967295;
	atomicimagenoret_cas_1db_b32_rwimg_u32	$d0, $s0, $s0, WAVESIZE;
	atomicimagenoret_cas_1db_b32_rwimg_u32	[&GlobalRWImg], $s0, $s0, $s0;
	atomicimagenoret_cas_1db_b32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0, $s0;
	atomicimagenoret_cas_1db_b32_rwimg_u32	$d0, $s0, 4294967295, $s0;
	atomicimagenoret_cas_1db_b32_rwimg_u32	$d0, $s0, WAVESIZE, $s0;
	atomicimagenoret_cas_1db_equiv(1)_b32_rwimg_u32	$d0, $s0, $s0, $s0;
	atomicimagenoret_cas_1db_equiv(2)_b32_rwimg_u32	$d0, $s0, $s0, $s0;
	atomicimagenoret_cas_1db_equiv(255)_b32_rwimg_u32	$d0, $s0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_cas_2da_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0, $s0;
	// 
	atomicimagenoret_cas_2da_b32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0, $s0;
	atomicimagenoret_cas_2da_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0, 4294967295;
	atomicimagenoret_cas_2da_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0, WAVESIZE;
	atomicimagenoret_cas_2da_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0, $s0;
	atomicimagenoret_cas_2da_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0, $s0;
	atomicimagenoret_cas_2da_b32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295, $s0;
	atomicimagenoret_cas_2da_b32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE, $s0;
	atomicimagenoret_cas_2da_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0, $s0;
	atomicimagenoret_cas_2da_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0, $s0;
	atomicimagenoret_cas_2da_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_or_1d_b32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_or_1d_b32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_or_1d_b32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_or_1d_b32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_or_1d_b32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_or_1d_equiv(1)_b32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_or_1d_equiv(2)_b32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_or_1d_equiv(255)_b32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_or_2d_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_or_2d_b32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_or_2d_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_or_2d_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_or_2d_b32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_or_2d_b32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_or_2d_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_or_2d_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_or_2d_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_or_3d_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_or_3d_b32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_or_3d_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_or_3d_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_or_3d_b32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_or_3d_b32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_or_3d_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_or_3d_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_or_3d_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_or_1da_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_or_1da_b32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_or_1da_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_or_1da_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_or_1da_b32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_or_1da_b32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_or_1da_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_or_1da_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_or_1da_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_or_1db_b32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_or_1db_b32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_or_1db_b32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_or_1db_b32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_or_1db_b32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_or_1db_equiv(1)_b32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_or_1db_equiv(2)_b32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_or_1db_equiv(255)_b32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_or_2da_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_or_2da_b32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_or_2da_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_or_2da_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_or_2da_b32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_or_2da_b32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_or_2da_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_or_2da_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_or_2da_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_xor_1d_b32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_xor_1d_b32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_xor_1d_b32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_xor_1d_b32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_xor_1d_b32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_xor_1d_equiv(1)_b32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_xor_1d_equiv(2)_b32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_xor_1d_equiv(255)_b32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_xor_2d_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_xor_2d_b32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_xor_2d_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_xor_2d_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_xor_2d_b32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_xor_2d_b32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_xor_2d_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_xor_2d_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_xor_2d_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_xor_3d_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_xor_3d_b32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_xor_3d_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_xor_3d_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_xor_3d_b32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_xor_3d_b32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_xor_3d_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_xor_3d_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_xor_3d_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_xor_1da_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	atomicimagenoret_xor_1da_b32_rwimg_u32	$d0, ($s0,$s1), $s0;
	atomicimagenoret_xor_1da_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0), $s0;
	atomicimagenoret_xor_1da_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0), $s0;
	atomicimagenoret_xor_1da_b32_rwimg_u32	$d0, ($s0,$s0), 4294967295;
	atomicimagenoret_xor_1da_b32_rwimg_u32	$d0, ($s0,$s0), WAVESIZE;
	atomicimagenoret_xor_1da_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_xor_1da_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	atomicimagenoret_xor_1da_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0), $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_xor_1db_b32_rwimg_u32	$d0, $s0, $s0;
	// 
	atomicimagenoret_xor_1db_b32_rwimg_u32	[&GlobalRWImg], $s0, $s0;
	atomicimagenoret_xor_1db_b32_rwimg_u32	[&ReadonlyRWImg], $s0, $s0;
	atomicimagenoret_xor_1db_b32_rwimg_u32	$d0, $s0, 4294967295;
	atomicimagenoret_xor_1db_b32_rwimg_u32	$d0, $s0, WAVESIZE;
	atomicimagenoret_xor_1db_equiv(1)_b32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_xor_1db_equiv(2)_b32_rwimg_u32	$d0, $s0, $s0;
	atomicimagenoret_xor_1db_equiv(255)_b32_rwimg_u32	$d0, $s0, $s0;
	// 
	// Next sample
	// 
	atomicimagenoret_xor_2da_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	atomicimagenoret_xor_2da_b32_rwimg_u32	$d0, ($s0,$s1,$s2), $s0;
	atomicimagenoret_xor_2da_b32_rwimg_u32	[&GlobalRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_xor_2da_b32_rwimg_u32	[&ReadonlyRWImg], ($s0,$s0,$s0), $s0;
	atomicimagenoret_xor_2da_b32_rwimg_u32	$d0, ($s0,$s0,$s0), 4294967295;
	atomicimagenoret_xor_2da_b32_rwimg_u32	$d0, ($s0,$s0,$s0), WAVESIZE;
	atomicimagenoret_xor_2da_equiv(1)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_xor_2da_equiv(2)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	atomicimagenoret_xor_2da_equiv(255)_b32_rwimg_u32	$d0, ($s0,$s0,$s0), $s0;
	// 
	// Next sample
	// 
	queryimagewidth_u32_roimg	$s0, $d0;
	// 
	queryimagewidth_u32_roimg	$s0, [&GlobalROImg];
	queryimagewidth_u32_roimg	$s0, [&ReadonlyROImg];
	// 
	// Next sample
	// 
	queryimagewidth_u32_rwimg	$s0, $d0;
	// 
	queryimagewidth_u32_rwimg	$s0, [&GlobalRWImg];
	queryimagewidth_u32_rwimg	$s0, [&ReadonlyRWImg];
	// 
	// Next sample
	// 
	queryimageheight_u32_roimg	$s0, $d0;
	// 
	queryimageheight_u32_roimg	$s0, [&GlobalROImg];
	queryimageheight_u32_roimg	$s0, [&ReadonlyROImg];
	// 
	// Next sample
	// 
	queryimageheight_u32_rwimg	$s0, $d0;
	// 
	queryimageheight_u32_rwimg	$s0, [&GlobalRWImg];
	queryimageheight_u32_rwimg	$s0, [&ReadonlyRWImg];
	// 
	// Next sample
	// 
	queryimagedepth_u32_roimg	$s0, $d0;
	// 
	queryimagedepth_u32_roimg	$s0, [&GlobalROImg];
	queryimagedepth_u32_roimg	$s0, [&ReadonlyROImg];
	// 
	// Next sample
	// 
	queryimagedepth_u32_rwimg	$s0, $d0;
	// 
	queryimagedepth_u32_rwimg	$s0, [&GlobalRWImg];
	queryimagedepth_u32_rwimg	$s0, [&ReadonlyRWImg];
	// 
	// Next sample
	// 
	queryimagearray_u32_roimg	$s0, $d0;
	// 
	queryimagearray_u32_roimg	$s0, [&GlobalROImg];
	queryimagearray_u32_roimg	$s0, [&ReadonlyROImg];
	// 
	// Next sample
	// 
	queryimagearray_u32_rwimg	$s0, $d0;
	// 
	queryimagearray_u32_rwimg	$s0, [&GlobalRWImg];
	queryimagearray_u32_rwimg	$s0, [&ReadonlyRWImg];
	// 
	// Next sample
	// 
	queryimageorder_u32_roimg	$s0, $d0;
	// 
	queryimageorder_u32_roimg	$s0, [&GlobalROImg];
	queryimageorder_u32_roimg	$s0, [&ReadonlyROImg];
	// 
	// Next sample
	// 
	queryimageorder_u32_rwimg	$s0, $d0;
	// 
	queryimageorder_u32_rwimg	$s0, [&GlobalRWImg];
	queryimageorder_u32_rwimg	$s0, [&ReadonlyRWImg];
	// 
	// Next sample
	// 
	queryimageformat_u32_roimg	$s0, $d0;
	// 
	queryimageformat_u32_roimg	$s0, [&GlobalROImg];
	queryimageformat_u32_roimg	$s0, [&ReadonlyROImg];
	// 
	// Next sample
	// 
	queryimageformat_u32_rwimg	$s0, $d0;
	// 
	queryimageformat_u32_rwimg	$s0, [&GlobalRWImg];
	queryimageformat_u32_rwimg	$s0, [&ReadonlyRWImg];
	// 
	// Next sample
	// 
	querysamplercoord_u32_samp	$s0, $d0;
	// 
	querysamplercoord_u32_samp	$s0, [&GlobalSamp];
	querysamplercoord_u32_samp	$s0, [&ReadonlySamp];
	// 
	// Next sample
	// 
	querysamplerfilter_u32_samp	$s0, $d0;
	// 
	querysamplerfilter_u32_samp	$s0, [&GlobalSamp];
	querysamplerfilter_u32_samp	$s0, [&ReadonlySamp];
	// 
	// Next sample
	// 
	querysamplerboundary_u32_samp	$s0, $d0, 4294967295;
	// 
	querysamplerboundary_u32_samp	$s0, [&GlobalSamp], 4294967295;
	querysamplerboundary_u32_samp	$s0, [&ReadonlySamp], 4294967295;
	querysamplerboundary_u32_samp	$s0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	cbr	$c0, $s0;
	// 
	cbr_width(2)	$c0, $s0;
	cbr_width(4)	$c0, $s0;
	cbr_width(8)	$c0, $s0;
	cbr_width(16)	$c0, $s0;
	cbr_width(32)	$c0, $s0;
	cbr_width(64)	$c0, $s0;
	cbr_width(128)	$c0, $s0;
	cbr_width(256)	$c0, $s0;
	cbr_width(512)	$c0, $s0;
	cbr_width(1024)	$c0, $s0;
	cbr_width(2048)	$c0, $s0;
	cbr_width(4096)	$c0, $s0;
	cbr_width(8192)	$c0, $s0;
	cbr_width(16384)	$c0, $s0;
	cbr_width(32768)	$c0, $s0;
	cbr_width(65536)	$c0, $s0;
	cbr_width(131072)	$c0, $s0;
	cbr_width(262144)	$c0, $s0;
	cbr_width(524288)	$c0, $s0;
	cbr_width(1048576)	$c0, $s0;
	cbr_width(2097152)	$c0, $s0;
	cbr_width(4194304)	$c0, $s0;
	cbr_width(8388608)	$c0, $s0;
	cbr_width(16777216)	$c0, $s0;
	cbr_width(33554432)	$c0, $s0;
	cbr_width(67108864)	$c0, $s0;
	cbr_width(134217728)	$c0, $s0;
	cbr_width(268435456)	$c0, $s0;
	cbr_width(536870912)	$c0, $s0;
	cbr_width(1073741824)	$c0, $s0;
	cbr_width(2147483648)	$c0, $s0;
	cbr_width(WAVESIZE)	$c0, $s0;
	cbr_width(all)	$c0, $s0;
	// 
	// Next sample
	// 
	cbr	$c0, @TestLabel;
	// 
	cbr_width(2)	$c0, @TestLabel;
	cbr_width(4)	$c0, @TestLabel;
	cbr_width(8)	$c0, @TestLabel;
	cbr_width(16)	$c0, @TestLabel;
	cbr_width(32)	$c0, @TestLabel;
	cbr_width(64)	$c0, @TestLabel;
	cbr_width(128)	$c0, @TestLabel;
	cbr_width(256)	$c0, @TestLabel;
	cbr_width(512)	$c0, @TestLabel;
	cbr_width(1024)	$c0, @TestLabel;
	cbr_width(2048)	$c0, @TestLabel;
	cbr_width(4096)	$c0, @TestLabel;
	cbr_width(8192)	$c0, @TestLabel;
	cbr_width(16384)	$c0, @TestLabel;
	cbr_width(32768)	$c0, @TestLabel;
	cbr_width(65536)	$c0, @TestLabel;
	cbr_width(131072)	$c0, @TestLabel;
	cbr_width(262144)	$c0, @TestLabel;
	cbr_width(524288)	$c0, @TestLabel;
	cbr_width(1048576)	$c0, @TestLabel;
	cbr_width(2097152)	$c0, @TestLabel;
	cbr_width(4194304)	$c0, @TestLabel;
	cbr_width(8388608)	$c0, @TestLabel;
	cbr_width(16777216)	$c0, @TestLabel;
	cbr_width(33554432)	$c0, @TestLabel;
	cbr_width(67108864)	$c0, @TestLabel;
	cbr_width(134217728)	$c0, @TestLabel;
	cbr_width(268435456)	$c0, @TestLabel;
	cbr_width(536870912)	$c0, @TestLabel;
	cbr_width(1073741824)	$c0, @TestLabel;
	cbr_width(2147483648)	$c0, @TestLabel;
	cbr_width(WAVESIZE)	$c0, @TestLabel;
	cbr_width(all)	$c0, @TestLabel;
	// 
	// Next sample
	// 
	brn	$s0;

@aux_label_1:
	// 
	brn_width(2)	$s0;

@aux_label_2:
	brn_width(4)	$s0;

@aux_label_3:
	brn_width(8)	$s0;

@aux_label_4:
	brn_width(16)	$s0;

@aux_label_5:
	brn_width(32)	$s0;

@aux_label_6:
	brn_width(64)	$s0;

@aux_label_7:
	brn_width(128)	$s0;

@aux_label_8:
	brn_width(256)	$s0;

@aux_label_9:
	brn_width(512)	$s0;

@aux_label_10:
	brn_width(1024)	$s0;

@aux_label_11:
	brn_width(2048)	$s0;

@aux_label_12:
	brn_width(4096)	$s0;

@aux_label_13:
	brn_width(8192)	$s0;

@aux_label_14:
	brn_width(16384)	$s0;

@aux_label_15:
	brn_width(32768)	$s0;

@aux_label_16:
	brn_width(65536)	$s0;

@aux_label_17:
	brn_width(131072)	$s0;

@aux_label_18:
	brn_width(262144)	$s0;

@aux_label_19:
	brn_width(524288)	$s0;

@aux_label_20:
	brn_width(1048576)	$s0;

@aux_label_21:
	brn_width(2097152)	$s0;

@aux_label_22:
	brn_width(4194304)	$s0;

@aux_label_23:
	brn_width(8388608)	$s0;

@aux_label_24:
	brn_width(16777216)	$s0;

@aux_label_25:
	brn_width(33554432)	$s0;

@aux_label_26:
	brn_width(67108864)	$s0;

@aux_label_27:
	brn_width(134217728)	$s0;

@aux_label_28:
	brn_width(268435456)	$s0;

@aux_label_29:
	brn_width(536870912)	$s0;

@aux_label_30:
	brn_width(1073741824)	$s0;

@aux_label_31:
	brn_width(2147483648)	$s0;

@aux_label_32:
	brn_width(WAVESIZE)	$s0;

@aux_label_33:
	brn_width(all)	$s0;

@aux_label_34:
	// 
	// Next sample
	// 
	brn	@TestLabel;

@aux_label_35:
	// 
	// 
	// Next sample
	// 
	barrier_width(1);
	// 
	barrier_width(2);
	barrier_width(4);
	barrier_width(8);
	barrier_width(16);
	barrier_width(32);
	barrier_width(64);
	barrier_width(128);
	barrier_width(256);
	barrier_width(512);
	barrier_width(1024);
	barrier_width(2048);
	barrier_width(4096);
	barrier_width(8192);
	barrier_width(16384);
	barrier_width(32768);
	barrier_width(65536);
	barrier_width(131072);
	barrier_width(262144);
	barrier_width(524288);
	barrier_width(1048576);
	barrier_width(2097152);
	barrier_width(4194304);
	barrier_width(8388608);
	barrier_width(16777216);
	barrier_width(33554432);
	barrier_width(67108864);
	barrier_width(134217728);
	barrier_width(268435456);
	barrier_width(536870912);
	barrier_width(1073741824);
	barrier_width(2147483648);
	barrier_width(WAVESIZE);
	barrier;
	// 
	// Next sample
	// 
	wavebarrier;
	// 
	// 
	// Next sample
	// 
	initfbar	$s0;
	// 
	initfbar	&Fbarrier;
	// 
	// Next sample
	// 
	releasefbar	$s0;
	// 
	releasefbar	&Fbarrier;
	// 
	// Next sample
	// 
	joinfbar_width(1)	$s0;
	// 
	joinfbar_width(1)	&Fbarrier;
	joinfbar_width(2)	$s0;
	joinfbar_width(4)	$s0;
	joinfbar_width(8)	$s0;
	joinfbar_width(16)	$s0;
	joinfbar_width(32)	$s0;
	joinfbar_width(64)	$s0;
	joinfbar_width(128)	$s0;
	joinfbar_width(256)	$s0;
	joinfbar_width(512)	$s0;
	joinfbar_width(1024)	$s0;
	joinfbar_width(2048)	$s0;
	joinfbar_width(4096)	$s0;
	joinfbar_width(8192)	$s0;
	joinfbar_width(16384)	$s0;
	joinfbar_width(32768)	$s0;
	joinfbar_width(65536)	$s0;
	joinfbar_width(131072)	$s0;
	joinfbar_width(262144)	$s0;
	joinfbar_width(524288)	$s0;
	joinfbar_width(1048576)	$s0;
	joinfbar_width(2097152)	$s0;
	joinfbar_width(4194304)	$s0;
	joinfbar_width(8388608)	$s0;
	joinfbar_width(16777216)	$s0;
	joinfbar_width(33554432)	$s0;
	joinfbar_width(67108864)	$s0;
	joinfbar_width(134217728)	$s0;
	joinfbar_width(268435456)	$s0;
	joinfbar_width(536870912)	$s0;
	joinfbar_width(1073741824)	$s0;
	joinfbar_width(2147483648)	$s0;
	joinfbar	$s0;
	joinfbar_width(all)	$s0;
	// 
	// Next sample
	// 
	leavefbar_width(1)	$s0;
	// 
	leavefbar_width(1)	&Fbarrier;
	leavefbar_width(2)	$s0;
	leavefbar_width(4)	$s0;
	leavefbar_width(8)	$s0;
	leavefbar_width(16)	$s0;
	leavefbar_width(32)	$s0;
	leavefbar_width(64)	$s0;
	leavefbar_width(128)	$s0;
	leavefbar_width(256)	$s0;
	leavefbar_width(512)	$s0;
	leavefbar_width(1024)	$s0;
	leavefbar_width(2048)	$s0;
	leavefbar_width(4096)	$s0;
	leavefbar_width(8192)	$s0;
	leavefbar_width(16384)	$s0;
	leavefbar_width(32768)	$s0;
	leavefbar_width(65536)	$s0;
	leavefbar_width(131072)	$s0;
	leavefbar_width(262144)	$s0;
	leavefbar_width(524288)	$s0;
	leavefbar_width(1048576)	$s0;
	leavefbar_width(2097152)	$s0;
	leavefbar_width(4194304)	$s0;
	leavefbar_width(8388608)	$s0;
	leavefbar_width(16777216)	$s0;
	leavefbar_width(33554432)	$s0;
	leavefbar_width(67108864)	$s0;
	leavefbar_width(134217728)	$s0;
	leavefbar_width(268435456)	$s0;
	leavefbar_width(536870912)	$s0;
	leavefbar_width(1073741824)	$s0;
	leavefbar_width(2147483648)	$s0;
	leavefbar	$s0;
	leavefbar_width(all)	$s0;
	// 
	// Next sample
	// 
	waitfbar_width(1)	$s0;
	// 
	waitfbar_width(1)	&Fbarrier;
	waitfbar_width(2)	$s0;
	waitfbar_width(4)	$s0;
	waitfbar_width(8)	$s0;
	waitfbar_width(16)	$s0;
	waitfbar_width(32)	$s0;
	waitfbar_width(64)	$s0;
	waitfbar_width(128)	$s0;
	waitfbar_width(256)	$s0;
	waitfbar_width(512)	$s0;
	waitfbar_width(1024)	$s0;
	waitfbar_width(2048)	$s0;
	waitfbar_width(4096)	$s0;
	waitfbar_width(8192)	$s0;
	waitfbar_width(16384)	$s0;
	waitfbar_width(32768)	$s0;
	waitfbar_width(65536)	$s0;
	waitfbar_width(131072)	$s0;
	waitfbar_width(262144)	$s0;
	waitfbar_width(524288)	$s0;
	waitfbar_width(1048576)	$s0;
	waitfbar_width(2097152)	$s0;
	waitfbar_width(4194304)	$s0;
	waitfbar_width(8388608)	$s0;
	waitfbar_width(16777216)	$s0;
	waitfbar_width(33554432)	$s0;
	waitfbar_width(67108864)	$s0;
	waitfbar_width(134217728)	$s0;
	waitfbar_width(268435456)	$s0;
	waitfbar_width(536870912)	$s0;
	waitfbar_width(1073741824)	$s0;
	waitfbar_width(2147483648)	$s0;
	waitfbar	$s0;
	waitfbar_width(all)	$s0;
	// 
	// Next sample
	// 
	arrivefbar_width(1)	$s0;
	// 
	arrivefbar_width(1)	&Fbarrier;
	arrivefbar_width(2)	$s0;
	arrivefbar_width(4)	$s0;
	arrivefbar_width(8)	$s0;
	arrivefbar_width(16)	$s0;
	arrivefbar_width(32)	$s0;
	arrivefbar_width(64)	$s0;
	arrivefbar_width(128)	$s0;
	arrivefbar_width(256)	$s0;
	arrivefbar_width(512)	$s0;
	arrivefbar_width(1024)	$s0;
	arrivefbar_width(2048)	$s0;
	arrivefbar_width(4096)	$s0;
	arrivefbar_width(8192)	$s0;
	arrivefbar_width(16384)	$s0;
	arrivefbar_width(32768)	$s0;
	arrivefbar_width(65536)	$s0;
	arrivefbar_width(131072)	$s0;
	arrivefbar_width(262144)	$s0;
	arrivefbar_width(524288)	$s0;
	arrivefbar_width(1048576)	$s0;
	arrivefbar_width(2097152)	$s0;
	arrivefbar_width(4194304)	$s0;
	arrivefbar_width(8388608)	$s0;
	arrivefbar_width(16777216)	$s0;
	arrivefbar_width(33554432)	$s0;
	arrivefbar_width(67108864)	$s0;
	arrivefbar_width(134217728)	$s0;
	arrivefbar_width(268435456)	$s0;
	arrivefbar_width(536870912)	$s0;
	arrivefbar_width(1073741824)	$s0;
	arrivefbar_width(2147483648)	$s0;
	arrivefbar	$s0;
	arrivefbar_width(all)	$s0;
	// 
	// Next sample
	// 
	ldf_u32	$s0, &Fbarrier;
	// 
	// 
	// Next sample
	// 
	memfence_group_acq_wv;
	// 
	memfence_group_acq_wg;
	memfence_group_rel_wv;
	memfence_group_ar_wv;
	// 
	// Next sample
	// 
	memfence_global_acq_wv;
	// 
	memfence_global_acq_wg;
	memfence_global_acq_cmp;
	memfence_global_acq_sys;
	memfence_global_rel_wv;
	memfence_global_ar_wv;
	// 
	// Next sample
	// 
	memfence_acq_wv;
	// 
	memfence_acq_wg;
	memfence_acq_cmp;
	memfence_acq_sys;
	memfence_rel_wv;
	memfence_ar_wv;
	// 
	// Next sample
	// 
	activelanemask_b64_b1	$d0, $c0;
	// 
	activelanemask_b64_b1	$d0, 1;
	activelanemask_b64_b1	$d0, WAVESIZE;
	activelanemask_width(2)_b64_b1	$d0, $c0;
	activelanemask_width(4)_b64_b1	$d0, $c0;
	activelanemask_width(8)_b64_b1	$d0, $c0;
	activelanemask_width(16)_b64_b1	$d0, $c0;
	activelanemask_width(32)_b64_b1	$d0, $c0;
	activelanemask_width(64)_b64_b1	$d0, $c0;
	activelanemask_width(128)_b64_b1	$d0, $c0;
	activelanemask_width(256)_b64_b1	$d0, $c0;
	activelanemask_width(512)_b64_b1	$d0, $c0;
	activelanemask_width(1024)_b64_b1	$d0, $c0;
	activelanemask_width(2048)_b64_b1	$d0, $c0;
	activelanemask_width(4096)_b64_b1	$d0, $c0;
	activelanemask_width(8192)_b64_b1	$d0, $c0;
	activelanemask_width(16384)_b64_b1	$d0, $c0;
	activelanemask_width(32768)_b64_b1	$d0, $c0;
	activelanemask_width(65536)_b64_b1	$d0, $c0;
	activelanemask_width(131072)_b64_b1	$d0, $c0;
	activelanemask_width(262144)_b64_b1	$d0, $c0;
	activelanemask_width(524288)_b64_b1	$d0, $c0;
	activelanemask_width(1048576)_b64_b1	$d0, $c0;
	activelanemask_width(2097152)_b64_b1	$d0, $c0;
	activelanemask_width(4194304)_b64_b1	$d0, $c0;
	activelanemask_width(8388608)_b64_b1	$d0, $c0;
	activelanemask_width(16777216)_b64_b1	$d0, $c0;
	activelanemask_width(33554432)_b64_b1	$d0, $c0;
	activelanemask_width(67108864)_b64_b1	$d0, $c0;
	activelanemask_width(134217728)_b64_b1	$d0, $c0;
	activelanemask_width(268435456)_b64_b1	$d0, $c0;
	activelanemask_width(536870912)_b64_b1	$d0, $c0;
	activelanemask_width(1073741824)_b64_b1	$d0, $c0;
	activelanemask_width(2147483648)_b64_b1	$d0, $c0;
	activelanemask_width(WAVESIZE)_b64_b1	$d0, $c0;
	activelanemask_width(all)_b64_b1	$d0, $c0;
	// 
	// Next sample
	// 
	activelanecount_u32_b1	$s0, $c0;
	// 
	activelanecount_u32_b1	$s0, 1;
	activelanecount_u32_b1	$s0, WAVESIZE;
	activelanecount_width(2)_u32_b1	$s0, $c0;
	activelanecount_width(4)_u32_b1	$s0, $c0;
	activelanecount_width(8)_u32_b1	$s0, $c0;
	activelanecount_width(16)_u32_b1	$s0, $c0;
	activelanecount_width(32)_u32_b1	$s0, $c0;
	activelanecount_width(64)_u32_b1	$s0, $c0;
	activelanecount_width(128)_u32_b1	$s0, $c0;
	activelanecount_width(256)_u32_b1	$s0, $c0;
	activelanecount_width(512)_u32_b1	$s0, $c0;
	activelanecount_width(1024)_u32_b1	$s0, $c0;
	activelanecount_width(2048)_u32_b1	$s0, $c0;
	activelanecount_width(4096)_u32_b1	$s0, $c0;
	activelanecount_width(8192)_u32_b1	$s0, $c0;
	activelanecount_width(16384)_u32_b1	$s0, $c0;
	activelanecount_width(32768)_u32_b1	$s0, $c0;
	activelanecount_width(65536)_u32_b1	$s0, $c0;
	activelanecount_width(131072)_u32_b1	$s0, $c0;
	activelanecount_width(262144)_u32_b1	$s0, $c0;
	activelanecount_width(524288)_u32_b1	$s0, $c0;
	activelanecount_width(1048576)_u32_b1	$s0, $c0;
	activelanecount_width(2097152)_u32_b1	$s0, $c0;
	activelanecount_width(4194304)_u32_b1	$s0, $c0;
	activelanecount_width(8388608)_u32_b1	$s0, $c0;
	activelanecount_width(16777216)_u32_b1	$s0, $c0;
	activelanecount_width(33554432)_u32_b1	$s0, $c0;
	activelanecount_width(67108864)_u32_b1	$s0, $c0;
	activelanecount_width(134217728)_u32_b1	$s0, $c0;
	activelanecount_width(268435456)_u32_b1	$s0, $c0;
	activelanecount_width(536870912)_u32_b1	$s0, $c0;
	activelanecount_width(1073741824)_u32_b1	$s0, $c0;
	activelanecount_width(2147483648)_u32_b1	$s0, $c0;
	activelanecount_width(WAVESIZE)_u32_b1	$s0, $c0;
	activelanecount_width(all)_u32_b1	$s0, $c0;
	// 
	// Next sample
	// 
	activelaneid_u32	$s0;
	// 
	activelaneid_width(2)_u32	$s0;
	activelaneid_width(4)_u32	$s0;
	activelaneid_width(8)_u32	$s0;
	activelaneid_width(16)_u32	$s0;
	activelaneid_width(32)_u32	$s0;
	activelaneid_width(64)_u32	$s0;
	activelaneid_width(128)_u32	$s0;
	activelaneid_width(256)_u32	$s0;
	activelaneid_width(512)_u32	$s0;
	activelaneid_width(1024)_u32	$s0;
	activelaneid_width(2048)_u32	$s0;
	activelaneid_width(4096)_u32	$s0;
	activelaneid_width(8192)_u32	$s0;
	activelaneid_width(16384)_u32	$s0;
	activelaneid_width(32768)_u32	$s0;
	activelaneid_width(65536)_u32	$s0;
	activelaneid_width(131072)_u32	$s0;
	activelaneid_width(262144)_u32	$s0;
	activelaneid_width(524288)_u32	$s0;
	activelaneid_width(1048576)_u32	$s0;
	activelaneid_width(2097152)_u32	$s0;
	activelaneid_width(4194304)_u32	$s0;
	activelaneid_width(8388608)_u32	$s0;
	activelaneid_width(16777216)_u32	$s0;
	activelaneid_width(33554432)_u32	$s0;
	activelaneid_width(67108864)_u32	$s0;
	activelaneid_width(134217728)_u32	$s0;
	activelaneid_width(268435456)_u32	$s0;
	activelaneid_width(536870912)_u32	$s0;
	activelaneid_width(1073741824)_u32	$s0;
	activelaneid_width(2147483648)_u32	$s0;
	activelaneid_width(WAVESIZE)_u32	$s0;
	activelaneid_width(all)_u32	$s0;
	// 
	// Next sample
	// 
	activelaneshuffle_b1	$c0, $c0, $s0, $c0, $c0;
	// 
	activelaneshuffle_b1	$c0, 1, $s0, $c0, $c0;
	activelaneshuffle_b1	$c0, WAVESIZE, $s0, $c0, $c0;
	activelaneshuffle_b1	$c0, $c0, 4294967295, $c0, $c0;
	activelaneshuffle_b1	$c0, $c0, WAVESIZE, $c0, $c0;
	activelaneshuffle_b1	$c0, $c0, $s0, 1, $c0;
	activelaneshuffle_b1	$c0, $c0, $s0, WAVESIZE, $c0;
	activelaneshuffle_b1	$c0, $c0, $s0, $c0, 1;
	activelaneshuffle_b1	$c0, $c0, $s0, $c0, WAVESIZE;
	activelaneshuffle_width(2)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(4)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(8)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(16)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(32)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(64)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(128)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(256)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(512)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(1024)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(2048)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(4096)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(8192)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(16384)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(32768)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(65536)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(131072)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(262144)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(524288)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(1048576)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(2097152)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(4194304)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(8388608)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(16777216)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(33554432)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(67108864)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(134217728)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(268435456)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(536870912)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(1073741824)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(2147483648)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(WAVESIZE)_b1	$c0, $c0, $s0, $c0, $c0;
	activelaneshuffle_width(all)_b1	$c0, $c0, $s0, $c0, $c0;
	// 
	// Next sample
	// 
	activelaneshuffle_b32	$s0, $s0, $s0, $s0, $c0;
	// 
	activelaneshuffle_b32	$s0, 4294967295, $s0, $s0, $c0;
	activelaneshuffle_b32	$s0, WAVESIZE, $s0, $s0, $c0;
	activelaneshuffle_b32	$s0, $s0, 4294967295, $s0, $c0;
	activelaneshuffle_b32	$s0, $s0, WAVESIZE, $s0, $c0;
	activelaneshuffle_b32	$s0, $s0, $s0, 4294967295, $c0;
	activelaneshuffle_b32	$s0, $s0, $s0, WAVESIZE, $c0;
	activelaneshuffle_b32	$s0, $s0, $s0, $s0, 1;
	activelaneshuffle_b32	$s0, $s0, $s0, $s0, WAVESIZE;
	activelaneshuffle_width(2)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(4)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(8)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(16)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(32)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(64)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(128)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(256)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(512)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(1024)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(2048)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(4096)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(8192)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(16384)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(32768)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(65536)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(131072)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(262144)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(524288)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(1048576)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(2097152)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(4194304)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(8388608)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(16777216)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(33554432)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(67108864)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(134217728)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(268435456)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(536870912)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(1073741824)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(2147483648)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(WAVESIZE)_b32	$s0, $s0, $s0, $s0, $c0;
	activelaneshuffle_width(all)_b32	$s0, $s0, $s0, $s0, $c0;
	// 
	// Next sample
	// 
	activelaneshuffle_b64	$d0, $d0, $s0, $d0, $c0;
	// 
	activelaneshuffle_b64	$d0, 18446744073709551615, $s0, $d0, $c0;
	activelaneshuffle_b64	$d0, WAVESIZE, $s0, $d0, $c0;
	activelaneshuffle_b64	$d0, $d0, 4294967295, $d0, $c0;
	activelaneshuffle_b64	$d0, $d0, WAVESIZE, $d0, $c0;
	activelaneshuffle_b64	$d0, $d0, $s0, 18446744073709551615, $c0;
	activelaneshuffle_b64	$d0, $d0, $s0, WAVESIZE, $c0;
	activelaneshuffle_b64	$d0, $d0, $s0, $d0, 1;
	activelaneshuffle_b64	$d0, $d0, $s0, $d0, WAVESIZE;
	activelaneshuffle_width(2)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(4)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(8)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(16)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(32)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(64)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(128)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(256)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(512)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(1024)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(2048)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(4096)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(8192)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(16384)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(32768)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(65536)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(131072)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(262144)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(524288)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(1048576)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(2097152)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(4194304)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(8388608)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(16777216)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(33554432)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(67108864)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(134217728)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(268435456)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(536870912)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(1073741824)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(2147483648)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(WAVESIZE)_b64	$d0, $d0, $s0, $d0, $c0;
	activelaneshuffle_width(all)_b64	$d0, $d0, $s0, $d0, $c0;
	// 
	// Next sample
	// 
	activelaneshuffle_b128	$q0, $q0, $s0, $q0, $c0;
	// 
	activelaneshuffle_b128	$q0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $s0, $q0, $c0;
	activelaneshuffle_b128	$q0, WAVESIZE, $s0, $q0, $c0;
	activelaneshuffle_b128	$q0, $q0, 4294967295, $q0, $c0;
	activelaneshuffle_b128	$q0, $q0, WAVESIZE, $q0, $c0;
	activelaneshuffle_b128	$q0, $q0, $s0, _u8x16(0,0,0,0,0,0,0,0,107,240,55,174,50,95,28,113), $c0;
	activelaneshuffle_b128	$q0, $q0, $s0, WAVESIZE, $c0;
	activelaneshuffle_b128	$q0, $q0, $s0, $q0, 1;
	activelaneshuffle_b128	$q0, $q0, $s0, $q0, WAVESIZE;
	activelaneshuffle_width(2)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(4)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(8)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(16)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(32)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(64)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(128)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(256)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(512)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(1024)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(2048)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(4096)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(8192)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(16384)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(32768)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(65536)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(131072)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(262144)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(524288)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(1048576)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(2097152)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(4194304)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(8388608)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(16777216)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(33554432)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(67108864)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(134217728)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(268435456)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(536870912)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(1073741824)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(2147483648)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(WAVESIZE)_b128	$q0, $q0, $s0, $q0, $c0;
	activelaneshuffle_width(all)_b128	$q0, $q0, $s0, $q0, $c0;
	// 
	// Next sample
	// 
	ret;

@aux_label_36:
	// 
	// 
	// Next sample
	// 
	alloca_private_u32	$s0, $s0;
	// 
	alloca_private_u32	$s0, 4294967295;
	alloca_private_u32	$s0, WAVESIZE;
	alloca_private_align(2)_u32	$s0, $s0;
	alloca_private_align(4)_u32	$s0, $s0;
	alloca_private_align(8)_u32	$s0, $s0;
	alloca_private_align(16)_u32	$s0, $s0;
	alloca_private_align(32)_u32	$s0, $s0;
	alloca_private_align(64)_u32	$s0, $s0;
	alloca_private_align(128)_u32	$s0, $s0;
	// 
	// Next sample
	// 
	cuid_u32	$s0;
	// 
	// 
	// Next sample
	// 
	dim_u32	$s0;
	// 
	// 
	// Next sample
	// 
	getdetectexcept_u32	$s0;
	// 
	// 
	// Next sample
	// 
	laneid_u32	$s0;
	// 
	// 
	// Next sample
	// 
	maxcuid_u32	$s0;
	// 
	// 
	// Next sample
	// 
	maxwaveid_u32	$s0;
	// 
	// 
	// Next sample
	// 
	queueid_u32	$s0;
	// 
	// 
	// Next sample
	// 
	waveid_u32	$s0;
	// 
	// 
	// Next sample
	// 
	workitemflatabsid_u32	$s0;
	// 
	// 
	// Next sample
	// 
	workitemflatid_u32	$s0;
	// 
	// 
	// Next sample
	// 
	currentworkgroupsize_u32	$s0, 0;
	// 
	currentworkgroupsize_u32	$s0, 1;
	currentworkgroupsize_u32	$s0, 2;
	// 
	// Next sample
	// 
	gridgroups_u32	$s0, 0;
	// 
	gridgroups_u32	$s0, 1;
	gridgroups_u32	$s0, 2;
	// 
	// Next sample
	// 
	gridsize_u32	$s0, 0;
	// 
	gridsize_u32	$s0, 1;
	gridsize_u32	$s0, 2;
	// 
	// Next sample
	// 
	workgroupid_u32	$s0, 0;
	// 
	workgroupid_u32	$s0, 1;
	workgroupid_u32	$s0, 2;
	// 
	// Next sample
	// 
	workgroupsize_u32	$s0, 0;
	// 
	workgroupsize_u32	$s0, 1;
	workgroupsize_u32	$s0, 2;
	// 
	// Next sample
	// 
	workitemabsid_u32	$s0, 0;
	// 
	workitemabsid_u32	$s0, 1;
	workitemabsid_u32	$s0, 2;
	// 
	// Next sample
	// 
	workitemid_u32	$s0, 0;
	// 
	workitemid_u32	$s0, 1;
	workitemid_u32	$s0, 2;
	// 
	// Next sample
	// 
	cleardetectexcept_u32	4294967295;
	// 
	cleardetectexcept_u32	WAVESIZE;
	// 
	// Next sample
	// 
	setdetectexcept_u32	4294967295;
	// 
	setdetectexcept_u32	WAVESIZE;
	// 
	// Next sample
	// 
	clock_u64	$d0;
	// 
	// 
	// Next sample
	// 
	packetid_u64	$d0;
	// 
	// 
	// Next sample
	// 
	packetcompletionsig_sig32	$d0;
	// 
	// 
	// Next sample
	// 
	queueptr_u32	$s0;
	// 
	// 
	// Next sample
	// 
	queueptr_global_u32	$s0;
	// 
	// 
	// Next sample
	// 
	servicequeueptr_u32	$s0;
	// 
	// 
	// Next sample
	// 
	servicequeueptr_global_u32	$s0;
	// 
	// 
	// Next sample
	// 
	nullptr_u32	$s0;
	// 
	// 
	// Next sample
	// 
	nullptr_global_u32	$s0;
	// 
	// 
	// Next sample
	// 
	nullptr_readonly_u32	$s0;
	// 
	// 
	// Next sample
	// 
	nullptr_kernarg_u32	$s0;
	// 
	// 
	// Next sample
	// 
	nullptr_group_u32	$s0;
	// 
	// 
	// Next sample
	// 
	nullptr_private_u32	$s0;
	// 
	// 
	// Next sample
	// 
	nullptr_spill_u32	$s0;
	// 
	// 
	// Next sample
	// 
	nullptr_arg_u32	$s0;
	// 
	// 
	// Next sample
	// 
	addqueuewriteindex_rlx_u64	$d0, [$s0], $d0;
	// 
	addqueuewriteindex_rlx_u64	$d0, [0], $d0;
	addqueuewriteindex_rlx_u64	$d0, [$s0], 18446744073709551615;
	addqueuewriteindex_rlx_u64	$d0, [$s0], WAVESIZE;
	addqueuewriteindex_acq_u64	$d0, [$s0], $d0;
	addqueuewriteindex_rel_u64	$d0, [$s0], $d0;
	addqueuewriteindex_ar_u64	$d0, [$s0], $d0;
	// 
	// Next sample
	// 
	addqueuewriteindex_global_rlx_u64	$d0, [&GlobalVar], $d0;
	// 
	addqueuewriteindex_global_rlx_u64	$d0, [&GlobalROImg], $d0;
	addqueuewriteindex_global_rlx_u64	$d0, [&GlobalRWImg], $d0;
	addqueuewriteindex_global_rlx_u64	$d0, [&GlobalSamp], $d0;
	addqueuewriteindex_global_rlx_u64	$d0, [&GlobalSig32], $d0;
	addqueuewriteindex_global_rlx_u64	$d0, [&GlobalSig64], $d0;
	addqueuewriteindex_global_rlx_u64	$d0, [$s0], $d0;
	addqueuewriteindex_global_rlx_u64	$d0, [0], $d0;
	addqueuewriteindex_global_rlx_u64	$d0, [&GlobalVar], 18446744073709551615;
	addqueuewriteindex_global_rlx_u64	$d0, [&GlobalVar], WAVESIZE;
	addqueuewriteindex_global_acq_u64	$d0, [&GlobalVar], $d0;
	addqueuewriteindex_global_rel_u64	$d0, [&GlobalVar], $d0;
	addqueuewriteindex_global_ar_u64	$d0, [&GlobalVar], $d0;
	// 
	// Next sample
	// 
	casqueuewriteindex_rlx_u64	$d0, [$s0], $d0, $d0;
	// 
	casqueuewriteindex_rlx_u64	$d0, [0], $d0, $d0;
	casqueuewriteindex_rlx_u64	$d0, [$s0], 18446744073709551615, $d0;
	casqueuewriteindex_rlx_u64	$d0, [$s0], WAVESIZE, $d0;
	casqueuewriteindex_rlx_u64	$d0, [$s0], $d0, 18446744073709551615;
	casqueuewriteindex_rlx_u64	$d0, [$s0], $d0, WAVESIZE;
	casqueuewriteindex_acq_u64	$d0, [$s0], $d0, $d0;
	casqueuewriteindex_rel_u64	$d0, [$s0], $d0, $d0;
	casqueuewriteindex_ar_u64	$d0, [$s0], $d0, $d0;
	// 
	// Next sample
	// 
	casqueuewriteindex_global_rlx_u64	$d0, [&GlobalVar], $d0, $d0;
	// 
	casqueuewriteindex_global_rlx_u64	$d0, [&GlobalROImg], $d0, $d0;
	casqueuewriteindex_global_rlx_u64	$d0, [&GlobalRWImg], $d0, $d0;
	casqueuewriteindex_global_rlx_u64	$d0, [&GlobalSamp], $d0, $d0;
	casqueuewriteindex_global_rlx_u64	$d0, [&GlobalSig32], $d0, $d0;
	casqueuewriteindex_global_rlx_u64	$d0, [&GlobalSig64], $d0, $d0;
	casqueuewriteindex_global_rlx_u64	$d0, [$s0], $d0, $d0;
	casqueuewriteindex_global_rlx_u64	$d0, [0], $d0, $d0;
	casqueuewriteindex_global_rlx_u64	$d0, [&GlobalVar], 18446744073709551615, $d0;
	casqueuewriteindex_global_rlx_u64	$d0, [&GlobalVar], WAVESIZE, $d0;
	casqueuewriteindex_global_rlx_u64	$d0, [&GlobalVar], $d0, 18446744073709551615;
	casqueuewriteindex_global_rlx_u64	$d0, [&GlobalVar], $d0, WAVESIZE;
	casqueuewriteindex_global_acq_u64	$d0, [&GlobalVar], $d0, $d0;
	casqueuewriteindex_global_rel_u64	$d0, [&GlobalVar], $d0, $d0;
	casqueuewriteindex_global_ar_u64	$d0, [&GlobalVar], $d0, $d0;
	// 
	// Next sample
	// 
	ldqueuereadindex_rlx_u64	$d0, [$s0];
	// 
	ldqueuereadindex_rlx_u64	$d0, [0];
	ldqueuereadindex_acq_u64	$d0, [$s0];
	// 
	// Next sample
	// 
	ldqueuereadindex_global_rlx_u64	$d0, [&GlobalVar];
	// 
	ldqueuereadindex_global_rlx_u64	$d0, [&GlobalROImg];
	ldqueuereadindex_global_rlx_u64	$d0, [&GlobalRWImg];
	ldqueuereadindex_global_rlx_u64	$d0, [&GlobalSamp];
	ldqueuereadindex_global_rlx_u64	$d0, [&GlobalSig32];
	ldqueuereadindex_global_rlx_u64	$d0, [&GlobalSig64];
	ldqueuereadindex_global_rlx_u64	$d0, [$s0];
	ldqueuereadindex_global_rlx_u64	$d0, [0];
	ldqueuereadindex_global_acq_u64	$d0, [&GlobalVar];
	// 
	// Next sample
	// 
	ldqueuewriteindex_rlx_u64	$d0, [$s0];
	// 
	ldqueuewriteindex_rlx_u64	$d0, [0];
	ldqueuewriteindex_acq_u64	$d0, [$s0];
	// 
	// Next sample
	// 
	ldqueuewriteindex_global_rlx_u64	$d0, [&GlobalVar];
	// 
	ldqueuewriteindex_global_rlx_u64	$d0, [&GlobalROImg];
	ldqueuewriteindex_global_rlx_u64	$d0, [&GlobalRWImg];
	ldqueuewriteindex_global_rlx_u64	$d0, [&GlobalSamp];
	ldqueuewriteindex_global_rlx_u64	$d0, [&GlobalSig32];
	ldqueuewriteindex_global_rlx_u64	$d0, [&GlobalSig64];
	ldqueuewriteindex_global_rlx_u64	$d0, [$s0];
	ldqueuewriteindex_global_rlx_u64	$d0, [0];
	ldqueuewriteindex_global_acq_u64	$d0, [&GlobalVar];
	// 
	// Next sample
	// 
	stqueuewriteindex_rlx_u64	[$s0], $d0;
	// 
	stqueuewriteindex_rlx_u64	[0], $d0;
	stqueuewriteindex_rlx_u64	[$s0], 18446744073709551615;
	stqueuewriteindex_rlx_u64	[$s0], WAVESIZE;
	stqueuewriteindex_acq_u64	[$s0], $d0;
	// 
	// Next sample
	// 
	stqueuewriteindex_global_rlx_u64	[&GlobalVar], $d0;
	// 
	stqueuewriteindex_global_rlx_u64	[&GlobalROImg], $d0;
	stqueuewriteindex_global_rlx_u64	[&GlobalRWImg], $d0;
	stqueuewriteindex_global_rlx_u64	[&GlobalSamp], $d0;
	stqueuewriteindex_global_rlx_u64	[&GlobalSig32], $d0;
	stqueuewriteindex_global_rlx_u64	[&GlobalSig64], $d0;
	stqueuewriteindex_global_rlx_u64	[$s0], $d0;
	stqueuewriteindex_global_rlx_u64	[0], $d0;
	stqueuewriteindex_global_rlx_u64	[&GlobalVar], 18446744073709551615;
	stqueuewriteindex_global_rlx_u64	[&GlobalVar], WAVESIZE;
	stqueuewriteindex_global_acq_u64	[&GlobalVar], $d0;
	// 
	// Next sample
	// 
	debugtrap_u32	$s0;
	// 
	debugtrap_u32	4294967295;
	debugtrap_u32	WAVESIZE;
	// 
	// Next sample
	// 
	gcn_madu	$d0, $s0, $s0, $d0;
	// 
	gcn_madu	$d0, 4294967295, $s0, $d0;
	gcn_madu	$d0, WAVESIZE, $s0, $d0;
	gcn_madu	$d0, $s0, 4294967295, $d0;
	gcn_madu	$d0, $s0, WAVESIZE, $d0;
	gcn_madu	$d0, $s0, $s0, 18446744073709551615;
	gcn_madu	$d0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_mads	$d0, $s0, $s0, $d0;
	// 
	gcn_mads	$d0, -1, $s0, $d0;
	gcn_mads	$d0, WAVESIZE, $s0, $d0;
	gcn_mads	$d0, $s0, -1, $d0;
	gcn_mads	$d0, $s0, WAVESIZE, $d0;
	gcn_mads	$d0, $s0, $s0, -1;
	gcn_mads	$d0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_min_u32	$s0, $s0, $s0;
	// 
	gcn_min_u32	$s0, 4294967295, $s0;
	gcn_min_u32	$s0, WAVESIZE, $s0;
	gcn_min_u32	$s0, $s0, 4294967295;
	gcn_min_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_min_s32	$s0, $s0, $s0;
	// 
	gcn_min_s32	$s0, -1, $s0;
	gcn_min_s32	$s0, WAVESIZE, $s0;
	gcn_min_s32	$s0, $s0, -1;
	gcn_min_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_min_f32	$s0, $s0, $s0;
	// 
	gcn_min_f32	$s0, 0Fffffffff, $s0;
	gcn_min_f32	$s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	gcn_min_f64	$d0, $d0, $d0;
	// 
	gcn_min_f64	$d0, 0Dffffffffffffffff, $d0;
	gcn_min_f64	$d0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	gcn_max_u32	$s0, $s0, $s0;
	// 
	gcn_max_u32	$s0, 4294967295, $s0;
	gcn_max_u32	$s0, WAVESIZE, $s0;
	gcn_max_u32	$s0, $s0, 4294967295;
	gcn_max_u32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_max_s32	$s0, $s0, $s0;
	// 
	gcn_max_s32	$s0, -1, $s0;
	gcn_max_s32	$s0, WAVESIZE, $s0;
	gcn_max_s32	$s0, $s0, -1;
	gcn_max_s32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_max_f32	$s0, $s0, $s0;
	// 
	gcn_max_f32	$s0, 0Fffffffff, $s0;
	gcn_max_f32	$s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	gcn_max_f64	$d0, $d0, $d0;
	// 
	gcn_max_f64	$d0, 0Dffffffffffffffff, $d0;
	gcn_max_f64	$d0, $d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	gcn_min3_u32	$s0, $s0, $s0, $s0;
	// 
	gcn_min3_u32	$s0, 4294967295, $s0, $s0;
	gcn_min3_u32	$s0, WAVESIZE, $s0, $s0;
	gcn_min3_u32	$s0, $s0, 4294967295, $s0;
	gcn_min3_u32	$s0, $s0, WAVESIZE, $s0;
	gcn_min3_u32	$s0, $s0, $s0, 4294967295;
	gcn_min3_u32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_min3_s32	$s0, $s0, $s0, $s0;
	// 
	gcn_min3_s32	$s0, -1, $s0, $s0;
	gcn_min3_s32	$s0, WAVESIZE, $s0, $s0;
	gcn_min3_s32	$s0, $s0, -1, $s0;
	gcn_min3_s32	$s0, $s0, WAVESIZE, $s0;
	gcn_min3_s32	$s0, $s0, $s0, -1;
	gcn_min3_s32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_min3_f32	$s0, $s0, $s0, $s0;
	// 
	gcn_min3_f32	$s0, 0Fffffffff, $s0, $s0;
	gcn_min3_f32	$s0, $s0, 0Fffffffff, $s0;
	gcn_min3_f32	$s0, $s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	gcn_med3_u32	$s0, $s0, $s0, $s0;
	// 
	gcn_med3_u32	$s0, 4294967295, $s0, $s0;
	gcn_med3_u32	$s0, WAVESIZE, $s0, $s0;
	gcn_med3_u32	$s0, $s0, 4294967295, $s0;
	gcn_med3_u32	$s0, $s0, WAVESIZE, $s0;
	gcn_med3_u32	$s0, $s0, $s0, 4294967295;
	gcn_med3_u32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_med3_s32	$s0, $s0, $s0, $s0;
	// 
	gcn_med3_s32	$s0, -1, $s0, $s0;
	gcn_med3_s32	$s0, WAVESIZE, $s0, $s0;
	gcn_med3_s32	$s0, $s0, -1, $s0;
	gcn_med3_s32	$s0, $s0, WAVESIZE, $s0;
	gcn_med3_s32	$s0, $s0, $s0, -1;
	gcn_med3_s32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_med3_f32	$s0, $s0, $s0, $s0;
	// 
	gcn_med3_f32	$s0, 0Fffffffff, $s0, $s0;
	gcn_med3_f32	$s0, $s0, 0Fffffffff, $s0;
	gcn_med3_f32	$s0, $s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	gcn_max3_u32	$s0, $s0, $s0, $s0;
	// 
	gcn_max3_u32	$s0, 4294967295, $s0, $s0;
	gcn_max3_u32	$s0, WAVESIZE, $s0, $s0;
	gcn_max3_u32	$s0, $s0, 4294967295, $s0;
	gcn_max3_u32	$s0, $s0, WAVESIZE, $s0;
	gcn_max3_u32	$s0, $s0, $s0, 4294967295;
	gcn_max3_u32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_max3_s32	$s0, $s0, $s0, $s0;
	// 
	gcn_max3_s32	$s0, -1, $s0, $s0;
	gcn_max3_s32	$s0, WAVESIZE, $s0, $s0;
	gcn_max3_s32	$s0, $s0, -1, $s0;
	gcn_max3_s32	$s0, $s0, WAVESIZE, $s0;
	gcn_max3_s32	$s0, $s0, $s0, -1;
	gcn_max3_s32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_max3_f32	$s0, $s0, $s0, $s0;
	// 
	gcn_max3_f32	$s0, 0Fffffffff, $s0, $s0;
	gcn_max3_f32	$s0, $s0, 0Fffffffff, $s0;
	gcn_max3_f32	$s0, $s0, $s0, 0Fffffffff;
	// 
	// Next sample
	// 
	gcn_bfm_b32	$s0, $s0, $s0;
	// 
	gcn_bfm_b32	$s0, 4294967295, $s0;
	gcn_bfm_b32	$s0, WAVESIZE, $s0;
	gcn_bfm_b32	$s0, $s0, 4294967295;
	gcn_bfm_b32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_fldexp_f32	$s0, $s0, $s0;
	// 
	gcn_fldexp_f32	$s0, 0Fffffffff, $s0;
	gcn_fldexp_f32	$s0, $s0, -1;
	gcn_fldexp_f32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_fldexp_f64	$d0, $d0, $s0;
	// 
	gcn_fldexp_f64	$d0, 0Dffffffffffffffff, $s0;
	gcn_fldexp_f64	$d0, $d0, -1;
	gcn_fldexp_f64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_frexp_exp_f32	$s0, $s0;
	// 
	gcn_frexp_exp_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	gcn_frexp_exp_f64	$s0, $d0;
	// 
	gcn_frexp_exp_f64	$s0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	gcn_frexp_mant_f32	$s0, $s0;
	// 
	gcn_frexp_mant_f32	$s0, 0Fffffffff;
	// 
	// Next sample
	// 
	gcn_frexp_mant_f64	$d0, $d0;
	// 
	gcn_frexp_mant_f64	$d0, 0Dffffffffffffffff;
	// 
	// Next sample
	// 
	gcn_trig_preop_f64	$d0, $d0, 4294967295;
	// 
	gcn_trig_preop_f64	$d0, 0Dffffffffffffffff, 4294967295;
	gcn_trig_preop_f64	$d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_region_alloc	4294967295;
	// 
	gcn_region_alloc	WAVESIZE;
	// 
	// Next sample
	// 
	gcn_ld_region_u8	$s0, [$s0];
	// 
	gcn_ld_v2_region_u8	($s0,$s1), [$s0];
	gcn_ld_v3_region_u8	($s0,$s1,$s2), [$s0];
	gcn_ld_v4_region_u8	($s0,$s1,$s2,$s3), [$s0];
	gcn_ld_region_u8	$s0, [0];
	gcn_ld_region_align(2)_u8	$s0, [$s0];
	gcn_ld_region_align(4)_u8	$s0, [$s0];
	gcn_ld_region_align(8)_u8	$s0, [$s0];
	gcn_ld_region_align(16)_u8	$s0, [$s0];
	gcn_ld_region_align(32)_u8	$s0, [$s0];
	gcn_ld_region_align(64)_u8	$s0, [$s0];
	gcn_ld_region_align(128)_u8	$s0, [$s0];
	gcn_ld_region_equiv(1)_u8	$s0, [$s0];
	gcn_ld_region_equiv(2)_u8	$s0, [$s0];
	gcn_ld_region_equiv(255)_u8	$s0, [$s0];
	gcn_ld_region_width(2)_u8	$s0, [$s0];
	gcn_ld_region_width(4)_u8	$s0, [$s0];
	gcn_ld_region_width(8)_u8	$s0, [$s0];
	gcn_ld_region_width(16)_u8	$s0, [$s0];
	gcn_ld_region_width(32)_u8	$s0, [$s0];
	gcn_ld_region_width(64)_u8	$s0, [$s0];
	gcn_ld_region_width(128)_u8	$s0, [$s0];
	gcn_ld_region_width(256)_u8	$s0, [$s0];
	gcn_ld_region_width(512)_u8	$s0, [$s0];
	gcn_ld_region_width(1024)_u8	$s0, [$s0];
	gcn_ld_region_width(2048)_u8	$s0, [$s0];
	gcn_ld_region_width(4096)_u8	$s0, [$s0];
	gcn_ld_region_width(8192)_u8	$s0, [$s0];
	gcn_ld_region_width(16384)_u8	$s0, [$s0];
	gcn_ld_region_width(32768)_u8	$s0, [$s0];
	gcn_ld_region_width(65536)_u8	$s0, [$s0];
	gcn_ld_region_width(131072)_u8	$s0, [$s0];
	gcn_ld_region_width(262144)_u8	$s0, [$s0];
	gcn_ld_region_width(524288)_u8	$s0, [$s0];
	gcn_ld_region_width(1048576)_u8	$s0, [$s0];
	gcn_ld_region_width(2097152)_u8	$s0, [$s0];
	gcn_ld_region_width(4194304)_u8	$s0, [$s0];
	gcn_ld_region_width(8388608)_u8	$s0, [$s0];
	gcn_ld_region_width(16777216)_u8	$s0, [$s0];
	gcn_ld_region_width(33554432)_u8	$s0, [$s0];
	gcn_ld_region_width(67108864)_u8	$s0, [$s0];
	gcn_ld_region_width(134217728)_u8	$s0, [$s0];
	gcn_ld_region_width(268435456)_u8	$s0, [$s0];
	gcn_ld_region_width(536870912)_u8	$s0, [$s0];
	gcn_ld_region_width(1073741824)_u8	$s0, [$s0];
	gcn_ld_region_width(2147483648)_u8	$s0, [$s0];
	gcn_ld_region_width(WAVESIZE)_u8	$s0, [$s0];
	gcn_ld_region_width(all)_u8	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_ld_region_u16	$s0, [$s0];
	// 
	gcn_ld_v2_region_u16	($s0,$s1), [$s0];
	gcn_ld_v3_region_u16	($s0,$s1,$s2), [$s0];
	gcn_ld_v4_region_u16	($s0,$s1,$s2,$s3), [$s0];
	gcn_ld_region_u16	$s0, [0];
	gcn_ld_region_align(2)_u16	$s0, [$s0];
	gcn_ld_region_align(4)_u16	$s0, [$s0];
	gcn_ld_region_align(8)_u16	$s0, [$s0];
	gcn_ld_region_align(16)_u16	$s0, [$s0];
	gcn_ld_region_align(32)_u16	$s0, [$s0];
	gcn_ld_region_align(64)_u16	$s0, [$s0];
	gcn_ld_region_align(128)_u16	$s0, [$s0];
	gcn_ld_region_equiv(1)_u16	$s0, [$s0];
	gcn_ld_region_equiv(2)_u16	$s0, [$s0];
	gcn_ld_region_equiv(255)_u16	$s0, [$s0];
	gcn_ld_region_width(2)_u16	$s0, [$s0];
	gcn_ld_region_width(4)_u16	$s0, [$s0];
	gcn_ld_region_width(8)_u16	$s0, [$s0];
	gcn_ld_region_width(16)_u16	$s0, [$s0];
	gcn_ld_region_width(32)_u16	$s0, [$s0];
	gcn_ld_region_width(64)_u16	$s0, [$s0];
	gcn_ld_region_width(128)_u16	$s0, [$s0];
	gcn_ld_region_width(256)_u16	$s0, [$s0];
	gcn_ld_region_width(512)_u16	$s0, [$s0];
	gcn_ld_region_width(1024)_u16	$s0, [$s0];
	gcn_ld_region_width(2048)_u16	$s0, [$s0];
	gcn_ld_region_width(4096)_u16	$s0, [$s0];
	gcn_ld_region_width(8192)_u16	$s0, [$s0];
	gcn_ld_region_width(16384)_u16	$s0, [$s0];
	gcn_ld_region_width(32768)_u16	$s0, [$s0];
	gcn_ld_region_width(65536)_u16	$s0, [$s0];
	gcn_ld_region_width(131072)_u16	$s0, [$s0];
	gcn_ld_region_width(262144)_u16	$s0, [$s0];
	gcn_ld_region_width(524288)_u16	$s0, [$s0];
	gcn_ld_region_width(1048576)_u16	$s0, [$s0];
	gcn_ld_region_width(2097152)_u16	$s0, [$s0];
	gcn_ld_region_width(4194304)_u16	$s0, [$s0];
	gcn_ld_region_width(8388608)_u16	$s0, [$s0];
	gcn_ld_region_width(16777216)_u16	$s0, [$s0];
	gcn_ld_region_width(33554432)_u16	$s0, [$s0];
	gcn_ld_region_width(67108864)_u16	$s0, [$s0];
	gcn_ld_region_width(134217728)_u16	$s0, [$s0];
	gcn_ld_region_width(268435456)_u16	$s0, [$s0];
	gcn_ld_region_width(536870912)_u16	$s0, [$s0];
	gcn_ld_region_width(1073741824)_u16	$s0, [$s0];
	gcn_ld_region_width(2147483648)_u16	$s0, [$s0];
	gcn_ld_region_width(WAVESIZE)_u16	$s0, [$s0];
	gcn_ld_region_width(all)_u16	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_ld_region_u32	$s0, [$s0];
	// 
	gcn_ld_v2_region_u32	($s0,$s1), [$s0];
	gcn_ld_v3_region_u32	($s0,$s1,$s2), [$s0];
	gcn_ld_v4_region_u32	($s0,$s1,$s2,$s3), [$s0];
	gcn_ld_region_u32	$s0, [0];
	gcn_ld_region_align(2)_u32	$s0, [$s0];
	gcn_ld_region_align(4)_u32	$s0, [$s0];
	gcn_ld_region_align(8)_u32	$s0, [$s0];
	gcn_ld_region_align(16)_u32	$s0, [$s0];
	gcn_ld_region_align(32)_u32	$s0, [$s0];
	gcn_ld_region_align(64)_u32	$s0, [$s0];
	gcn_ld_region_align(128)_u32	$s0, [$s0];
	gcn_ld_region_equiv(1)_u32	$s0, [$s0];
	gcn_ld_region_equiv(2)_u32	$s0, [$s0];
	gcn_ld_region_equiv(255)_u32	$s0, [$s0];
	gcn_ld_region_width(2)_u32	$s0, [$s0];
	gcn_ld_region_width(4)_u32	$s0, [$s0];
	gcn_ld_region_width(8)_u32	$s0, [$s0];
	gcn_ld_region_width(16)_u32	$s0, [$s0];
	gcn_ld_region_width(32)_u32	$s0, [$s0];
	gcn_ld_region_width(64)_u32	$s0, [$s0];
	gcn_ld_region_width(128)_u32	$s0, [$s0];
	gcn_ld_region_width(256)_u32	$s0, [$s0];
	gcn_ld_region_width(512)_u32	$s0, [$s0];
	gcn_ld_region_width(1024)_u32	$s0, [$s0];
	gcn_ld_region_width(2048)_u32	$s0, [$s0];
	gcn_ld_region_width(4096)_u32	$s0, [$s0];
	gcn_ld_region_width(8192)_u32	$s0, [$s0];
	gcn_ld_region_width(16384)_u32	$s0, [$s0];
	gcn_ld_region_width(32768)_u32	$s0, [$s0];
	gcn_ld_region_width(65536)_u32	$s0, [$s0];
	gcn_ld_region_width(131072)_u32	$s0, [$s0];
	gcn_ld_region_width(262144)_u32	$s0, [$s0];
	gcn_ld_region_width(524288)_u32	$s0, [$s0];
	gcn_ld_region_width(1048576)_u32	$s0, [$s0];
	gcn_ld_region_width(2097152)_u32	$s0, [$s0];
	gcn_ld_region_width(4194304)_u32	$s0, [$s0];
	gcn_ld_region_width(8388608)_u32	$s0, [$s0];
	gcn_ld_region_width(16777216)_u32	$s0, [$s0];
	gcn_ld_region_width(33554432)_u32	$s0, [$s0];
	gcn_ld_region_width(67108864)_u32	$s0, [$s0];
	gcn_ld_region_width(134217728)_u32	$s0, [$s0];
	gcn_ld_region_width(268435456)_u32	$s0, [$s0];
	gcn_ld_region_width(536870912)_u32	$s0, [$s0];
	gcn_ld_region_width(1073741824)_u32	$s0, [$s0];
	gcn_ld_region_width(2147483648)_u32	$s0, [$s0];
	gcn_ld_region_width(WAVESIZE)_u32	$s0, [$s0];
	gcn_ld_region_width(all)_u32	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_ld_region_u64	$d0, [$s0];
	// 
	gcn_ld_v2_region_u64	($d0,$d1), [$s0];
	gcn_ld_v3_region_u64	($d0,$d1,$d2), [$s0];
	gcn_ld_v4_region_u64	($d0,$d1,$d2,$d3), [$s0];
	gcn_ld_region_u64	$d0, [0];
	gcn_ld_region_align(2)_u64	$d0, [$s0];
	gcn_ld_region_align(4)_u64	$d0, [$s0];
	gcn_ld_region_align(8)_u64	$d0, [$s0];
	gcn_ld_region_align(16)_u64	$d0, [$s0];
	gcn_ld_region_align(32)_u64	$d0, [$s0];
	gcn_ld_region_align(64)_u64	$d0, [$s0];
	gcn_ld_region_align(128)_u64	$d0, [$s0];
	gcn_ld_region_equiv(1)_u64	$d0, [$s0];
	gcn_ld_region_equiv(2)_u64	$d0, [$s0];
	gcn_ld_region_equiv(255)_u64	$d0, [$s0];
	gcn_ld_region_width(2)_u64	$d0, [$s0];
	gcn_ld_region_width(4)_u64	$d0, [$s0];
	gcn_ld_region_width(8)_u64	$d0, [$s0];
	gcn_ld_region_width(16)_u64	$d0, [$s0];
	gcn_ld_region_width(32)_u64	$d0, [$s0];
	gcn_ld_region_width(64)_u64	$d0, [$s0];
	gcn_ld_region_width(128)_u64	$d0, [$s0];
	gcn_ld_region_width(256)_u64	$d0, [$s0];
	gcn_ld_region_width(512)_u64	$d0, [$s0];
	gcn_ld_region_width(1024)_u64	$d0, [$s0];
	gcn_ld_region_width(2048)_u64	$d0, [$s0];
	gcn_ld_region_width(4096)_u64	$d0, [$s0];
	gcn_ld_region_width(8192)_u64	$d0, [$s0];
	gcn_ld_region_width(16384)_u64	$d0, [$s0];
	gcn_ld_region_width(32768)_u64	$d0, [$s0];
	gcn_ld_region_width(65536)_u64	$d0, [$s0];
	gcn_ld_region_width(131072)_u64	$d0, [$s0];
	gcn_ld_region_width(262144)_u64	$d0, [$s0];
	gcn_ld_region_width(524288)_u64	$d0, [$s0];
	gcn_ld_region_width(1048576)_u64	$d0, [$s0];
	gcn_ld_region_width(2097152)_u64	$d0, [$s0];
	gcn_ld_region_width(4194304)_u64	$d0, [$s0];
	gcn_ld_region_width(8388608)_u64	$d0, [$s0];
	gcn_ld_region_width(16777216)_u64	$d0, [$s0];
	gcn_ld_region_width(33554432)_u64	$d0, [$s0];
	gcn_ld_region_width(67108864)_u64	$d0, [$s0];
	gcn_ld_region_width(134217728)_u64	$d0, [$s0];
	gcn_ld_region_width(268435456)_u64	$d0, [$s0];
	gcn_ld_region_width(536870912)_u64	$d0, [$s0];
	gcn_ld_region_width(1073741824)_u64	$d0, [$s0];
	gcn_ld_region_width(2147483648)_u64	$d0, [$s0];
	gcn_ld_region_width(WAVESIZE)_u64	$d0, [$s0];
	gcn_ld_region_width(all)_u64	$d0, [$s0];
	// 
	// Next sample
	// 
	gcn_ld_region_s8	$s0, [$s0];
	// 
	gcn_ld_v2_region_s8	($s0,$s1), [$s0];
	gcn_ld_v3_region_s8	($s0,$s1,$s2), [$s0];
	gcn_ld_v4_region_s8	($s0,$s1,$s2,$s3), [$s0];
	gcn_ld_region_s8	$s0, [0];
	gcn_ld_region_align(2)_s8	$s0, [$s0];
	gcn_ld_region_align(4)_s8	$s0, [$s0];
	gcn_ld_region_align(8)_s8	$s0, [$s0];
	gcn_ld_region_align(16)_s8	$s0, [$s0];
	gcn_ld_region_align(32)_s8	$s0, [$s0];
	gcn_ld_region_align(64)_s8	$s0, [$s0];
	gcn_ld_region_align(128)_s8	$s0, [$s0];
	gcn_ld_region_equiv(1)_s8	$s0, [$s0];
	gcn_ld_region_equiv(2)_s8	$s0, [$s0];
	gcn_ld_region_equiv(255)_s8	$s0, [$s0];
	gcn_ld_region_width(2)_s8	$s0, [$s0];
	gcn_ld_region_width(4)_s8	$s0, [$s0];
	gcn_ld_region_width(8)_s8	$s0, [$s0];
	gcn_ld_region_width(16)_s8	$s0, [$s0];
	gcn_ld_region_width(32)_s8	$s0, [$s0];
	gcn_ld_region_width(64)_s8	$s0, [$s0];
	gcn_ld_region_width(128)_s8	$s0, [$s0];
	gcn_ld_region_width(256)_s8	$s0, [$s0];
	gcn_ld_region_width(512)_s8	$s0, [$s0];
	gcn_ld_region_width(1024)_s8	$s0, [$s0];
	gcn_ld_region_width(2048)_s8	$s0, [$s0];
	gcn_ld_region_width(4096)_s8	$s0, [$s0];
	gcn_ld_region_width(8192)_s8	$s0, [$s0];
	gcn_ld_region_width(16384)_s8	$s0, [$s0];
	gcn_ld_region_width(32768)_s8	$s0, [$s0];
	gcn_ld_region_width(65536)_s8	$s0, [$s0];
	gcn_ld_region_width(131072)_s8	$s0, [$s0];
	gcn_ld_region_width(262144)_s8	$s0, [$s0];
	gcn_ld_region_width(524288)_s8	$s0, [$s0];
	gcn_ld_region_width(1048576)_s8	$s0, [$s0];
	gcn_ld_region_width(2097152)_s8	$s0, [$s0];
	gcn_ld_region_width(4194304)_s8	$s0, [$s0];
	gcn_ld_region_width(8388608)_s8	$s0, [$s0];
	gcn_ld_region_width(16777216)_s8	$s0, [$s0];
	gcn_ld_region_width(33554432)_s8	$s0, [$s0];
	gcn_ld_region_width(67108864)_s8	$s0, [$s0];
	gcn_ld_region_width(134217728)_s8	$s0, [$s0];
	gcn_ld_region_width(268435456)_s8	$s0, [$s0];
	gcn_ld_region_width(536870912)_s8	$s0, [$s0];
	gcn_ld_region_width(1073741824)_s8	$s0, [$s0];
	gcn_ld_region_width(2147483648)_s8	$s0, [$s0];
	gcn_ld_region_width(WAVESIZE)_s8	$s0, [$s0];
	gcn_ld_region_width(all)_s8	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_ld_region_s16	$s0, [$s0];
	// 
	gcn_ld_v2_region_s16	($s0,$s1), [$s0];
	gcn_ld_v3_region_s16	($s0,$s1,$s2), [$s0];
	gcn_ld_v4_region_s16	($s0,$s1,$s2,$s3), [$s0];
	gcn_ld_region_s16	$s0, [0];
	gcn_ld_region_align(2)_s16	$s0, [$s0];
	gcn_ld_region_align(4)_s16	$s0, [$s0];
	gcn_ld_region_align(8)_s16	$s0, [$s0];
	gcn_ld_region_align(16)_s16	$s0, [$s0];
	gcn_ld_region_align(32)_s16	$s0, [$s0];
	gcn_ld_region_align(64)_s16	$s0, [$s0];
	gcn_ld_region_align(128)_s16	$s0, [$s0];
	gcn_ld_region_equiv(1)_s16	$s0, [$s0];
	gcn_ld_region_equiv(2)_s16	$s0, [$s0];
	gcn_ld_region_equiv(255)_s16	$s0, [$s0];
	gcn_ld_region_width(2)_s16	$s0, [$s0];
	gcn_ld_region_width(4)_s16	$s0, [$s0];
	gcn_ld_region_width(8)_s16	$s0, [$s0];
	gcn_ld_region_width(16)_s16	$s0, [$s0];
	gcn_ld_region_width(32)_s16	$s0, [$s0];
	gcn_ld_region_width(64)_s16	$s0, [$s0];
	gcn_ld_region_width(128)_s16	$s0, [$s0];
	gcn_ld_region_width(256)_s16	$s0, [$s0];
	gcn_ld_region_width(512)_s16	$s0, [$s0];
	gcn_ld_region_width(1024)_s16	$s0, [$s0];
	gcn_ld_region_width(2048)_s16	$s0, [$s0];
	gcn_ld_region_width(4096)_s16	$s0, [$s0];
	gcn_ld_region_width(8192)_s16	$s0, [$s0];
	gcn_ld_region_width(16384)_s16	$s0, [$s0];
	gcn_ld_region_width(32768)_s16	$s0, [$s0];
	gcn_ld_region_width(65536)_s16	$s0, [$s0];
	gcn_ld_region_width(131072)_s16	$s0, [$s0];
	gcn_ld_region_width(262144)_s16	$s0, [$s0];
	gcn_ld_region_width(524288)_s16	$s0, [$s0];
	gcn_ld_region_width(1048576)_s16	$s0, [$s0];
	gcn_ld_region_width(2097152)_s16	$s0, [$s0];
	gcn_ld_region_width(4194304)_s16	$s0, [$s0];
	gcn_ld_region_width(8388608)_s16	$s0, [$s0];
	gcn_ld_region_width(16777216)_s16	$s0, [$s0];
	gcn_ld_region_width(33554432)_s16	$s0, [$s0];
	gcn_ld_region_width(67108864)_s16	$s0, [$s0];
	gcn_ld_region_width(134217728)_s16	$s0, [$s0];
	gcn_ld_region_width(268435456)_s16	$s0, [$s0];
	gcn_ld_region_width(536870912)_s16	$s0, [$s0];
	gcn_ld_region_width(1073741824)_s16	$s0, [$s0];
	gcn_ld_region_width(2147483648)_s16	$s0, [$s0];
	gcn_ld_region_width(WAVESIZE)_s16	$s0, [$s0];
	gcn_ld_region_width(all)_s16	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_ld_region_s32	$s0, [$s0];
	// 
	gcn_ld_v2_region_s32	($s0,$s1), [$s0];
	gcn_ld_v3_region_s32	($s0,$s1,$s2), [$s0];
	gcn_ld_v4_region_s32	($s0,$s1,$s2,$s3), [$s0];
	gcn_ld_region_s32	$s0, [0];
	gcn_ld_region_align(2)_s32	$s0, [$s0];
	gcn_ld_region_align(4)_s32	$s0, [$s0];
	gcn_ld_region_align(8)_s32	$s0, [$s0];
	gcn_ld_region_align(16)_s32	$s0, [$s0];
	gcn_ld_region_align(32)_s32	$s0, [$s0];
	gcn_ld_region_align(64)_s32	$s0, [$s0];
	gcn_ld_region_align(128)_s32	$s0, [$s0];
	gcn_ld_region_equiv(1)_s32	$s0, [$s0];
	gcn_ld_region_equiv(2)_s32	$s0, [$s0];
	gcn_ld_region_equiv(255)_s32	$s0, [$s0];
	gcn_ld_region_width(2)_s32	$s0, [$s0];
	gcn_ld_region_width(4)_s32	$s0, [$s0];
	gcn_ld_region_width(8)_s32	$s0, [$s0];
	gcn_ld_region_width(16)_s32	$s0, [$s0];
	gcn_ld_region_width(32)_s32	$s0, [$s0];
	gcn_ld_region_width(64)_s32	$s0, [$s0];
	gcn_ld_region_width(128)_s32	$s0, [$s0];
	gcn_ld_region_width(256)_s32	$s0, [$s0];
	gcn_ld_region_width(512)_s32	$s0, [$s0];
	gcn_ld_region_width(1024)_s32	$s0, [$s0];
	gcn_ld_region_width(2048)_s32	$s0, [$s0];
	gcn_ld_region_width(4096)_s32	$s0, [$s0];
	gcn_ld_region_width(8192)_s32	$s0, [$s0];
	gcn_ld_region_width(16384)_s32	$s0, [$s0];
	gcn_ld_region_width(32768)_s32	$s0, [$s0];
	gcn_ld_region_width(65536)_s32	$s0, [$s0];
	gcn_ld_region_width(131072)_s32	$s0, [$s0];
	gcn_ld_region_width(262144)_s32	$s0, [$s0];
	gcn_ld_region_width(524288)_s32	$s0, [$s0];
	gcn_ld_region_width(1048576)_s32	$s0, [$s0];
	gcn_ld_region_width(2097152)_s32	$s0, [$s0];
	gcn_ld_region_width(4194304)_s32	$s0, [$s0];
	gcn_ld_region_width(8388608)_s32	$s0, [$s0];
	gcn_ld_region_width(16777216)_s32	$s0, [$s0];
	gcn_ld_region_width(33554432)_s32	$s0, [$s0];
	gcn_ld_region_width(67108864)_s32	$s0, [$s0];
	gcn_ld_region_width(134217728)_s32	$s0, [$s0];
	gcn_ld_region_width(268435456)_s32	$s0, [$s0];
	gcn_ld_region_width(536870912)_s32	$s0, [$s0];
	gcn_ld_region_width(1073741824)_s32	$s0, [$s0];
	gcn_ld_region_width(2147483648)_s32	$s0, [$s0];
	gcn_ld_region_width(WAVESIZE)_s32	$s0, [$s0];
	gcn_ld_region_width(all)_s32	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_ld_region_s64	$d0, [$s0];
	// 
	gcn_ld_v2_region_s64	($d0,$d1), [$s0];
	gcn_ld_v3_region_s64	($d0,$d1,$d2), [$s0];
	gcn_ld_v4_region_s64	($d0,$d1,$d2,$d3), [$s0];
	gcn_ld_region_s64	$d0, [0];
	gcn_ld_region_align(2)_s64	$d0, [$s0];
	gcn_ld_region_align(4)_s64	$d0, [$s0];
	gcn_ld_region_align(8)_s64	$d0, [$s0];
	gcn_ld_region_align(16)_s64	$d0, [$s0];
	gcn_ld_region_align(32)_s64	$d0, [$s0];
	gcn_ld_region_align(64)_s64	$d0, [$s0];
	gcn_ld_region_align(128)_s64	$d0, [$s0];
	gcn_ld_region_equiv(1)_s64	$d0, [$s0];
	gcn_ld_region_equiv(2)_s64	$d0, [$s0];
	gcn_ld_region_equiv(255)_s64	$d0, [$s0];
	gcn_ld_region_width(2)_s64	$d0, [$s0];
	gcn_ld_region_width(4)_s64	$d0, [$s0];
	gcn_ld_region_width(8)_s64	$d0, [$s0];
	gcn_ld_region_width(16)_s64	$d0, [$s0];
	gcn_ld_region_width(32)_s64	$d0, [$s0];
	gcn_ld_region_width(64)_s64	$d0, [$s0];
	gcn_ld_region_width(128)_s64	$d0, [$s0];
	gcn_ld_region_width(256)_s64	$d0, [$s0];
	gcn_ld_region_width(512)_s64	$d0, [$s0];
	gcn_ld_region_width(1024)_s64	$d0, [$s0];
	gcn_ld_region_width(2048)_s64	$d0, [$s0];
	gcn_ld_region_width(4096)_s64	$d0, [$s0];
	gcn_ld_region_width(8192)_s64	$d0, [$s0];
	gcn_ld_region_width(16384)_s64	$d0, [$s0];
	gcn_ld_region_width(32768)_s64	$d0, [$s0];
	gcn_ld_region_width(65536)_s64	$d0, [$s0];
	gcn_ld_region_width(131072)_s64	$d0, [$s0];
	gcn_ld_region_width(262144)_s64	$d0, [$s0];
	gcn_ld_region_width(524288)_s64	$d0, [$s0];
	gcn_ld_region_width(1048576)_s64	$d0, [$s0];
	gcn_ld_region_width(2097152)_s64	$d0, [$s0];
	gcn_ld_region_width(4194304)_s64	$d0, [$s0];
	gcn_ld_region_width(8388608)_s64	$d0, [$s0];
	gcn_ld_region_width(16777216)_s64	$d0, [$s0];
	gcn_ld_region_width(33554432)_s64	$d0, [$s0];
	gcn_ld_region_width(67108864)_s64	$d0, [$s0];
	gcn_ld_region_width(134217728)_s64	$d0, [$s0];
	gcn_ld_region_width(268435456)_s64	$d0, [$s0];
	gcn_ld_region_width(536870912)_s64	$d0, [$s0];
	gcn_ld_region_width(1073741824)_s64	$d0, [$s0];
	gcn_ld_region_width(2147483648)_s64	$d0, [$s0];
	gcn_ld_region_width(WAVESIZE)_s64	$d0, [$s0];
	gcn_ld_region_width(all)_s64	$d0, [$s0];
	// 
	// Next sample
	// 
	gcn_ld_region_f16	$s0, [$s0];
	// 
	gcn_ld_v2_region_f16	($s0,$s1), [$s0];
	gcn_ld_v3_region_f16	($s0,$s1,$s2), [$s0];
	gcn_ld_v4_region_f16	($s0,$s1,$s2,$s3), [$s0];
	gcn_ld_region_f16	$s0, [0];
	gcn_ld_region_align(2)_f16	$s0, [$s0];
	gcn_ld_region_align(4)_f16	$s0, [$s0];
	gcn_ld_region_align(8)_f16	$s0, [$s0];
	gcn_ld_region_align(16)_f16	$s0, [$s0];
	gcn_ld_region_align(32)_f16	$s0, [$s0];
	gcn_ld_region_align(64)_f16	$s0, [$s0];
	gcn_ld_region_align(128)_f16	$s0, [$s0];
	gcn_ld_region_equiv(1)_f16	$s0, [$s0];
	gcn_ld_region_equiv(2)_f16	$s0, [$s0];
	gcn_ld_region_equiv(255)_f16	$s0, [$s0];
	gcn_ld_region_width(2)_f16	$s0, [$s0];
	gcn_ld_region_width(4)_f16	$s0, [$s0];
	gcn_ld_region_width(8)_f16	$s0, [$s0];
	gcn_ld_region_width(16)_f16	$s0, [$s0];
	gcn_ld_region_width(32)_f16	$s0, [$s0];
	gcn_ld_region_width(64)_f16	$s0, [$s0];
	gcn_ld_region_width(128)_f16	$s0, [$s0];
	gcn_ld_region_width(256)_f16	$s0, [$s0];
	gcn_ld_region_width(512)_f16	$s0, [$s0];
	gcn_ld_region_width(1024)_f16	$s0, [$s0];
	gcn_ld_region_width(2048)_f16	$s0, [$s0];
	gcn_ld_region_width(4096)_f16	$s0, [$s0];
	gcn_ld_region_width(8192)_f16	$s0, [$s0];
	gcn_ld_region_width(16384)_f16	$s0, [$s0];
	gcn_ld_region_width(32768)_f16	$s0, [$s0];
	gcn_ld_region_width(65536)_f16	$s0, [$s0];
	gcn_ld_region_width(131072)_f16	$s0, [$s0];
	gcn_ld_region_width(262144)_f16	$s0, [$s0];
	gcn_ld_region_width(524288)_f16	$s0, [$s0];
	gcn_ld_region_width(1048576)_f16	$s0, [$s0];
	gcn_ld_region_width(2097152)_f16	$s0, [$s0];
	gcn_ld_region_width(4194304)_f16	$s0, [$s0];
	gcn_ld_region_width(8388608)_f16	$s0, [$s0];
	gcn_ld_region_width(16777216)_f16	$s0, [$s0];
	gcn_ld_region_width(33554432)_f16	$s0, [$s0];
	gcn_ld_region_width(67108864)_f16	$s0, [$s0];
	gcn_ld_region_width(134217728)_f16	$s0, [$s0];
	gcn_ld_region_width(268435456)_f16	$s0, [$s0];
	gcn_ld_region_width(536870912)_f16	$s0, [$s0];
	gcn_ld_region_width(1073741824)_f16	$s0, [$s0];
	gcn_ld_region_width(2147483648)_f16	$s0, [$s0];
	gcn_ld_region_width(WAVESIZE)_f16	$s0, [$s0];
	gcn_ld_region_width(all)_f16	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_ld_region_f32	$s0, [$s0];
	// 
	gcn_ld_v2_region_f32	($s0,$s1), [$s0];
	gcn_ld_v3_region_f32	($s0,$s1,$s2), [$s0];
	gcn_ld_v4_region_f32	($s0,$s1,$s2,$s3), [$s0];
	gcn_ld_region_f32	$s0, [0];
	gcn_ld_region_align(2)_f32	$s0, [$s0];
	gcn_ld_region_align(4)_f32	$s0, [$s0];
	gcn_ld_region_align(8)_f32	$s0, [$s0];
	gcn_ld_region_align(16)_f32	$s0, [$s0];
	gcn_ld_region_align(32)_f32	$s0, [$s0];
	gcn_ld_region_align(64)_f32	$s0, [$s0];
	gcn_ld_region_align(128)_f32	$s0, [$s0];
	gcn_ld_region_equiv(1)_f32	$s0, [$s0];
	gcn_ld_region_equiv(2)_f32	$s0, [$s0];
	gcn_ld_region_equiv(255)_f32	$s0, [$s0];
	gcn_ld_region_width(2)_f32	$s0, [$s0];
	gcn_ld_region_width(4)_f32	$s0, [$s0];
	gcn_ld_region_width(8)_f32	$s0, [$s0];
	gcn_ld_region_width(16)_f32	$s0, [$s0];
	gcn_ld_region_width(32)_f32	$s0, [$s0];
	gcn_ld_region_width(64)_f32	$s0, [$s0];
	gcn_ld_region_width(128)_f32	$s0, [$s0];
	gcn_ld_region_width(256)_f32	$s0, [$s0];
	gcn_ld_region_width(512)_f32	$s0, [$s0];
	gcn_ld_region_width(1024)_f32	$s0, [$s0];
	gcn_ld_region_width(2048)_f32	$s0, [$s0];
	gcn_ld_region_width(4096)_f32	$s0, [$s0];
	gcn_ld_region_width(8192)_f32	$s0, [$s0];
	gcn_ld_region_width(16384)_f32	$s0, [$s0];
	gcn_ld_region_width(32768)_f32	$s0, [$s0];
	gcn_ld_region_width(65536)_f32	$s0, [$s0];
	gcn_ld_region_width(131072)_f32	$s0, [$s0];
	gcn_ld_region_width(262144)_f32	$s0, [$s0];
	gcn_ld_region_width(524288)_f32	$s0, [$s0];
	gcn_ld_region_width(1048576)_f32	$s0, [$s0];
	gcn_ld_region_width(2097152)_f32	$s0, [$s0];
	gcn_ld_region_width(4194304)_f32	$s0, [$s0];
	gcn_ld_region_width(8388608)_f32	$s0, [$s0];
	gcn_ld_region_width(16777216)_f32	$s0, [$s0];
	gcn_ld_region_width(33554432)_f32	$s0, [$s0];
	gcn_ld_region_width(67108864)_f32	$s0, [$s0];
	gcn_ld_region_width(134217728)_f32	$s0, [$s0];
	gcn_ld_region_width(268435456)_f32	$s0, [$s0];
	gcn_ld_region_width(536870912)_f32	$s0, [$s0];
	gcn_ld_region_width(1073741824)_f32	$s0, [$s0];
	gcn_ld_region_width(2147483648)_f32	$s0, [$s0];
	gcn_ld_region_width(WAVESIZE)_f32	$s0, [$s0];
	gcn_ld_region_width(all)_f32	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_ld_region_f64	$d0, [$s0];
	// 
	gcn_ld_v2_region_f64	($d0,$d1), [$s0];
	gcn_ld_v3_region_f64	($d0,$d1,$d2), [$s0];
	gcn_ld_v4_region_f64	($d0,$d1,$d2,$d3), [$s0];
	gcn_ld_region_f64	$d0, [0];
	gcn_ld_region_align(2)_f64	$d0, [$s0];
	gcn_ld_region_align(4)_f64	$d0, [$s0];
	gcn_ld_region_align(8)_f64	$d0, [$s0];
	gcn_ld_region_align(16)_f64	$d0, [$s0];
	gcn_ld_region_align(32)_f64	$d0, [$s0];
	gcn_ld_region_align(64)_f64	$d0, [$s0];
	gcn_ld_region_align(128)_f64	$d0, [$s0];
	gcn_ld_region_equiv(1)_f64	$d0, [$s0];
	gcn_ld_region_equiv(2)_f64	$d0, [$s0];
	gcn_ld_region_equiv(255)_f64	$d0, [$s0];
	gcn_ld_region_width(2)_f64	$d0, [$s0];
	gcn_ld_region_width(4)_f64	$d0, [$s0];
	gcn_ld_region_width(8)_f64	$d0, [$s0];
	gcn_ld_region_width(16)_f64	$d0, [$s0];
	gcn_ld_region_width(32)_f64	$d0, [$s0];
	gcn_ld_region_width(64)_f64	$d0, [$s0];
	gcn_ld_region_width(128)_f64	$d0, [$s0];
	gcn_ld_region_width(256)_f64	$d0, [$s0];
	gcn_ld_region_width(512)_f64	$d0, [$s0];
	gcn_ld_region_width(1024)_f64	$d0, [$s0];
	gcn_ld_region_width(2048)_f64	$d0, [$s0];
	gcn_ld_region_width(4096)_f64	$d0, [$s0];
	gcn_ld_region_width(8192)_f64	$d0, [$s0];
	gcn_ld_region_width(16384)_f64	$d0, [$s0];
	gcn_ld_region_width(32768)_f64	$d0, [$s0];
	gcn_ld_region_width(65536)_f64	$d0, [$s0];
	gcn_ld_region_width(131072)_f64	$d0, [$s0];
	gcn_ld_region_width(262144)_f64	$d0, [$s0];
	gcn_ld_region_width(524288)_f64	$d0, [$s0];
	gcn_ld_region_width(1048576)_f64	$d0, [$s0];
	gcn_ld_region_width(2097152)_f64	$d0, [$s0];
	gcn_ld_region_width(4194304)_f64	$d0, [$s0];
	gcn_ld_region_width(8388608)_f64	$d0, [$s0];
	gcn_ld_region_width(16777216)_f64	$d0, [$s0];
	gcn_ld_region_width(33554432)_f64	$d0, [$s0];
	gcn_ld_region_width(67108864)_f64	$d0, [$s0];
	gcn_ld_region_width(134217728)_f64	$d0, [$s0];
	gcn_ld_region_width(268435456)_f64	$d0, [$s0];
	gcn_ld_region_width(536870912)_f64	$d0, [$s0];
	gcn_ld_region_width(1073741824)_f64	$d0, [$s0];
	gcn_ld_region_width(2147483648)_f64	$d0, [$s0];
	gcn_ld_region_width(WAVESIZE)_f64	$d0, [$s0];
	gcn_ld_region_width(all)_f64	$d0, [$s0];
	// 
	// Next sample
	// 
	gcn_ld_region_b128	$q0, [$s0];
	// 
	gcn_ld_region_b128	$q0, [0];
	gcn_ld_region_align(2)_b128	$q0, [$s0];
	gcn_ld_region_align(4)_b128	$q0, [$s0];
	gcn_ld_region_align(8)_b128	$q0, [$s0];
	gcn_ld_region_align(16)_b128	$q0, [$s0];
	gcn_ld_region_align(32)_b128	$q0, [$s0];
	gcn_ld_region_align(64)_b128	$q0, [$s0];
	gcn_ld_region_align(128)_b128	$q0, [$s0];
	gcn_ld_region_equiv(1)_b128	$q0, [$s0];
	gcn_ld_region_equiv(2)_b128	$q0, [$s0];
	gcn_ld_region_equiv(255)_b128	$q0, [$s0];
	gcn_ld_region_width(2)_b128	$q0, [$s0];
	gcn_ld_region_width(4)_b128	$q0, [$s0];
	gcn_ld_region_width(8)_b128	$q0, [$s0];
	gcn_ld_region_width(16)_b128	$q0, [$s0];
	gcn_ld_region_width(32)_b128	$q0, [$s0];
	gcn_ld_region_width(64)_b128	$q0, [$s0];
	gcn_ld_region_width(128)_b128	$q0, [$s0];
	gcn_ld_region_width(256)_b128	$q0, [$s0];
	gcn_ld_region_width(512)_b128	$q0, [$s0];
	gcn_ld_region_width(1024)_b128	$q0, [$s0];
	gcn_ld_region_width(2048)_b128	$q0, [$s0];
	gcn_ld_region_width(4096)_b128	$q0, [$s0];
	gcn_ld_region_width(8192)_b128	$q0, [$s0];
	gcn_ld_region_width(16384)_b128	$q0, [$s0];
	gcn_ld_region_width(32768)_b128	$q0, [$s0];
	gcn_ld_region_width(65536)_b128	$q0, [$s0];
	gcn_ld_region_width(131072)_b128	$q0, [$s0];
	gcn_ld_region_width(262144)_b128	$q0, [$s0];
	gcn_ld_region_width(524288)_b128	$q0, [$s0];
	gcn_ld_region_width(1048576)_b128	$q0, [$s0];
	gcn_ld_region_width(2097152)_b128	$q0, [$s0];
	gcn_ld_region_width(4194304)_b128	$q0, [$s0];
	gcn_ld_region_width(8388608)_b128	$q0, [$s0];
	gcn_ld_region_width(16777216)_b128	$q0, [$s0];
	gcn_ld_region_width(33554432)_b128	$q0, [$s0];
	gcn_ld_region_width(67108864)_b128	$q0, [$s0];
	gcn_ld_region_width(134217728)_b128	$q0, [$s0];
	gcn_ld_region_width(268435456)_b128	$q0, [$s0];
	gcn_ld_region_width(536870912)_b128	$q0, [$s0];
	gcn_ld_region_width(1073741824)_b128	$q0, [$s0];
	gcn_ld_region_width(2147483648)_b128	$q0, [$s0];
	gcn_ld_region_width(WAVESIZE)_b128	$q0, [$s0];
	gcn_ld_region_width(all)_b128	$q0, [$s0];
	// 
	// Next sample
	// 
	gcn_st_region_u8	$s0, [$s0];
	// 
	gcn_st_v2_region_u8	($s0,$s0), [$s0];
	gcn_st_v3_region_u8	($s0,$s0,$s0), [$s0];
	gcn_st_v4_region_u8	($s0,$s0,$s0,$s0), [$s0];
	gcn_st_v2_region_u8	($s0,$s1), [$s0];
	gcn_st_v3_region_u8	($s0,$s1,$s2), [$s0];
	gcn_st_v4_region_u8	($s0,$s1,$s2,$s3), [$s0];
	gcn_st_region_u8	1, [$s0];
	gcn_st_region_u8	255, [$s0];
	gcn_st_region_u8	WAVESIZE, [$s0];
	gcn_st_region_u8	$s0, [0];
	gcn_st_region_align(2)_u8	$s0, [$s0];
	gcn_st_region_align(4)_u8	$s0, [$s0];
	gcn_st_region_align(8)_u8	$s0, [$s0];
	gcn_st_region_align(16)_u8	$s0, [$s0];
	gcn_st_region_align(32)_u8	$s0, [$s0];
	gcn_st_region_align(64)_u8	$s0, [$s0];
	gcn_st_region_align(128)_u8	$s0, [$s0];
	gcn_st_region_equiv(1)_u8	$s0, [$s0];
	gcn_st_region_equiv(2)_u8	$s0, [$s0];
	gcn_st_region_equiv(255)_u8	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_st_region_u16	$s0, [$s0];
	// 
	gcn_st_v2_region_u16	($s0,$s0), [$s0];
	gcn_st_v3_region_u16	($s0,$s0,$s0), [$s0];
	gcn_st_v4_region_u16	($s0,$s0,$s0,$s0), [$s0];
	gcn_st_v2_region_u16	($s0,$s1), [$s0];
	gcn_st_v3_region_u16	($s0,$s1,$s2), [$s0];
	gcn_st_v4_region_u16	($s0,$s1,$s2,$s3), [$s0];
	gcn_st_region_u16	65535, [$s0];
	gcn_st_region_u16	WAVESIZE, [$s0];
	gcn_st_region_u16	$s0, [0];
	gcn_st_region_align(2)_u16	$s0, [$s0];
	gcn_st_region_align(4)_u16	$s0, [$s0];
	gcn_st_region_align(8)_u16	$s0, [$s0];
	gcn_st_region_align(16)_u16	$s0, [$s0];
	gcn_st_region_align(32)_u16	$s0, [$s0];
	gcn_st_region_align(64)_u16	$s0, [$s0];
	gcn_st_region_align(128)_u16	$s0, [$s0];
	gcn_st_region_equiv(1)_u16	$s0, [$s0];
	gcn_st_region_equiv(2)_u16	$s0, [$s0];
	gcn_st_region_equiv(255)_u16	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_st_region_u32	$s0, [$s0];
	// 
	gcn_st_v2_region_u32	($s0,$s0), [$s0];
	gcn_st_v3_region_u32	($s0,$s0,$s0), [$s0];
	gcn_st_v4_region_u32	($s0,$s0,$s0,$s0), [$s0];
	gcn_st_v2_region_u32	($s0,$s1), [$s0];
	gcn_st_v3_region_u32	($s0,$s1,$s2), [$s0];
	gcn_st_v4_region_u32	($s0,$s1,$s2,$s3), [$s0];
	gcn_st_region_u32	4294967295, [$s0];
	gcn_st_region_u32	WAVESIZE, [$s0];
	gcn_st_region_u32	$s0, [0];
	gcn_st_region_align(2)_u32	$s0, [$s0];
	gcn_st_region_align(4)_u32	$s0, [$s0];
	gcn_st_region_align(8)_u32	$s0, [$s0];
	gcn_st_region_align(16)_u32	$s0, [$s0];
	gcn_st_region_align(32)_u32	$s0, [$s0];
	gcn_st_region_align(64)_u32	$s0, [$s0];
	gcn_st_region_align(128)_u32	$s0, [$s0];
	gcn_st_region_equiv(1)_u32	$s0, [$s0];
	gcn_st_region_equiv(2)_u32	$s0, [$s0];
	gcn_st_region_equiv(255)_u32	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_st_region_u64	$d0, [$s0];
	// 
	gcn_st_v2_region_u64	($d0,$d0), [$s0];
	gcn_st_v3_region_u64	($d0,$d0,$d0), [$s0];
	gcn_st_v4_region_u64	($d0,$d0,$d0,$d0), [$s0];
	gcn_st_v2_region_u64	($d0,$d1), [$s0];
	gcn_st_v3_region_u64	($d0,$d1,$d2), [$s0];
	gcn_st_v4_region_u64	($d0,$d1,$d2,$d3), [$s0];
	gcn_st_region_u64	18446744073709551615, [$s0];
	gcn_st_region_u64	WAVESIZE, [$s0];
	gcn_st_region_u64	$d0, [0];
	gcn_st_region_align(2)_u64	$d0, [$s0];
	gcn_st_region_align(4)_u64	$d0, [$s0];
	gcn_st_region_align(8)_u64	$d0, [$s0];
	gcn_st_region_align(16)_u64	$d0, [$s0];
	gcn_st_region_align(32)_u64	$d0, [$s0];
	gcn_st_region_align(64)_u64	$d0, [$s0];
	gcn_st_region_align(128)_u64	$d0, [$s0];
	gcn_st_region_equiv(1)_u64	$d0, [$s0];
	gcn_st_region_equiv(2)_u64	$d0, [$s0];
	gcn_st_region_equiv(255)_u64	$d0, [$s0];
	// 
	// Next sample
	// 
	gcn_st_region_s8	$s0, [$s0];
	// 
	gcn_st_v2_region_s8	($s0,$s0), [$s0];
	gcn_st_v3_region_s8	($s0,$s0,$s0), [$s0];
	gcn_st_v4_region_s8	($s0,$s0,$s0,$s0), [$s0];
	gcn_st_v2_region_s8	($s0,$s1), [$s0];
	gcn_st_v3_region_s8	($s0,$s1,$s2), [$s0];
	gcn_st_v4_region_s8	($s0,$s1,$s2,$s3), [$s0];
	gcn_st_region_s8	1, [$s0];
	gcn_st_region_s8	-1, [$s0];
	gcn_st_region_s8	WAVESIZE, [$s0];
	gcn_st_region_s8	$s0, [0];
	gcn_st_region_align(2)_s8	$s0, [$s0];
	gcn_st_region_align(4)_s8	$s0, [$s0];
	gcn_st_region_align(8)_s8	$s0, [$s0];
	gcn_st_region_align(16)_s8	$s0, [$s0];
	gcn_st_region_align(32)_s8	$s0, [$s0];
	gcn_st_region_align(64)_s8	$s0, [$s0];
	gcn_st_region_align(128)_s8	$s0, [$s0];
	gcn_st_region_equiv(1)_s8	$s0, [$s0];
	gcn_st_region_equiv(2)_s8	$s0, [$s0];
	gcn_st_region_equiv(255)_s8	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_st_region_s16	$s0, [$s0];
	// 
	gcn_st_v2_region_s16	($s0,$s0), [$s0];
	gcn_st_v3_region_s16	($s0,$s0,$s0), [$s0];
	gcn_st_v4_region_s16	($s0,$s0,$s0,$s0), [$s0];
	gcn_st_v2_region_s16	($s0,$s1), [$s0];
	gcn_st_v3_region_s16	($s0,$s1,$s2), [$s0];
	gcn_st_v4_region_s16	($s0,$s1,$s2,$s3), [$s0];
	gcn_st_region_s16	-1, [$s0];
	gcn_st_region_s16	WAVESIZE, [$s0];
	gcn_st_region_s16	$s0, [0];
	gcn_st_region_align(2)_s16	$s0, [$s0];
	gcn_st_region_align(4)_s16	$s0, [$s0];
	gcn_st_region_align(8)_s16	$s0, [$s0];
	gcn_st_region_align(16)_s16	$s0, [$s0];
	gcn_st_region_align(32)_s16	$s0, [$s0];
	gcn_st_region_align(64)_s16	$s0, [$s0];
	gcn_st_region_align(128)_s16	$s0, [$s0];
	gcn_st_region_equiv(1)_s16	$s0, [$s0];
	gcn_st_region_equiv(2)_s16	$s0, [$s0];
	gcn_st_region_equiv(255)_s16	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_st_region_s32	$s0, [$s0];
	// 
	gcn_st_v2_region_s32	($s0,$s0), [$s0];
	gcn_st_v3_region_s32	($s0,$s0,$s0), [$s0];
	gcn_st_v4_region_s32	($s0,$s0,$s0,$s0), [$s0];
	gcn_st_v2_region_s32	($s0,$s1), [$s0];
	gcn_st_v3_region_s32	($s0,$s1,$s2), [$s0];
	gcn_st_v4_region_s32	($s0,$s1,$s2,$s3), [$s0];
	gcn_st_region_s32	-1, [$s0];
	gcn_st_region_s32	WAVESIZE, [$s0];
	gcn_st_region_s32	$s0, [0];
	gcn_st_region_align(2)_s32	$s0, [$s0];
	gcn_st_region_align(4)_s32	$s0, [$s0];
	gcn_st_region_align(8)_s32	$s0, [$s0];
	gcn_st_region_align(16)_s32	$s0, [$s0];
	gcn_st_region_align(32)_s32	$s0, [$s0];
	gcn_st_region_align(64)_s32	$s0, [$s0];
	gcn_st_region_align(128)_s32	$s0, [$s0];
	gcn_st_region_equiv(1)_s32	$s0, [$s0];
	gcn_st_region_equiv(2)_s32	$s0, [$s0];
	gcn_st_region_equiv(255)_s32	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_st_region_s64	$d0, [$s0];
	// 
	gcn_st_v2_region_s64	($d0,$d0), [$s0];
	gcn_st_v3_region_s64	($d0,$d0,$d0), [$s0];
	gcn_st_v4_region_s64	($d0,$d0,$d0,$d0), [$s0];
	gcn_st_v2_region_s64	($d0,$d1), [$s0];
	gcn_st_v3_region_s64	($d0,$d1,$d2), [$s0];
	gcn_st_v4_region_s64	($d0,$d1,$d2,$d3), [$s0];
	gcn_st_region_s64	-1, [$s0];
	gcn_st_region_s64	WAVESIZE, [$s0];
	gcn_st_region_s64	$d0, [0];
	gcn_st_region_align(2)_s64	$d0, [$s0];
	gcn_st_region_align(4)_s64	$d0, [$s0];
	gcn_st_region_align(8)_s64	$d0, [$s0];
	gcn_st_region_align(16)_s64	$d0, [$s0];
	gcn_st_region_align(32)_s64	$d0, [$s0];
	gcn_st_region_align(64)_s64	$d0, [$s0];
	gcn_st_region_align(128)_s64	$d0, [$s0];
	gcn_st_region_equiv(1)_s64	$d0, [$s0];
	gcn_st_region_equiv(2)_s64	$d0, [$s0];
	gcn_st_region_equiv(255)_s64	$d0, [$s0];
	// 
	// Next sample
	// 
	gcn_st_region_f16	$s0, [$s0];
	// 
	gcn_st_v2_region_f16	($s0,$s0), [$s0];
	gcn_st_v3_region_f16	($s0,$s0,$s0), [$s0];
	gcn_st_v4_region_f16	($s0,$s0,$s0,$s0), [$s0];
	gcn_st_v2_region_f16	($s0,$s1), [$s0];
	gcn_st_v3_region_f16	($s0,$s1,$s2), [$s0];
	gcn_st_v4_region_f16	($s0,$s1,$s2,$s3), [$s0];
	gcn_st_region_f16	0Hffff, [$s0];
	gcn_st_region_f16	$s0, [0];
	gcn_st_region_align(2)_f16	$s0, [$s0];
	gcn_st_region_align(4)_f16	$s0, [$s0];
	gcn_st_region_align(8)_f16	$s0, [$s0];
	gcn_st_region_align(16)_f16	$s0, [$s0];
	gcn_st_region_align(32)_f16	$s0, [$s0];
	gcn_st_region_align(64)_f16	$s0, [$s0];
	gcn_st_region_align(128)_f16	$s0, [$s0];
	gcn_st_region_equiv(1)_f16	$s0, [$s0];
	gcn_st_region_equiv(2)_f16	$s0, [$s0];
	gcn_st_region_equiv(255)_f16	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_st_region_f32	$s0, [$s0];
	// 
	gcn_st_v2_region_f32	($s0,$s0), [$s0];
	gcn_st_v3_region_f32	($s0,$s0,$s0), [$s0];
	gcn_st_v4_region_f32	($s0,$s0,$s0,$s0), [$s0];
	gcn_st_v2_region_f32	($s0,$s1), [$s0];
	gcn_st_v3_region_f32	($s0,$s1,$s2), [$s0];
	gcn_st_v4_region_f32	($s0,$s1,$s2,$s3), [$s0];
	gcn_st_region_f32	0Fffffffff, [$s0];
	gcn_st_region_f32	$s0, [0];
	gcn_st_region_align(2)_f32	$s0, [$s0];
	gcn_st_region_align(4)_f32	$s0, [$s0];
	gcn_st_region_align(8)_f32	$s0, [$s0];
	gcn_st_region_align(16)_f32	$s0, [$s0];
	gcn_st_region_align(32)_f32	$s0, [$s0];
	gcn_st_region_align(64)_f32	$s0, [$s0];
	gcn_st_region_align(128)_f32	$s0, [$s0];
	gcn_st_region_equiv(1)_f32	$s0, [$s0];
	gcn_st_region_equiv(2)_f32	$s0, [$s0];
	gcn_st_region_equiv(255)_f32	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_st_region_f64	$d0, [$s0];
	// 
	gcn_st_v2_region_f64	($d0,$d0), [$s0];
	gcn_st_v3_region_f64	($d0,$d0,$d0), [$s0];
	gcn_st_v4_region_f64	($d0,$d0,$d0,$d0), [$s0];
	gcn_st_v2_region_f64	($d0,$d1), [$s0];
	gcn_st_v3_region_f64	($d0,$d1,$d2), [$s0];
	gcn_st_v4_region_f64	($d0,$d1,$d2,$d3), [$s0];
	gcn_st_region_f64	0Dffffffffffffffff, [$s0];
	gcn_st_region_f64	$d0, [0];
	gcn_st_region_align(2)_f64	$d0, [$s0];
	gcn_st_region_align(4)_f64	$d0, [$s0];
	gcn_st_region_align(8)_f64	$d0, [$s0];
	gcn_st_region_align(16)_f64	$d0, [$s0];
	gcn_st_region_align(32)_f64	$d0, [$s0];
	gcn_st_region_align(64)_f64	$d0, [$s0];
	gcn_st_region_align(128)_f64	$d0, [$s0];
	gcn_st_region_equiv(1)_f64	$d0, [$s0];
	gcn_st_region_equiv(2)_f64	$d0, [$s0];
	gcn_st_region_equiv(255)_f64	$d0, [$s0];
	// 
	// Next sample
	// 
	gcn_st_region_b128	$q0, [$s0];
	// 
	gcn_st_region_b128	$q0, [0];
	gcn_st_region_align(2)_b128	$q0, [$s0];
	gcn_st_region_align(4)_b128	$q0, [$s0];
	gcn_st_region_align(8)_b128	$q0, [$s0];
	gcn_st_region_align(16)_b128	$q0, [$s0];
	gcn_st_region_align(32)_b128	$q0, [$s0];
	gcn_st_region_align(64)_b128	$q0, [$s0];
	gcn_st_region_align(128)_b128	$q0, [$s0];
	gcn_st_region_equiv(1)_b128	$q0, [$s0];
	gcn_st_region_equiv(2)_b128	$q0, [$s0];
	gcn_st_region_equiv(255)_b128	$q0, [$s0];
	// 
	// Next sample
	// 
	gcn_atomic_add_region_rlx_wv_u32	$s0, [$s0], $s0;
	// 
	gcn_atomic_add_region_acq_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_add_region_rel_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_add_region_ar_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_add_region_rlx_wv_u32	$s0, [$s0], 4294967295;
	gcn_atomic_add_region_rlx_wv_u32	$s0, [$s0], WAVESIZE;
	gcn_atomic_add_region_rlx_wv_u32	$s0, [0], $s0;
	gcn_atomic_add_region_rlx_wv_equiv(1)_u32	$s0, [$s0], $s0;
	gcn_atomic_add_region_rlx_wv_equiv(2)_u32	$s0, [$s0], $s0;
	gcn_atomic_add_region_rlx_wv_equiv(255)_u32	$s0, [$s0], $s0;
	gcn_atomic_add_region_rlx_wg_u32	$s0, [$s0], $s0;
	gcn_atomic_add_region_rlx_cmp_u32	$s0, [$s0], $s0;
	gcn_atomic_add_region_rlx_sys_u32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomic_dec_region_rlx_wv_u32	$s0, [$s0], $s0;
	// 
	gcn_atomic_dec_region_acq_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_dec_region_rel_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_dec_region_ar_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_dec_region_rlx_wv_u32	$s0, [$s0], 4294967295;
	gcn_atomic_dec_region_rlx_wv_u32	$s0, [$s0], WAVESIZE;
	gcn_atomic_dec_region_rlx_wv_u32	$s0, [0], $s0;
	gcn_atomic_dec_region_rlx_wv_equiv(1)_u32	$s0, [$s0], $s0;
	gcn_atomic_dec_region_rlx_wv_equiv(2)_u32	$s0, [$s0], $s0;
	gcn_atomic_dec_region_rlx_wv_equiv(255)_u32	$s0, [$s0], $s0;
	gcn_atomic_dec_region_rlx_wg_u32	$s0, [$s0], $s0;
	gcn_atomic_dec_region_rlx_cmp_u32	$s0, [$s0], $s0;
	gcn_atomic_dec_region_rlx_sys_u32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomic_inc_region_rlx_wv_u32	$s0, [$s0], $s0;
	// 
	gcn_atomic_inc_region_acq_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_inc_region_rel_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_inc_region_ar_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_inc_region_rlx_wv_u32	$s0, [$s0], 4294967295;
	gcn_atomic_inc_region_rlx_wv_u32	$s0, [$s0], WAVESIZE;
	gcn_atomic_inc_region_rlx_wv_u32	$s0, [0], $s0;
	gcn_atomic_inc_region_rlx_wv_equiv(1)_u32	$s0, [$s0], $s0;
	gcn_atomic_inc_region_rlx_wv_equiv(2)_u32	$s0, [$s0], $s0;
	gcn_atomic_inc_region_rlx_wv_equiv(255)_u32	$s0, [$s0], $s0;
	gcn_atomic_inc_region_rlx_wg_u32	$s0, [$s0], $s0;
	gcn_atomic_inc_region_rlx_cmp_u32	$s0, [$s0], $s0;
	gcn_atomic_inc_region_rlx_sys_u32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomic_max_region_rlx_wv_u32	$s0, [$s0], $s0;
	// 
	gcn_atomic_max_region_acq_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_max_region_rel_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_max_region_ar_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_max_region_rlx_wv_u32	$s0, [$s0], 4294967295;
	gcn_atomic_max_region_rlx_wv_u32	$s0, [$s0], WAVESIZE;
	gcn_atomic_max_region_rlx_wv_u32	$s0, [0], $s0;
	gcn_atomic_max_region_rlx_wv_equiv(1)_u32	$s0, [$s0], $s0;
	gcn_atomic_max_region_rlx_wv_equiv(2)_u32	$s0, [$s0], $s0;
	gcn_atomic_max_region_rlx_wv_equiv(255)_u32	$s0, [$s0], $s0;
	gcn_atomic_max_region_rlx_wg_u32	$s0, [$s0], $s0;
	gcn_atomic_max_region_rlx_cmp_u32	$s0, [$s0], $s0;
	gcn_atomic_max_region_rlx_sys_u32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomic_min_region_rlx_wv_u32	$s0, [$s0], $s0;
	// 
	gcn_atomic_min_region_acq_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_min_region_rel_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_min_region_ar_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_min_region_rlx_wv_u32	$s0, [$s0], 4294967295;
	gcn_atomic_min_region_rlx_wv_u32	$s0, [$s0], WAVESIZE;
	gcn_atomic_min_region_rlx_wv_u32	$s0, [0], $s0;
	gcn_atomic_min_region_rlx_wv_equiv(1)_u32	$s0, [$s0], $s0;
	gcn_atomic_min_region_rlx_wv_equiv(2)_u32	$s0, [$s0], $s0;
	gcn_atomic_min_region_rlx_wv_equiv(255)_u32	$s0, [$s0], $s0;
	gcn_atomic_min_region_rlx_wg_u32	$s0, [$s0], $s0;
	gcn_atomic_min_region_rlx_cmp_u32	$s0, [$s0], $s0;
	gcn_atomic_min_region_rlx_sys_u32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomic_sub_region_rlx_wv_u32	$s0, [$s0], $s0;
	// 
	gcn_atomic_sub_region_acq_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_rel_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_ar_wv_u32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_rlx_wv_u32	$s0, [$s0], 4294967295;
	gcn_atomic_sub_region_rlx_wv_u32	$s0, [$s0], WAVESIZE;
	gcn_atomic_sub_region_rlx_wv_u32	$s0, [0], $s0;
	gcn_atomic_sub_region_rlx_wv_equiv(1)_u32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_rlx_wv_equiv(2)_u32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_rlx_wv_equiv(255)_u32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_rlx_wg_u32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_rlx_cmp_u32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_rlx_sys_u32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomic_add_region_rlx_wv_s32	$s0, [$s0], $s0;
	// 
	gcn_atomic_add_region_acq_wv_s32	$s0, [$s0], $s0;
	gcn_atomic_add_region_rel_wv_s32	$s0, [$s0], $s0;
	gcn_atomic_add_region_ar_wv_s32	$s0, [$s0], $s0;
	gcn_atomic_add_region_rlx_wv_s32	$s0, [$s0], -1;
	gcn_atomic_add_region_rlx_wv_s32	$s0, [$s0], WAVESIZE;
	gcn_atomic_add_region_rlx_wv_s32	$s0, [0], $s0;
	gcn_atomic_add_region_rlx_wv_equiv(1)_s32	$s0, [$s0], $s0;
	gcn_atomic_add_region_rlx_wv_equiv(2)_s32	$s0, [$s0], $s0;
	gcn_atomic_add_region_rlx_wv_equiv(255)_s32	$s0, [$s0], $s0;
	gcn_atomic_add_region_rlx_wg_s32	$s0, [$s0], $s0;
	gcn_atomic_add_region_rlx_cmp_s32	$s0, [$s0], $s0;
	gcn_atomic_add_region_rlx_sys_s32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomic_max_region_rlx_wv_s32	$s0, [$s0], $s0;
	// 
	gcn_atomic_max_region_acq_wv_s32	$s0, [$s0], $s0;
	gcn_atomic_max_region_rel_wv_s32	$s0, [$s0], $s0;
	gcn_atomic_max_region_ar_wv_s32	$s0, [$s0], $s0;
	gcn_atomic_max_region_rlx_wv_s32	$s0, [$s0], -1;
	gcn_atomic_max_region_rlx_wv_s32	$s0, [$s0], WAVESIZE;
	gcn_atomic_max_region_rlx_wv_s32	$s0, [0], $s0;
	gcn_atomic_max_region_rlx_wv_equiv(1)_s32	$s0, [$s0], $s0;
	gcn_atomic_max_region_rlx_wv_equiv(2)_s32	$s0, [$s0], $s0;
	gcn_atomic_max_region_rlx_wv_equiv(255)_s32	$s0, [$s0], $s0;
	gcn_atomic_max_region_rlx_wg_s32	$s0, [$s0], $s0;
	gcn_atomic_max_region_rlx_cmp_s32	$s0, [$s0], $s0;
	gcn_atomic_max_region_rlx_sys_s32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomic_min_region_rlx_wv_s32	$s0, [$s0], $s0;
	// 
	gcn_atomic_min_region_acq_wv_s32	$s0, [$s0], $s0;
	gcn_atomic_min_region_rel_wv_s32	$s0, [$s0], $s0;
	gcn_atomic_min_region_ar_wv_s32	$s0, [$s0], $s0;
	gcn_atomic_min_region_rlx_wv_s32	$s0, [$s0], -1;
	gcn_atomic_min_region_rlx_wv_s32	$s0, [$s0], WAVESIZE;
	gcn_atomic_min_region_rlx_wv_s32	$s0, [0], $s0;
	gcn_atomic_min_region_rlx_wv_equiv(1)_s32	$s0, [$s0], $s0;
	gcn_atomic_min_region_rlx_wv_equiv(2)_s32	$s0, [$s0], $s0;
	gcn_atomic_min_region_rlx_wv_equiv(255)_s32	$s0, [$s0], $s0;
	gcn_atomic_min_region_rlx_wg_s32	$s0, [$s0], $s0;
	gcn_atomic_min_region_rlx_cmp_s32	$s0, [$s0], $s0;
	gcn_atomic_min_region_rlx_sys_s32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomic_sub_region_rlx_wv_s32	$s0, [$s0], $s0;
	// 
	gcn_atomic_sub_region_acq_wv_s32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_rel_wv_s32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_ar_wv_s32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_rlx_wv_s32	$s0, [$s0], -1;
	gcn_atomic_sub_region_rlx_wv_s32	$s0, [$s0], WAVESIZE;
	gcn_atomic_sub_region_rlx_wv_s32	$s0, [0], $s0;
	gcn_atomic_sub_region_rlx_wv_equiv(1)_s32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_rlx_wv_equiv(2)_s32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_rlx_wv_equiv(255)_s32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_rlx_wg_s32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_rlx_cmp_s32	$s0, [$s0], $s0;
	gcn_atomic_sub_region_rlx_sys_s32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomic_and_region_rlx_wv_b32	$s0, [$s0], $s0;
	// 
	gcn_atomic_and_region_acq_wv_b32	$s0, [$s0], $s0;
	gcn_atomic_and_region_rel_wv_b32	$s0, [$s0], $s0;
	gcn_atomic_and_region_ar_wv_b32	$s0, [$s0], $s0;
	gcn_atomic_and_region_rlx_wv_b32	$s0, [$s0], 4294967295;
	gcn_atomic_and_region_rlx_wv_b32	$s0, [$s0], WAVESIZE;
	gcn_atomic_and_region_rlx_wv_b32	$s0, [0], $s0;
	gcn_atomic_and_region_rlx_wv_equiv(1)_b32	$s0, [$s0], $s0;
	gcn_atomic_and_region_rlx_wv_equiv(2)_b32	$s0, [$s0], $s0;
	gcn_atomic_and_region_rlx_wv_equiv(255)_b32	$s0, [$s0], $s0;
	gcn_atomic_and_region_rlx_wg_b32	$s0, [$s0], $s0;
	gcn_atomic_and_region_rlx_cmp_b32	$s0, [$s0], $s0;
	gcn_atomic_and_region_rlx_sys_b32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomic_cas_region_rlx_wv_b32	$s0, [$s0], $s0, $s0;
	// 
	gcn_atomic_cas_region_acq_wv_b32	$s0, [$s0], $s0, $s0;
	gcn_atomic_cas_region_rel_wv_b32	$s0, [$s0], $s0, $s0;
	gcn_atomic_cas_region_ar_wv_b32	$s0, [$s0], $s0, $s0;
	gcn_atomic_cas_region_rlx_wv_b32	$s0, [$s0], 4294967295, $s0;
	gcn_atomic_cas_region_rlx_wv_b32	$s0, [$s0], WAVESIZE, $s0;
	gcn_atomic_cas_region_rlx_wv_b32	$s0, [$s0], $s0, 4294967295;
	gcn_atomic_cas_region_rlx_wv_b32	$s0, [$s0], $s0, WAVESIZE;
	gcn_atomic_cas_region_rlx_wv_b32	$s0, [0], $s0, $s0;
	gcn_atomic_cas_region_rlx_wv_equiv(1)_b32	$s0, [$s0], $s0, $s0;
	gcn_atomic_cas_region_rlx_wv_equiv(2)_b32	$s0, [$s0], $s0, $s0;
	gcn_atomic_cas_region_rlx_wv_equiv(255)_b32	$s0, [$s0], $s0, $s0;
	gcn_atomic_cas_region_rlx_wg_b32	$s0, [$s0], $s0, $s0;
	gcn_atomic_cas_region_rlx_cmp_b32	$s0, [$s0], $s0, $s0;
	gcn_atomic_cas_region_rlx_sys_b32	$s0, [$s0], $s0, $s0;
	// 
	// Next sample
	// 
	gcn_atomic_exch_region_rlx_wv_b32	$s0, [$s0], $s0;
	// 
	gcn_atomic_exch_region_acq_wv_b32	$s0, [$s0], $s0;
	gcn_atomic_exch_region_rel_wv_b32	$s0, [$s0], $s0;
	gcn_atomic_exch_region_ar_wv_b32	$s0, [$s0], $s0;
	gcn_atomic_exch_region_rlx_wv_b32	$s0, [$s0], 4294967295;
	gcn_atomic_exch_region_rlx_wv_b32	$s0, [$s0], WAVESIZE;
	gcn_atomic_exch_region_rlx_wv_b32	$s0, [0], $s0;
	gcn_atomic_exch_region_rlx_wv_equiv(1)_b32	$s0, [$s0], $s0;
	gcn_atomic_exch_region_rlx_wv_equiv(2)_b32	$s0, [$s0], $s0;
	gcn_atomic_exch_region_rlx_wv_equiv(255)_b32	$s0, [$s0], $s0;
	gcn_atomic_exch_region_rlx_wg_b32	$s0, [$s0], $s0;
	gcn_atomic_exch_region_rlx_cmp_b32	$s0, [$s0], $s0;
	gcn_atomic_exch_region_rlx_sys_b32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomic_ld_region_rlx_wv_b32	$s0, [$s0];
	// 
	gcn_atomic_ld_region_acq_wv_b32	$s0, [$s0];
	gcn_atomic_ld_region_rlx_wv_b32	$s0, [0];
	gcn_atomic_ld_region_rlx_wv_equiv(1)_b32	$s0, [$s0];
	gcn_atomic_ld_region_rlx_wv_equiv(2)_b32	$s0, [$s0];
	gcn_atomic_ld_region_rlx_wv_equiv(255)_b32	$s0, [$s0];
	gcn_atomic_ld_region_rlx_wg_b32	$s0, [$s0];
	gcn_atomic_ld_region_rlx_cmp_b32	$s0, [$s0];
	gcn_atomic_ld_region_rlx_sys_b32	$s0, [$s0];
	// 
	// Next sample
	// 
	gcn_atomic_or_region_rlx_wv_b32	$s0, [$s0], $s0;
	// 
	gcn_atomic_or_region_acq_wv_b32	$s0, [$s0], $s0;
	gcn_atomic_or_region_rel_wv_b32	$s0, [$s0], $s0;
	gcn_atomic_or_region_ar_wv_b32	$s0, [$s0], $s0;
	gcn_atomic_or_region_rlx_wv_b32	$s0, [$s0], 4294967295;
	gcn_atomic_or_region_rlx_wv_b32	$s0, [$s0], WAVESIZE;
	gcn_atomic_or_region_rlx_wv_b32	$s0, [0], $s0;
	gcn_atomic_or_region_rlx_wv_equiv(1)_b32	$s0, [$s0], $s0;
	gcn_atomic_or_region_rlx_wv_equiv(2)_b32	$s0, [$s0], $s0;
	gcn_atomic_or_region_rlx_wv_equiv(255)_b32	$s0, [$s0], $s0;
	gcn_atomic_or_region_rlx_wg_b32	$s0, [$s0], $s0;
	gcn_atomic_or_region_rlx_cmp_b32	$s0, [$s0], $s0;
	gcn_atomic_or_region_rlx_sys_b32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomic_xor_region_rlx_wv_b32	$s0, [$s0], $s0;
	// 
	gcn_atomic_xor_region_acq_wv_b32	$s0, [$s0], $s0;
	gcn_atomic_xor_region_rel_wv_b32	$s0, [$s0], $s0;
	gcn_atomic_xor_region_ar_wv_b32	$s0, [$s0], $s0;
	gcn_atomic_xor_region_rlx_wv_b32	$s0, [$s0], 4294967295;
	gcn_atomic_xor_region_rlx_wv_b32	$s0, [$s0], WAVESIZE;
	gcn_atomic_xor_region_rlx_wv_b32	$s0, [0], $s0;
	gcn_atomic_xor_region_rlx_wv_equiv(1)_b32	$s0, [$s0], $s0;
	gcn_atomic_xor_region_rlx_wv_equiv(2)_b32	$s0, [$s0], $s0;
	gcn_atomic_xor_region_rlx_wv_equiv(255)_b32	$s0, [$s0], $s0;
	gcn_atomic_xor_region_rlx_wg_b32	$s0, [$s0], $s0;
	gcn_atomic_xor_region_rlx_cmp_b32	$s0, [$s0], $s0;
	gcn_atomic_xor_region_rlx_sys_b32	$s0, [$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_add_region_rlx_wv_u32	[$s0], $s0;
	// 
	gcn_atomicNoRet_add_region_acq_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_add_region_rel_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_add_region_ar_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_add_region_rlx_wv_u32	[0], $s0;
	gcn_atomicNoRet_add_region_rlx_wv_u32	[$s0], 4294967295;
	gcn_atomicNoRet_add_region_rlx_wv_u32	[$s0], WAVESIZE;
	gcn_atomicNoRet_add_region_rlx_wv_equiv(1)_u32	[$s0], $s0;
	gcn_atomicNoRet_add_region_rlx_wv_equiv(2)_u32	[$s0], $s0;
	gcn_atomicNoRet_add_region_rlx_wv_equiv(255)_u32	[$s0], $s0;
	gcn_atomicNoRet_add_region_rlx_wg_u32	[$s0], $s0;
	gcn_atomicNoRet_add_region_rlx_cmp_u32	[$s0], $s0;
	gcn_atomicNoRet_add_region_rlx_sys_u32	[$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_dec_region_rlx_wv_u32	[$s0], $s0;
	// 
	gcn_atomicNoRet_dec_region_acq_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_dec_region_rel_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_dec_region_ar_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_dec_region_rlx_wv_u32	[0], $s0;
	gcn_atomicNoRet_dec_region_rlx_wv_u32	[$s0], 4294967295;
	gcn_atomicNoRet_dec_region_rlx_wv_u32	[$s0], WAVESIZE;
	gcn_atomicNoRet_dec_region_rlx_wv_equiv(1)_u32	[$s0], $s0;
	gcn_atomicNoRet_dec_region_rlx_wv_equiv(2)_u32	[$s0], $s0;
	gcn_atomicNoRet_dec_region_rlx_wv_equiv(255)_u32	[$s0], $s0;
	gcn_atomicNoRet_dec_region_rlx_wg_u32	[$s0], $s0;
	gcn_atomicNoRet_dec_region_rlx_cmp_u32	[$s0], $s0;
	gcn_atomicNoRet_dec_region_rlx_sys_u32	[$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_inc_region_rlx_wv_u32	[$s0], $s0;
	// 
	gcn_atomicNoRet_inc_region_acq_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_inc_region_rel_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_inc_region_ar_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_inc_region_rlx_wv_u32	[0], $s0;
	gcn_atomicNoRet_inc_region_rlx_wv_u32	[$s0], 4294967295;
	gcn_atomicNoRet_inc_region_rlx_wv_u32	[$s0], WAVESIZE;
	gcn_atomicNoRet_inc_region_rlx_wv_equiv(1)_u32	[$s0], $s0;
	gcn_atomicNoRet_inc_region_rlx_wv_equiv(2)_u32	[$s0], $s0;
	gcn_atomicNoRet_inc_region_rlx_wv_equiv(255)_u32	[$s0], $s0;
	gcn_atomicNoRet_inc_region_rlx_wg_u32	[$s0], $s0;
	gcn_atomicNoRet_inc_region_rlx_cmp_u32	[$s0], $s0;
	gcn_atomicNoRet_inc_region_rlx_sys_u32	[$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_max_region_rlx_wv_u32	[$s0], $s0;
	// 
	gcn_atomicNoRet_max_region_acq_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_max_region_rel_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_max_region_ar_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_max_region_rlx_wv_u32	[0], $s0;
	gcn_atomicNoRet_max_region_rlx_wv_u32	[$s0], 4294967295;
	gcn_atomicNoRet_max_region_rlx_wv_u32	[$s0], WAVESIZE;
	gcn_atomicNoRet_max_region_rlx_wv_equiv(1)_u32	[$s0], $s0;
	gcn_atomicNoRet_max_region_rlx_wv_equiv(2)_u32	[$s0], $s0;
	gcn_atomicNoRet_max_region_rlx_wv_equiv(255)_u32	[$s0], $s0;
	gcn_atomicNoRet_max_region_rlx_wg_u32	[$s0], $s0;
	gcn_atomicNoRet_max_region_rlx_cmp_u32	[$s0], $s0;
	gcn_atomicNoRet_max_region_rlx_sys_u32	[$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_min_region_rlx_wv_u32	[$s0], $s0;
	// 
	gcn_atomicNoRet_min_region_acq_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_min_region_rel_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_min_region_ar_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_min_region_rlx_wv_u32	[0], $s0;
	gcn_atomicNoRet_min_region_rlx_wv_u32	[$s0], 4294967295;
	gcn_atomicNoRet_min_region_rlx_wv_u32	[$s0], WAVESIZE;
	gcn_atomicNoRet_min_region_rlx_wv_equiv(1)_u32	[$s0], $s0;
	gcn_atomicNoRet_min_region_rlx_wv_equiv(2)_u32	[$s0], $s0;
	gcn_atomicNoRet_min_region_rlx_wv_equiv(255)_u32	[$s0], $s0;
	gcn_atomicNoRet_min_region_rlx_wg_u32	[$s0], $s0;
	gcn_atomicNoRet_min_region_rlx_cmp_u32	[$s0], $s0;
	gcn_atomicNoRet_min_region_rlx_sys_u32	[$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_sub_region_rlx_wv_u32	[$s0], $s0;
	// 
	gcn_atomicNoRet_sub_region_acq_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_rel_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_ar_wv_u32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_rlx_wv_u32	[0], $s0;
	gcn_atomicNoRet_sub_region_rlx_wv_u32	[$s0], 4294967295;
	gcn_atomicNoRet_sub_region_rlx_wv_u32	[$s0], WAVESIZE;
	gcn_atomicNoRet_sub_region_rlx_wv_equiv(1)_u32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_rlx_wv_equiv(2)_u32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_rlx_wv_equiv(255)_u32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_rlx_wg_u32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_rlx_cmp_u32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_rlx_sys_u32	[$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_add_region_rlx_wv_s32	[$s0], $s0;
	// 
	gcn_atomicNoRet_add_region_acq_wv_s32	[$s0], $s0;
	gcn_atomicNoRet_add_region_rel_wv_s32	[$s0], $s0;
	gcn_atomicNoRet_add_region_ar_wv_s32	[$s0], $s0;
	gcn_atomicNoRet_add_region_rlx_wv_s32	[0], $s0;
	gcn_atomicNoRet_add_region_rlx_wv_s32	[$s0], -1;
	gcn_atomicNoRet_add_region_rlx_wv_s32	[$s0], WAVESIZE;
	gcn_atomicNoRet_add_region_rlx_wv_equiv(1)_s32	[$s0], $s0;
	gcn_atomicNoRet_add_region_rlx_wv_equiv(2)_s32	[$s0], $s0;
	gcn_atomicNoRet_add_region_rlx_wv_equiv(255)_s32	[$s0], $s0;
	gcn_atomicNoRet_add_region_rlx_wg_s32	[$s0], $s0;
	gcn_atomicNoRet_add_region_rlx_cmp_s32	[$s0], $s0;
	gcn_atomicNoRet_add_region_rlx_sys_s32	[$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_max_region_rlx_wv_s32	[$s0], $s0;
	// 
	gcn_atomicNoRet_max_region_acq_wv_s32	[$s0], $s0;
	gcn_atomicNoRet_max_region_rel_wv_s32	[$s0], $s0;
	gcn_atomicNoRet_max_region_ar_wv_s32	[$s0], $s0;
	gcn_atomicNoRet_max_region_rlx_wv_s32	[0], $s0;
	gcn_atomicNoRet_max_region_rlx_wv_s32	[$s0], -1;
	gcn_atomicNoRet_max_region_rlx_wv_s32	[$s0], WAVESIZE;
	gcn_atomicNoRet_max_region_rlx_wv_equiv(1)_s32	[$s0], $s0;
	gcn_atomicNoRet_max_region_rlx_wv_equiv(2)_s32	[$s0], $s0;
	gcn_atomicNoRet_max_region_rlx_wv_equiv(255)_s32	[$s0], $s0;
	gcn_atomicNoRet_max_region_rlx_wg_s32	[$s0], $s0;
	gcn_atomicNoRet_max_region_rlx_cmp_s32	[$s0], $s0;
	gcn_atomicNoRet_max_region_rlx_sys_s32	[$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_min_region_rlx_wv_s32	[$s0], $s0;
	// 
	gcn_atomicNoRet_min_region_acq_wv_s32	[$s0], $s0;
	gcn_atomicNoRet_min_region_rel_wv_s32	[$s0], $s0;
	gcn_atomicNoRet_min_region_ar_wv_s32	[$s0], $s0;
	gcn_atomicNoRet_min_region_rlx_wv_s32	[0], $s0;
	gcn_atomicNoRet_min_region_rlx_wv_s32	[$s0], -1;
	gcn_atomicNoRet_min_region_rlx_wv_s32	[$s0], WAVESIZE;
	gcn_atomicNoRet_min_region_rlx_wv_equiv(1)_s32	[$s0], $s0;
	gcn_atomicNoRet_min_region_rlx_wv_equiv(2)_s32	[$s0], $s0;
	gcn_atomicNoRet_min_region_rlx_wv_equiv(255)_s32	[$s0], $s0;
	gcn_atomicNoRet_min_region_rlx_wg_s32	[$s0], $s0;
	gcn_atomicNoRet_min_region_rlx_cmp_s32	[$s0], $s0;
	gcn_atomicNoRet_min_region_rlx_sys_s32	[$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_sub_region_rlx_wv_s32	[$s0], $s0;
	// 
	gcn_atomicNoRet_sub_region_acq_wv_s32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_rel_wv_s32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_ar_wv_s32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_rlx_wv_s32	[0], $s0;
	gcn_atomicNoRet_sub_region_rlx_wv_s32	[$s0], -1;
	gcn_atomicNoRet_sub_region_rlx_wv_s32	[$s0], WAVESIZE;
	gcn_atomicNoRet_sub_region_rlx_wv_equiv(1)_s32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_rlx_wv_equiv(2)_s32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_rlx_wv_equiv(255)_s32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_rlx_wg_s32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_rlx_cmp_s32	[$s0], $s0;
	gcn_atomicNoRet_sub_region_rlx_sys_s32	[$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_and_region_rlx_wv_b32	[$s0], $s0;
	// 
	gcn_atomicNoRet_and_region_acq_wv_b32	[$s0], $s0;
	gcn_atomicNoRet_and_region_rel_wv_b32	[$s0], $s0;
	gcn_atomicNoRet_and_region_ar_wv_b32	[$s0], $s0;
	gcn_atomicNoRet_and_region_rlx_wv_b32	[0], $s0;
	gcn_atomicNoRet_and_region_rlx_wv_b32	[$s0], 4294967295;
	gcn_atomicNoRet_and_region_rlx_wv_b32	[$s0], WAVESIZE;
	gcn_atomicNoRet_and_region_rlx_wv_equiv(1)_b32	[$s0], $s0;
	gcn_atomicNoRet_and_region_rlx_wv_equiv(2)_b32	[$s0], $s0;
	gcn_atomicNoRet_and_region_rlx_wv_equiv(255)_b32	[$s0], $s0;
	gcn_atomicNoRet_and_region_rlx_wg_b32	[$s0], $s0;
	gcn_atomicNoRet_and_region_rlx_cmp_b32	[$s0], $s0;
	gcn_atomicNoRet_and_region_rlx_sys_b32	[$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_cas_region_rlx_wv_b32	[$s0], $s0, $s0;
	// 
	gcn_atomicNoRet_cas_region_acq_wv_b32	[$s0], $s0, $s0;
	gcn_atomicNoRet_cas_region_rel_wv_b32	[$s0], $s0, $s0;
	gcn_atomicNoRet_cas_region_ar_wv_b32	[$s0], $s0, $s0;
	gcn_atomicNoRet_cas_region_rlx_wv_b32	[$s0], $s0, 4294967295;
	gcn_atomicNoRet_cas_region_rlx_wv_b32	[$s0], $s0, WAVESIZE;
	gcn_atomicNoRet_cas_region_rlx_wv_b32	[0], $s0, $s0;
	gcn_atomicNoRet_cas_region_rlx_wv_b32	[$s0], 4294967295, $s0;
	gcn_atomicNoRet_cas_region_rlx_wv_b32	[$s0], WAVESIZE, $s0;
	gcn_atomicNoRet_cas_region_rlx_wv_equiv(1)_b32	[$s0], $s0, $s0;
	gcn_atomicNoRet_cas_region_rlx_wv_equiv(2)_b32	[$s0], $s0, $s0;
	gcn_atomicNoRet_cas_region_rlx_wv_equiv(255)_b32	[$s0], $s0, $s0;
	gcn_atomicNoRet_cas_region_rlx_wg_b32	[$s0], $s0, $s0;
	gcn_atomicNoRet_cas_region_rlx_cmp_b32	[$s0], $s0, $s0;
	gcn_atomicNoRet_cas_region_rlx_sys_b32	[$s0], $s0, $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_or_region_rlx_wv_b32	[$s0], $s0;
	// 
	gcn_atomicNoRet_or_region_acq_wv_b32	[$s0], $s0;
	gcn_atomicNoRet_or_region_rel_wv_b32	[$s0], $s0;
	gcn_atomicNoRet_or_region_ar_wv_b32	[$s0], $s0;
	gcn_atomicNoRet_or_region_rlx_wv_b32	[0], $s0;
	gcn_atomicNoRet_or_region_rlx_wv_b32	[$s0], 4294967295;
	gcn_atomicNoRet_or_region_rlx_wv_b32	[$s0], WAVESIZE;
	gcn_atomicNoRet_or_region_rlx_wv_equiv(1)_b32	[$s0], $s0;
	gcn_atomicNoRet_or_region_rlx_wv_equiv(2)_b32	[$s0], $s0;
	gcn_atomicNoRet_or_region_rlx_wv_equiv(255)_b32	[$s0], $s0;
	gcn_atomicNoRet_or_region_rlx_wg_b32	[$s0], $s0;
	gcn_atomicNoRet_or_region_rlx_cmp_b32	[$s0], $s0;
	gcn_atomicNoRet_or_region_rlx_sys_b32	[$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_st_region_rlx_wv_b32	[$s0], $s0;
	// 
	gcn_atomicNoRet_st_region_rel_wv_b32	[$s0], $s0;
	gcn_atomicNoRet_st_region_rlx_wv_b32	[0], $s0;
	gcn_atomicNoRet_st_region_rlx_wv_b32	[$s0], 4294967295;
	gcn_atomicNoRet_st_region_rlx_wv_b32	[$s0], WAVESIZE;
	gcn_atomicNoRet_st_region_rlx_wv_equiv(1)_b32	[$s0], $s0;
	gcn_atomicNoRet_st_region_rlx_wv_equiv(2)_b32	[$s0], $s0;
	gcn_atomicNoRet_st_region_rlx_wv_equiv(255)_b32	[$s0], $s0;
	gcn_atomicNoRet_st_region_rlx_wg_b32	[$s0], $s0;
	gcn_atomicNoRet_st_region_rlx_cmp_b32	[$s0], $s0;
	gcn_atomicNoRet_st_region_rlx_sys_b32	[$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomicNoRet_xor_region_rlx_wv_b32	[$s0], $s0;
	// 
	gcn_atomicNoRet_xor_region_acq_wv_b32	[$s0], $s0;
	gcn_atomicNoRet_xor_region_rel_wv_b32	[$s0], $s0;
	gcn_atomicNoRet_xor_region_ar_wv_b32	[$s0], $s0;
	gcn_atomicNoRet_xor_region_rlx_wv_b32	[0], $s0;
	gcn_atomicNoRet_xor_region_rlx_wv_b32	[$s0], 4294967295;
	gcn_atomicNoRet_xor_region_rlx_wv_b32	[$s0], WAVESIZE;
	gcn_atomicNoRet_xor_region_rlx_wv_equiv(1)_b32	[$s0], $s0;
	gcn_atomicNoRet_xor_region_rlx_wv_equiv(2)_b32	[$s0], $s0;
	gcn_atomicNoRet_xor_region_rlx_wv_equiv(255)_b32	[$s0], $s0;
	gcn_atomicNoRet_xor_region_rlx_wg_b32	[$s0], $s0;
	gcn_atomicNoRet_xor_region_rlx_cmp_b32	[$s0], $s0;
	gcn_atomicNoRet_xor_region_rlx_sys_b32	[$s0], $s0;
	// 
	// Next sample
	// 
	gcn_atomic_append_u32	$s0, [$s0];
	// 
	gcn_atomic_append_u32	$s0, [0];
	// 
	// Next sample
	// 
	gcn_atomic_consume_u32	$s0, [$s0];
	// 
	gcn_atomic_consume_u32	$s0, [0];
	// 
	// Next sample
	// 
	gcn_msad_b32	$s0, $s0, $s0, $s0;
	// 
	gcn_msad_b32	$s0, 4294967295, $s0, $s0;
	gcn_msad_b32	$s0, WAVESIZE, $s0, $s0;
	gcn_msad_b32	$s0, $s0, 4294967295, $s0;
	gcn_msad_b32	$s0, $s0, WAVESIZE, $s0;
	gcn_msad_b32	$s0, $s0, $s0, 4294967295;
	gcn_msad_b32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_sadw_b32	$s0, $s0, $s0, $s0;
	// 
	gcn_sadw_b32	$s0, 4294967295, $s0, $s0;
	gcn_sadw_b32	$s0, WAVESIZE, $s0, $s0;
	gcn_sadw_b32	$s0, $s0, 4294967295, $s0;
	gcn_sadw_b32	$s0, $s0, WAVESIZE, $s0;
	gcn_sadw_b32	$s0, $s0, $s0, 4294967295;
	gcn_sadw_b32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_sadd_b32	$s0, $s0, $s0, $s0;
	// 
	gcn_sadd_b32	$s0, 4294967295, $s0, $s0;
	gcn_sadd_b32	$s0, WAVESIZE, $s0, $s0;
	gcn_sadd_b32	$s0, $s0, 4294967295, $s0;
	gcn_sadd_b32	$s0, $s0, WAVESIZE, $s0;
	gcn_sadd_b32	$s0, $s0, $s0, 4294967295;
	gcn_sadd_b32	$s0, $s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_qsad_b64	$d0, $d0, $d0, $d0;
	// 
	gcn_qsad_b64	$d0, 18446744073709551615, $d0, $d0;
	gcn_qsad_b64	$d0, WAVESIZE, $d0, $d0;
	gcn_qsad_b64	$d0, $d0, 18446744073709551615, $d0;
	gcn_qsad_b64	$d0, $d0, WAVESIZE, $d0;
	gcn_qsad_b64	$d0, $d0, $d0, 18446744073709551615;
	gcn_qsad_b64	$d0, $d0, $d0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_mqsad_b64	$d0, $d0, $s0, $d0;
	// 
	gcn_mqsad_b64	$d0, 18446744073709551615, $s0, $d0;
	gcn_mqsad_b64	$d0, WAVESIZE, $s0, $d0;
	gcn_mqsad_b64	$d0, $d0, 4294967295, $d0;
	gcn_mqsad_b64	$d0, $d0, WAVESIZE, $d0;
	// 
	// Next sample
	// 
	gcn_mqsad4	($s0,$s1,$s2,$s3), $d0, $s0, ($s0,$s0,$s0,$s0);
	// 
	gcn_mqsad4	($s0,$s1,$s2,$s3), 18446744073709551615, $s0, ($s0,$s0,$s0,$s0);
	gcn_mqsad4	($s0,$s1,$s2,$s3), WAVESIZE, $s0, ($s0,$s0,$s0,$s0);
	gcn_mqsad4	($s0,$s1,$s2,$s3), $d0, 4294967295, ($s0,$s0,$s0,$s0);
	gcn_mqsad4	($s0,$s1,$s2,$s3), $d0, WAVESIZE, ($s0,$s0,$s0,$s0);
	gcn_mqsad4	($s0,$s1,$s2,$s3), $d0, $s0, ($s0,$s1,$s2,$s3);
	// 
	// Next sample
	// 
	gcn_sleep_u32	$s0;
	// 
	gcn_sleep_u32	4294967295;
	gcn_sleep_u32	WAVESIZE;
	// 
	// Next sample
	// 
	gcn_priority_u32	$s0;
	// 
	gcn_priority_u32	4294967295;
	gcn_priority_u32	WAVESIZE;
	// 
	// Next sample
	// 
	gcn_b4xchg_b32	$s0, $s0, 4294967295;
	// 
	gcn_b4xchg_b32	$s0, $s0, WAVESIZE;
	// 
	// Next sample
	// 
	gcn_b32xchg_b32	$s0, $s0, 4294967295;
	// 
	gcn_b32xchg_b32	$s0, $s0, WAVESIZE;

@aux_label_37:
	ret;
};
