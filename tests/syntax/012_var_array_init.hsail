module &moduleName:1:0:$full:$large:$default;
//
// HSAIL spec has the following req:
// If there is an initialization (d_init not zero), the value of dim must be the same as the length of the initializer.
// So 3d element must be initialized by 0 
//
const global_u32 &global_const33[2] = u32[](1, 2);
const global_u32 &global_const34[3] = u32[](1, 2, 3);
align(8) const global_u32 &globalConst0[3] = u32[](1, 2, 3);
global_u8 &t1[4] = u8[](255, 208, 184, 255);
global_u8 &t2[12] = u8[](255, 28, 31, 30, 31, 30, 31, 31, 30, 31, 255, 255);
global_u8 &t3[8] = u8[](255, 16, 0, 0, 0, 0, 255, 255);
global_s8 &t4[8] = s8[](-1, 16, 1, 2, -72, 0, -1, -1);
global_u16 &t5[4] = u16[](1, 2, 3, 4);
global_u16 &t6[7] = u16[](1, 2, 3, 4, -1, 0, -1);
global_s16 &t7[7] = s16[](1, 2, 3, 4, -1, 0, -1);
global_f16 &t8[3] = f16[](0H3ccd, 0H4200, 0H0000);
global_s32 &b1[3] = s32[](-1, 0, 123);
global_u32 &b2[3] = u32[](-1, 0, -1);
global_f32 &b3[2] = f32[](0Fbf800000, 0F3f800000);
global_s64 &b4[3] = s64[](-1, 0, 123);
global_u64 &b5[3] = u64[](-1, 0, -1);
global_f64 &b6[2] = f64[](0Dbff0000000000000, 0D3ff0000000000000);
global_u8x8 &b7[2] = u8x8[](u8x8(255,255,255,255,255,255,255,255), u8x8(0,0,0,0,0,0,0,0));
global_f16x4 &b8[2] = f16x4[](f16x4(0H0000,0H2e66,0H3266,0H34cd), f16x4(0H0000,0H2e66,0H3266,0H34cd));
global_sig64 &s0 = sig64(0);
global_sig64 &s1[1] = sig64[](sig64(0));
global_sig64 &s2[2] = sig64[](sig64(0), sig64(0));
global_sig64 &s3[3] = sig64[](sig64(0), sig64(0), sig64(0));

kernel &TestKernel()
{
	align(8) const global_u32 %globalConst0[3] = u32[](1, 2, 3);
	global_sig64 %s1 = sig64(0);
	global_sig64 %s2[2] = sig64[](sig64(0), sig64(0));
	global_sig64 %s3[3] = sig64[](sig64(0), sig64(0), sig64(0));
	global_sig64 %s4[3] = sig64[](sig64(0), sig64(0), sig64(0));
};
